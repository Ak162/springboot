{"version":3,"file":"static/js/6120.34a2dc7f.chunk.js","mappings":"qSAgBaA,G,QAAc,WAUzB,SAAAA,EACmBC,GAC6C,IAA7CC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAzBkB,KAyB2BG,EAAAA,EAAAA,GAAA,KAAAN,GAD7C,KAAWC,YAAXA,EACA,KAAYC,aAAZA,EAJX,KAAYK,aAAwB,E,CAiF3C,OA1EDC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,iBAAAC,MAOM,SAAeC,G,mJAuBlB,OAtBKC,EAAgC,CACpCD,QAAAA,EACAE,aAASR,EACTS,YAAQT,GAGJU,EAAU,IAAIC,SAAQ,SAACH,EAASC,GACpCF,EAAgBC,QAAUA,EAC1BD,EAAgBE,OAASA,CAC3B,IAEAG,KAAKV,aAAaW,KAAKN,GAEnBK,KAAKV,aAAaH,SAAWa,KAAKf,aAE/Be,KAAKE,mBACAF,KAAKG,oBAEfH,KAAKG,kBAAoBC,YACvB,kBAAMC,EAAKH,kBAAkB,GApDE,KAuDlCI,EAAAC,OAAA,SAEMT,GAAO,wBAAAQ,EAAAE,OAAA,GAAAC,EAAA,SACf,GAED,CAAAjB,IAAA,mBAAAC,MAIc,W,4IAW2C,OARjDiB,EAAQV,KAAKV,aACnBU,KAAKV,aAAe,GAChBU,KAAKG,oBACPQ,aAAaX,KAAKG,mBAClBH,KAAKG,uBAAoBf,GAIrBM,EAAUgB,EAAME,KAAI,SAAAC,GAAQ,OAAIA,EAASnB,OAAO,IAACoB,EAAAP,OAAA,SAEhDP,KAAKhB,YAAYU,GAASqB,MAC/B,SAAAC,GAGEN,EAAMO,SAAQ,SAACtB,EAAiBuB,GAC9B,IAAMC,EAAUH,EAAOE,GACvB,GAAIC,EAAQC,MAAO,CACjB,IAAMA,EAAQ,IAAIC,MAAMF,EAAQC,MAAME,SACrCF,EAAcG,KAAOJ,EAAQC,MAAMG,KACnCH,EAAcI,KAAOL,EAAQC,MAAMI,KACpC7B,EAAgBE,OAAQuB,EACzB,MACCzB,EAAgBC,QAASuB,EAAQH,OAErC,G,IAEF,SAAAI,GACEV,EAAMO,SAAQ,SAAAtB,GACZA,EAAgBE,OAAQuB,EAC1B,GACF,KACD,wBAAAN,EAAAN,OAAA,GAAAiB,EAAA,SACF,KAAA1C,CAAA,CAzFwB,ICoBd2C,EACX,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAcA,SAAAA,EAAYK,GAAqB,IAAAC,GAAA3C,EAAAA,EAAAA,GAAA,KAAAqC,GAE/B,IAAMO,EAASP,EAAgBQ,UAAUH,EAAOE,QAG1CE,EAAiBT,EAAgBU,kBAAkBL,EAAOM,SAC1DC,EAAaZ,EAAgBa,yBACjCJ,EACAF,EACA,aAKiB7C,IAAf2C,EAAOS,MACTF,EAAWE,IAAMT,EAAOS,KAG1BF,EAAWG,cAAgBV,EAAOW,WAKlC,IAAMC,EAAgBC,EAAAA,EAAcT,IACpCH,EAAAH,EAAAgB,KAAA,KAAMP,EAAYK,IAEbV,OAASF,EAAOE,OACrBD,EAAKU,WAAaX,EAAOW,WACzBV,EAAKc,cAAgBf,EAAOe,cAG5B,IAAMC,EACDC,OAAAC,OAAAD,OAAAC,OAAA,GAAAjB,EAAKM,YAAU,CAClBY,QACKF,OAAAC,OAAAD,OAAAC,OAAA,GAAAjB,EAAKM,WAAWY,SAAO,CAC1B,4BAA6B,gBAQc,OAA/ClB,EAAKmB,QAAU,IAAIpE,GALC,SAClBqE,GAEA,OAAOC,EAAAA,EAAAA,IAAUN,EAAmBO,KAAKC,UAAUH,GACrD,IAC+CpB,C,CA8FhD,OA3FDzC,EAAAA,EAAAA,GAAAmC,EAAA,EAAAlC,IAAA,gBAAAC,MAmGM,WAAa,IAAA+D,EAAA,K,wPACS,GACX,OADXnB,EAAUrC,KAAKqC,SACA,CAAAoB,EAAAC,KAAA,QACP,OADOD,EAAAC,KAAA,EACDC,EAAMC,cAAaf,KAAC,MAAC,OAA9B,GAAPR,EAAOoB,EAAAI,KAEO,CAAFJ,EAAAC,KAAA,cACJ,IAAIrC,MAAM,uBAAsB,cAAAoC,EAAAlD,OAAA,SAGnC8B,GAAO,wBAAAoB,EAAAjD,OAAA,GAAAsD,EAAA,SACf,IAAAtE,IAAA,gBAAAC,MAED,YACEsE,EAAAA,EAAAA,GAAQ,6D,GAGV,CAAAvE,IAAA,sBAAAC,MAMA,WACE,OAAOO,KAAKiC,SAAW+B,EAAAA,C,qBAazB,SAAKC,EAAgBC,GACnB,OAAOlE,KAAKmE,MAAMF,EAAQC,EAAQ,O,GAGpC,CAAA1E,IAAA,QAAAC,MASA,SACEwE,EACAC,EACAE,GACkB,IAAAC,EAAA,KAAlBC,EAAUpF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEJQ,EAAU,CACduE,OAAAA,EACAC,OAAAA,EACAK,GAAIvE,KAAKwE,UACTC,QAAS,OAOX,GAHwBzB,OAAAC,OAAA,GAAAjD,KAAKsC,YAClBY,QAAS,6BAA+BkB,EAE/CpE,KAAK8C,eAAiBwB,EACxB,OAAOtE,KAAKmD,QAAQuB,eAAehF,GAIrCM,KAAK2E,KAAK,QAAS,CACjBC,OAAQ,UACRlF,SAASmF,EAAAA,EAAAA,GAASnF,GAClBoF,SAAU9E,OAKZ,IAAM+E,EAAQ,CAAC,cAAe,mBAAmBC,QAAQf,IAAW,EACpE,GAAIc,GAAS/E,KAAKiF,OAAOhB,GACvB,OAAOjE,KAAKiF,OAAOhB,GAGrB,IAAMjD,GAASqC,EAAAA,EAAAA,IACbrD,KAAKsC,WACLgB,KAAKC,UAAU7D,GACfwF,GACAnE,MACA,SAAAC,GAQE,OAPAqD,EAAKM,KAAK,QAAS,CACjBC,OAAQ,WACRlF,QAAAA,EACAyF,SAAUnE,EACV8D,SAAUT,IAGLrD,C,IAET,SAAAI,GAQE,MAPAiD,EAAKM,KAAK,QAAS,CACjBC,OAAQ,WACRxD,MAAAA,EACA1B,QAAAA,EACAoF,SAAUT,IAGNjD,CACR,IAYF,OARI2D,IACF/E,KAAKiF,OAAOhB,GAAUjD,EACtBZ,YAAW,WAETiE,EAAKY,OAAOhB,GAAU,I,GACrB,IAGEjD,C,IACR,EAAAxB,IAAA,YAAAC,MArND,SAAiBwC,GACf,GAAc,MAAVA,EACF,OAAO+B,EAAAA,EAET,GAAI/B,GAA4B,kBAAXA,EACnB,MAAM,IAAIZ,MAAM,mBAAD+D,OACMnD,EAAM,yCAG7B,OAAOA,C,GAGT,CAAAzC,IAAA,aAAAC,MASA,SAAkB4C,GAChB,MAAuB,kBAAZA,GAAwBA,KAAWgD,EAAAA,EACrCA,EAAAA,EAAehD,IAIjBiD,EAAAA,EAAAA,GAAqBjD,E,GAG9B,CAAA7C,IAAA,oBAAAC,MAKA,SAAyB4C,GACvB,QAAgBjD,IAAZiD,EACF,OAAOkD,EAAAA,EAGT,GAAuB,kBAAZlD,EACT,MAAM,IAAIhB,MAAM,oBAAD+D,OACO/C,EAAO,0CAM/B,IADuBW,OAAOwC,OAAOC,EAAAA,GAASC,SAASrD,GAErD,MAAM,IAAIhB,MACR,oBAAA+D,OAAoB/C,EAAO,2CAAA+C,OACtBpC,OAAOwC,OAAOC,EAAAA,GAASE,KAAK,MAAK,MAG1C,OAAOtD,C,GAGT,CAAA7C,IAAA,2BAAAC,MAMA,SACE4C,EACAJ,EACA2D,GAEA,IAAMpD,EACK,SAAToD,GACIC,EAAAA,EAAAA,GAAkBxD,EAASJ,IAC3B6D,EAAAA,EAAAA,GAAgBzD,EAASJ,GAC/B,MAAO,CACLiB,QAAS6C,EAAAA,EACL,CACE,6BAA8BC,EAAAA,GAEhC,CACE,6BAA8BA,EAAAA,EAC9B,kBAAmB,QAEzBC,WAAW,EACXzD,IAAAA,E,KAEHd,CAAA,CAvJD,CAAQwE,EAAAA,GAkSV,SAAShB,EAAU/D,GAIjB,GAAIA,EAAQC,MAAO,CACjB,IAAMA,EAAa,IAAIC,MAAMF,EAAQC,MAAME,SAG3C,MAFAF,EAAMG,KAAOJ,EAAQC,MAAMG,KAC3BH,EAAMI,KAAOL,EAAQC,MAAMI,KACrBJ,CACP,CAED,OAAOD,EAAQH,MACjB,C,4FC/UM,SAAUmF,EAAOC,GACnBA,EAAWC,KAAKD,GAEhB,IADA,IAAM5E,EAAO,GACJ8E,EAAI,EAAGA,EAAIF,EAASjH,OAAQmH,IACjC9E,EAAKvB,KAAKmG,EAASG,WAAWD,IAElC,OAAOE,EAAAA,EAAAA,IAAShF,EACpB,CAEM,SAAUiF,EAAOjF,GACnBA,GAAOgF,EAAAA,EAAAA,IAAShF,GAEhB,IADA,IAAI4E,EAAW,GACNE,EAAI,EAAGA,EAAI9E,EAAKrC,OAAQmH,IAC7BF,GAAYM,OAAOC,aAAanF,EAAK8E,IAEzC,OAAOM,KAAKR,EAChB,C,4DChBMS,EAAS,I,SAAIC,ICJI,kBDuBvB,SAASC,EAAmB1E,GACxB,IAAM2E,EAAO,SAASC,EAAgBC,GACnB,MAAXA,IAAmBA,EAAU,CAAC,GAClC,IAAMC,EAA2B,GAEjC,GAAIF,EAAUG,gBAAqC,MAAnBF,EAAQG,OACpC,IACIF,EAAalH,KAAK,IAAIgH,EAAUG,eAAe/E,EAAS6E,EAAQG,Q,CAClE,MAAMjG,GAAQ,CAGpB,GAAI6F,EAAUK,mBAA2C,MAAtBJ,EAAQK,UACvC,IACIJ,EAAalH,KAAK,IAAIgH,EAAUK,kBAAkBjF,EAAS6E,EAAQK,W,CACrE,MAAMnG,GAAQ,CAGpB,GAAI6F,EAAUvF,iBAAuC,MAApBwF,EAAQM,QACrC,IACIL,EAAalH,KAAK,IAAIgH,EAAUvF,gBAAgBW,EAAS6E,EAAQM,S,CACnE,MAAMpG,GAAQ,CAGpB,GAAI6F,EAAUQ,gBAAqC,MAAnBP,EAAQQ,OAAgB,CAMpD,IACI,IAAM5C,EAAW,IAAImC,EAAUQ,eAAepF,EAAS6E,EAAQQ,QAC3D5C,EAASzC,UAAoD,IAHxD,CAAE,SAAU,UAAW,UAAW,WAGd2C,QAAQF,EAASzC,QAAQsF,OAClDR,EAAalH,KAAK6E,E,CAExB,MAAM1D,GAAQ,C,CAGpB,GAAI6F,EAAUW,oBAA6C,MAAvBV,EAAQW,WACxC,IACIV,EAAalH,KAAK,IAAIgH,EAAUW,mBAAmBvF,G,CACrD,MAAMjB,GAAQ,CAGpB,GAAI6F,EAAUa,cAAiC,MAAjBZ,EAAQa,KAClC,IACI,IACMjD,EAAW,IAAImC,EAAUa,aAAazF,EAAS6E,EAAQa,MACzDjD,EAASzC,UAAoD,IAFpD,CAAE,WAEc2C,QAAQF,EAASzC,QAAQsF,OAClDR,EAAalH,KAAK6E,E,CAExB,MAAM1D,GAAQ,CAGpB,GAA4B,IAAxB+F,EAAahI,OAAgB,OAAO,KAExC,GAAI8H,EAAUe,iBAAkB,CAC5B,IAAIC,EAAS,EAMb,OALsB,MAAlBf,EAAQe,OACRA,EAASf,EAAQe,OACE,cAAZ5F,IACP4F,EAAS,GAEN,IAAIhB,EAAUe,iBAAiBb,EAAcc,E,CAGxD,OAAOd,EAAa,EACxB,EAMA,OAJAH,EAAKkB,UAAY,SAAS7F,GACtB,OAAO0E,EAAmB1E,EAC9B,EAEO2E,CACX,CAEA,SAASmB,EAAmB3F,EAAaH,GACrC,IAAM2E,EAAO,SAASC,EAAgBC,GAClC,OAAID,EAAUf,gBACH,IAAIe,EAAUf,gBAAgB1D,EAAKH,GAGvC,IACX,EAMA,OAJA2E,EAAKkB,UAAY,SAAS7F,GACtB,OAAO8F,EAAmB3F,EAAKH,EACnC,EAEO2E,CACX,CAEA,IAAMoB,EAAqB,CACvBC,QAAS,EACTC,WAAY,6CACZX,KAAM,YACNY,iBAAkBxB,EAAmB,cAGnCyB,EAAmB,CACrBH,QAAS,EACTC,WAAY,6CACZX,KAAM,UACNY,iBAAkBxB,EAAmB,YAGnC0B,EAAyB,CAC3BJ,QAAS,GACTV,KAAM,gBACNY,iBAAkBJ,EAAmB,sCAAuC,kBAI1EO,EAAwC,CAC1CC,YAAa,CAAEN,QAAS,EAAGV,KAAM,eAEjCS,UAAWA,EACXQ,QAASR,EAETS,OAAQ,CAAER,QAAS,EAAGV,KAAM,UAE5Ba,QAASA,EACTM,QAASN,EAETO,QAAS,CACLV,QAAS,EACTC,WAAY,6CACZX,KAAM,UACNY,iBAAkBxB,EAAmB,YAGzCiC,MAAO,CACHX,QAAS,GACTV,KAAM,QACNY,iBAAkBxB,EAAmB,UAGzCkC,OAAQ,CACJZ,QAAS,EACTC,WAAY,6CACZX,KAAM,SACNY,iBAAkBxB,EAAmB,WAGzCmC,SAAU,CAAEb,QAAS,QAASV,KAAM,YAEpCwB,QAAS,CACLd,QAAS,SACTV,KAAM,UACNY,iBAAkBxB,EAAmB,YAKzCqC,QAAS,CACLf,QAAS,GACTV,KAAM,UACNY,iBAAkBJ,EAAmB,mCAAqC,YAG9EkB,cAAe,CAAEhB,QAAS,GAAIV,KAAM,iBAEpCc,cAAeA,EACfa,eAAgBb,EAEhBc,aAAc,CACVlB,QAAS,EACTV,KAAM,eACNY,iBAAkBJ,EAAmB,qCAAuC,iBAGhFqB,KAAM,CAAEnB,QAAS,IAAKV,KAAM,QAE5B8B,MAAO,CACHpB,QAAS,IACTV,KAAM,QACNY,iBAAkBxB,EAAmB,UAEzC2C,SAAU,CAAErB,QAAS,MAAOV,KAAM,YAElCgC,SAAU,CACNtB,QAAS,GACTV,KAAM,WACNY,iBAAkBxB,EAAmB,aAEzC,iBAAkB,CAAEsB,QAAS,GAAIV,KAAM,kBACvC,kBAAmB,CAAEU,QAAS,IAAKV,KAAM,mBAEzCiC,SAAU,CAAEvB,QAAS,MAAOV,KAAM,YAClC,mBAAoB,CAAEU,QAAS,OAAQV,KAAM,oBAC7C,kBAAmB,CAAEU,QAAS,OAAQV,KAAM,mBAE5CkC,IAAK,CAAExB,QAAS,GAAIV,KAAM,OAC1BmC,KAAM,CAAEzB,QAAS,GAAIV,KAAM,SASzB,SAAUrC,EAAWjD,GAEvB,GAAe,MAAXA,EAAmB,OAAO,KAE9B,GAAwB,kBAAbA,EAAuB,CAC9B,IAAK,IAAMsF,KAAQe,EAAU,CACzB,IAAMqB,EAAWrB,EAASf,GAC1B,GAAIoC,EAAS1B,UAAYhG,EACrB,MAAO,CACHsF,KAAMoC,EAASpC,KACfU,QAAS0B,EAAS1B,QAClBC,WAAayB,EAASzB,YAAc,KACpCC,iBAAmBwB,EAASxB,kBAAoB,K,CAK5D,MAAO,CACHF,QAAShG,EACTsF,KAAM,U,CAId,GAAwB,kBAAbtF,EAAuB,CAC9B,IAAM0H,EAAWrB,EAASrG,GAC1B,OAAgB,MAAZ0H,EAA2B,KACxB,CACHpC,KAAMoC,EAASpC,KACfU,QAAS0B,EAAS1B,QAClBC,WAAYyB,EAASzB,WACrBC,iBAAmBwB,EAASxB,kBAAoB,K,CAIxD,IAAMwB,EAAYrB,EAASrG,EAAQsF,MAGnC,IAAKoC,EAID,MAHgC,kBAArB1H,EAAQgG,SACfxB,EAAOmD,mBAAmB,0BAA2B,UAAW3H,GAE7DA,EAIa,IAApBA,EAAQgG,SAAiBhG,EAAQgG,UAAY0B,EAAS1B,SACtDxB,EAAOmD,mBAAmB,2BAA4B,UAAW3H,GAKrE,IAhQqB5C,EAgQjBwK,EAAuC5H,EAAQkG,kBAAoB,KAUvE,OATuB,MAAnB0B,GAA2BF,EAASxB,mBAEhC0B,GAnQaxK,EAkQGsK,EAASxB,mBAjQY,oBAArB9I,EAAMyI,UAkQJ6B,EAASxB,iBAAiBL,UAAU7F,GAEpC0H,EAASxB,kBAK5B,CACHZ,KAAMtF,EAAQsF,KACdU,QAAS0B,EAAS1B,QAClBC,WAAajG,EAAQiG,YAAcyB,EAASzB,YAAc,KAC1DC,iBAAkB0B,EAE1B,C,+hBE/RMpD,EAAS,IAAIC,EAAAA,GCJI,oBDMjB,SAAUoD,EAAqCC,EAAWxC,EAASlI,GACrEuD,OAAOoH,eAAeD,EAAQxC,EAAM,CAChC0C,YAAY,EACZ5K,MAAOA,EACP6K,UAAU,GAElB,CAGM,SAAUC,EAAaC,EAAWhL,GACpC,IAAK,IAAI8G,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIkE,EAAKhL,GAAQ,OAAOgL,EAAKhL,GAC7B,IAAKgL,EAAKC,WAAwC,kBAApBD,EAAKC,UAA2B,MAC9DD,EAAOxH,OAAO0H,eAAeF,EAAKC,WAAWE,W,CAEjD,OAAO,IACX,CASM,SAAgBC,EAAqBT,G,uIAMvB,OALVU,EAAmC7H,OAAO8H,KAAKX,GAAQvJ,KAAI,SAACpB,GAC9D,IAAMC,EAAQ0K,EAA4B3K,GAC1C,OAAOO,QAAQH,QAAQH,GAAOsB,MAAK,SAACgK,GAAC,MAAM,CAAEvL,IAAKA,EAAKC,MAAOsL,EAAG,GACrE,IAAEzK,EAAAoD,KAAA,EAEoB3D,QAAQiL,IAAIH,GAAS,OAA9B,OAAPI,EAAO3K,EAAAuD,KAAAvD,EAAAC,OAAA,SAEN0K,EAAQC,QAAO,SAACC,EAAOnK,GAE1B,OADAmK,EAAgBnK,EAAOxB,KAAQwB,EAAOvB,MAC/B0L,CACX,GAAM,CAAC,IAAG,wBAAA7K,EAAAE,OAAA,GAAAC,EAAA,I,CAGR,SAAU2K,EAAgBjB,EAAakB,GACpClB,GAA6B,kBAAZA,GAClBtD,EAAOmD,mBAAmB,iBAAkB,SAAUG,GAG1DnH,OAAO8H,KAAKX,GAAQlJ,SAAQ,SAACzB,GACpB6L,EAAW7L,IACZqH,EAAOmD,mBAAmB,wBAA0BxK,EAAK,eAAiBA,EAAK2K,EAEvF,GACJ,CAEM,SAAUmB,EAAenB,GAC3B,IAAMnJ,EAAc,CAAC,EACrB,IAAK,IAAMxB,KAAO2K,EAAUnJ,EAAOxB,GAAO2K,EAAO3K,GACjD,OAAOwB,CACX,CAEA,IAAMuK,EAAqC,CAAEC,QAAQ,EAAMC,SAAS,EAAM,UAAY,EAAMC,QAAQ,EAAMC,QAAQ,GAElH,SAASC,EAAUzB,GAGf,QAAe/K,IAAX+K,GAAmC,OAAXA,GAAmBoB,SAAcpB,GAAY,OAAO,EAEhF,GAAI0B,MAAMC,QAAQ3B,IAA8B,kBAAZA,EAAsB,CACtD,IAAKnH,OAAO+I,SAAS5B,GAAW,OAAO,EAGvC,IADA,IAAMW,EAAO9H,OAAO8H,KAAKX,GAChB7D,EAAI,EAAGA,EAAIwE,EAAK3L,OAAQmH,IAAK,CAClC,IAAI7G,EAAa,KACjB,IACIA,EAAQ0K,EAAOW,EAAKxE,G,CACtB,MAAOlF,GAGL,Q,CAGJ,IAAKwK,EAAUnM,GAAU,OAAO,C,CAGpC,OAAO,C,CAGX,OAAOoH,EAAOmD,mBAAmB,mBAAD5E,cAA4B+E,GAAY,SAAUA,EACtF,CAIA,SAAS6B,EAAU7B,GAEf,GAAIyB,EAAUzB,GAAW,OAAOA,EAGhC,GAAI0B,MAAMC,QAAQ3B,GACd,OAAOnH,OAAOiJ,OAAO9B,EAAOvJ,KAAI,SAACsL,GAAI,OAAKrH,EAASqH,EAAK,KAG5D,GAAuB,kBAAZ/B,EAAsB,CAC7B,IAAMnJ,EAAmC,CAAC,EAC1C,IAAK,IAAMxB,KAAO2K,EAAQ,CACtB,IAAM1K,EAAQ0K,EAAO3K,QACPJ,IAAVK,GACJyK,EAAelJ,EAAQxB,EAAKqF,EAASpF,G,CAGzC,OAAOuB,C,CAGX,OAAO6F,EAAOmD,mBAAmB,mBAAD5E,cAA4B+E,GAAY,SAAUA,EACtF,CAEM,SAAUtF,EAAYsF,GACxB,OAAO6B,EAAU7B,EACrB,CAEO,IAAMgC,GAAW5M,EAAAA,EAAAA,IACpB,SAAA4M,EAAYC,GACR,IAAK,IAAM5M,KAD6BH,EAAAA,EAAAA,GAAA,KAAA8M,GACtBC,EACRpM,KAAMR,GAAOqF,EAASuH,EAAK5M,GAEzC,G,wDE/HG,IAAM6M,EAAU,iB,idCSjBxF,EAAS,IAAIC,EAAAA,GCTI,yBDWjBwF,EAAwC,CAC1C,aAAc,kBAAmB,UAAW,aAAc,OAAQ,OAAQ,WAAY,WAAY,eAAgB,uBAAwB,QAAS,KAAM,OAAQ,SAG/JC,EAAgB,CAClBzF,EAAAA,GAAO0F,OAAOC,mBACd3F,EAAAA,GAAO0F,OAAOE,cACd5F,EAAAA,GAAO0F,OAAOG,yBAuCIC,EAAM,WA8BxB,SAAAA,KAAAvN,EAAAA,EAAAA,GAAA,KAAAuN,GACI/F,EAAOgG,cAAc,gBAADD,EAAA,KAAAjC,iBAAA,EAAaiC,IACjC1C,EAAAA,EAAAA,IAAelK,KAAM,aAAa,EACtC,CAsPC,OAlPDT,EAAAA,EAAAA,GAAAqN,EAAA,EAAApN,IAAA,aAAAC,MAEM,SAAWqN,G,+HAEN,OADP9M,KAAK+M,eAAe,cAAczM,EAAAoD,KAAA,EACrB1D,KAAK8E,SAASkI,WAAWhN,KAAKiN,aAAcH,GAAS,cAAAxM,EAAAC,OAAA,SAAAD,EAAAuD,MAAA,wBAAAvD,EAAAE,OAAA,GAAAC,EAAA,S,GACrE,CAAAjB,IAAA,sBAAAC,MAEK,SAAoBqN,G,+HAEf,OADP9M,KAAK+M,eAAe,uBAAuBjM,EAAA4C,KAAA,EAC9B1D,KAAK8E,SAASoI,oBAAoBlN,KAAKiN,aAAcH,GAAS,cAAAhM,EAAAP,OAAA,SAAAO,EAAA+C,MAAA,wBAAA/C,EAAAN,OAAA,GAAAiB,EAAA,S,GAG/E,CAAAjC,IAAA,cAAAC,MACM,SAAY0N,G,qIAEH,OADXnN,KAAK+M,eAAe,eAAetJ,EAAAC,KAAA,GAClBkH,EAAAA,EAAAA,IAAkB5K,KAAKoN,iBAAiBD,IAAa,OAC/D,OADDE,EAAE5J,EAAAI,KAAAJ,EAAAC,KAAG,EACE1D,KAAK8E,SAASwI,YAAYD,GAAG,cAAA5J,EAAAlD,OAAA,SAAAkD,EAAAI,MAAA,wBAAAJ,EAAAjD,OAAA,GAAAsD,EAAA,S,GAG9C,CAAAtE,IAAA,OAAAC,MACM,SAAK0N,EAA6CL,G,qIAEzC,OADX9M,KAAK+M,eAAe,QAAQQ,EAAA7J,KAAA,GACXkH,EAAAA,EAAAA,IAAkB5K,KAAKoN,iBAAiBD,IAAa,OAC/D,OADDE,EAAEE,EAAA1J,KAAA0J,EAAA7J,KAAG,EACE1D,KAAK8E,SAASjC,KAAKwK,EAAIP,GAAS,cAAAS,EAAAhN,OAAA,SAAAgN,EAAA1J,MAAA,wBAAA0J,EAAA/M,OAAA,GAAAgN,EAAA,S,GAGjD,CAAAhO,IAAA,kBAAAC,MACM,SAAgB0N,G,uIAEP,OADXnN,KAAK+M,eAAe,mBAAmBU,EAAA/J,KAAA,EACtB1D,KAAK0N,oBAAoBP,GAAY,OACrC,OADXE,EAAEI,EAAA5J,KAAA4J,EAAA/J,KAAG,EACY1D,KAAK2N,gBAAgBN,GAAG,OACxC,OADDO,EAAQH,EAAA5J,KAAA4J,EAAA/J,KAAG,EACJ1D,KAAK8E,SAAS+I,gBAAgBD,GAAS,cAAAH,EAAAlN,OAAA,SAAAkN,EAAA5J,MAAA,yBAAA4J,EAAAjN,OAAA,GAAAsN,EAAA,S,GACvD,CAAAtO,IAAA,aAAAC,MAEK,W,qIAEc,OADhBO,KAAK+M,eAAe,cAAcgB,EAAArK,KAAA,EACZ1D,KAAK8E,SAASQ,aAAY,OAAnC,OAAPjD,EAAO0L,EAAAlK,KAAAkK,EAAAxN,OAAA,SACN8B,EAAQgG,SAAO,wBAAA0F,EAAAvN,OAAA,GAAAwN,EAAA,S,GACzB,CAAAxO,IAAA,cAAAC,MAEK,W,+HAEK,OADPO,KAAK+M,eAAe,eAAekB,EAAAvK,KAAA,EACtB1D,KAAK8E,SAASoJ,cAAa,cAAAD,EAAA1N,OAAA,SAAA0N,EAAApK,MAAA,wBAAAoK,EAAAzN,OAAA,GAAA2N,EAAA,S,GAC3C,CAAA3O,IAAA,aAAAC,MAEK,W,+HAEK,OADPO,KAAK+M,eAAe,cAAcqB,EAAA1K,KAAA,EACrB1D,KAAK8E,SAASuJ,aAAY,cAAAD,EAAA7N,OAAA,SAAA6N,EAAAvK,MAAA,wBAAAuK,EAAA5N,OAAA,GAAA8N,EAAA,S,GAC1C,CAAA9O,IAAA,cAAAC,MAGK,SAAYkI,G,+HAEP,OADP3H,KAAK+M,eAAe,eAAewB,EAAA7K,KAAA,EACtB1D,KAAK8E,SAAS0J,YAAY7G,GAAK,cAAA4G,EAAAhO,OAAA,SAAAgO,EAAA1K,MAAA,wBAAA0K,EAAA/N,OAAA,GAAAiO,EAAA,S,GAahD,CAAAjP,IAAA,mBAAAC,MACA,SAAiB0N,GACb,IAAK,IAAM3N,KAAO2N,GAC+B,IAAzCb,EAAuBtH,QAAQxF,IAC/BqH,EAAOmD,mBAAmB,4BAA8BxK,EAAK,cAAe2N,GAIpF,IAAME,GAAK/B,EAAAA,EAAAA,IAAY6B,GAkBvB,OAhBe,MAAXE,EAAGqB,KACHrB,EAAGqB,KAAO1O,KAAKiN,aAIfI,EAAGqB,KAAO3O,QAAQiL,IAAI,CAClBjL,QAAQH,QAAQyN,EAAGqB,MACnB1O,KAAKiN,eACNlM,MAAK,SAACC,GAIL,OAHIA,EAAO,GAAG2N,gBAAkB3N,EAAO,GAAG2N,eACtC9H,EAAOmD,mBAAmB,wBAAyB,cAAemD,GAE/DnM,EAAO,EAClB,IAGGqM,CACX,GAQA,CAAA7N,IAAA,sBAAAC,MACM,SAAoB0N,G,kJAEqB,O,UAAMvC,EAAAA,EAAAA,IAAkB5K,KAAKoN,iBAAiBD,IAAa,OAsBrG,GApBY,OAFPE,EAAEuB,EAAA/K,MAEDgL,KACHxB,EAAGwB,GAAK9O,QAAQH,QAAQyN,EAAGwB,IAAI9N,MAAK,SAAO8N,GAAE,OAAIC,EAAAzO,OAAA,UAAA0O,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA1L,MAAA,UACnC,MAANmL,EAAU,CAAAO,EAAA1L,KAAA,eAAA0L,EAAA7O,OAAA,SAAW,MAAI,OACb,OADa6O,EAAA1L,KAAA,EACP1D,KAAKwO,YAAYK,GAAG,OAGzC,OAFc,OADTK,EAAOE,EAAAvL,OAETgD,EAAOmD,mBAAmB,qCAAsC,QAAS6E,GAC5EO,EAAA7O,OAAA,SACM2O,GAAO,wBAAAE,EAAA5O,OAAA,GAAAyO,EAAA,SACjB,IAGD5B,EAAGwB,GAAGS,OAAM,SAAClO,GAAa,KAIxBmO,EAAiC,MAAnBlC,EAAGmC,cAAmD,MAA3BnC,EAAGoC,qBAC/B,MAAfpC,EAAGqC,UAAiC,IAAZrC,EAAGzH,OAAc2J,EAErB,IAAZlC,EAAGzH,MAA0B,IAAZyH,EAAGzH,OAAe2J,GAC3C1I,EAAOmD,mBAAmB,4EAA6E,cAAemD,GAFtHtG,EAAOmD,mBAAmB,+CAAgD,cAAemD,GAK5E,IAAZE,EAAGzH,MAAyB,MAAXyH,EAAGzH,MAAqC,MAAnByH,EAAGmC,cAAmD,MAA3BnC,EAAGoC,qBAA6B,CAAAb,EAAAlL,KAAA,SAElG2J,EAAGzH,KAAO,EAAEgJ,EAAAlL,KAAA,oBAEO,IAAZ2J,EAAGzH,MAA0B,IAAZyH,EAAGzH,KAAU,CAAAgJ,EAAAlL,KAAA,SAIlB,MAAf2J,EAAGqC,WAAoBrC,EAAGqC,SAAW1P,KAAKkO,eAAgBU,EAAAlL,KAAA,iBAK9C,OAL8CkL,EAAAlL,KAAA,GAKxC1D,KAAKqO,aAAY,QAAjCsB,EAAOf,EAAA/K,KAEE,MAAXwJ,EAAGzH,KAGyB,MAAxB+J,EAAQH,cAAwD,MAAhCG,EAAQF,sBAIxCpC,EAAGzH,KAAO,EAES,MAAfyH,EAAGqC,UAGGA,EAAWrC,EAAGqC,gBACbrC,EAAGqC,SACVrC,EAAGmC,aAAeE,EAClBrC,EAAGoC,qBAAuBC,IAIH,MAAnBrC,EAAGmC,eAAwBnC,EAAGmC,aAAeG,EAAQH,cAC1B,MAA3BnC,EAAGoC,uBAAgCpC,EAAGoC,qBAAuBE,EAAQF,wBAGlD,MAApBE,EAAQD,UAIXH,GACA1I,EAAO+I,WAAW,oCAAqC9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACxFC,UAAW,wBAKA,MAAfzC,EAAGqC,WAAoBrC,EAAGqC,SAAWC,EAAQD,UAGjDrC,EAAGzH,KAAO,GAIViB,EAAO+I,WAAW,oCAAqC9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACxFC,UAAW,sBAIA,IAAZzC,EAAGzH,OAIa,MAAnByH,EAAGmC,eAAwBnC,EAAGmC,aAAeG,EAAQH,cAC1B,MAA3BnC,EAAGoC,uBAAgCpC,EAAGoC,qBAAuBE,EAAQF,uBAC5E,QAgCE,OA7BS,MAAZpC,EAAG0C,QAAiB1C,EAAG0C,MAAQ/P,KAAKkN,oBAAoB,YAEzC,MAAfG,EAAG2C,WACH3C,EAAG2C,SAAWhQ,KAAKsN,YAAYD,GAAIiC,OAAM,SAAClO,GACtC,GAAImL,EAAcvH,QAAQ5D,EAAMG,OAAS,EACrC,MAAMH,EAGV,OAAOyF,EAAO+I,WAAW,4EAA6E9I,EAAAA,GAAO0F,OAAOyD,wBAAyB,CACzI7O,MAAOA,EACPiM,GAAIA,GAEZ,KAGc,MAAdA,EAAGhF,QACHgF,EAAGhF,QAAUrI,KAAKkQ,aAElB7C,EAAGhF,QAAUtI,QAAQiL,IAAI,CACrBjL,QAAQH,QAAQyN,EAAGhF,SACnBrI,KAAKkQ,eACNnP,MAAK,SAACkK,GAIL,OAHmB,IAAfA,EAAQ,IAAYA,EAAQ,KAAOA,EAAQ,IAC3CpE,EAAOmD,mBAAmB,2BAA4B,cAAemD,GAElElC,EAAQ,EACnB,IACH2D,EAAAlL,KAAA,IAEYkH,EAAAA,EAAAA,IAAkByC,GAAG,eAAAuB,EAAArO,OAAA,SAAAqO,EAAA/K,MAAA,yBAAA+K,EAAApO,OAAA,GAAA2P,EAAA,S,GAKtC,CAAA3Q,IAAA,iBAAAC,MAEA,SAAeqQ,GACN9P,KAAK8E,UAAY+B,EAAO+I,WAAW,mBAAoB9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CAC7FC,UAAYA,GAAa,kBAEjC,IAAC,EAAAtQ,IAAA,WAAAC,MAED,SAAgBA,GACZ,SAAUA,IAASA,EAAM2Q,UAC7B,KAACxD,CAAA,CAvRuB,G,0CEnDtB,SAAUyD,EAAU7O,GACtB,MAAO,KAAO8O,IAAAA,YAAgB9J,EAAAA,EAAAA,IAAShF,GAC3C,CCRO,ICQDqF,EAAS,IAAIC,EAAAA,GDRI,aCUvB,SAASyJ,EAAgB9Q,GAErB,IADA,IAAMuB,EAAS,GACRvB,GACHuB,EAAOwP,QAAgB,IAAR/Q,GACfA,IAAU,EAEd,OAAOuB,CACX,CAEA,SAASyP,EAAkBjP,EAAkBkP,EAAgBvR,GAEzD,IADA,IAAI6B,EAAS,EACJsF,EAAI,EAAGA,EAAInH,EAAQmH,IACxBtF,EAAmB,IAATA,EAAgBQ,EAAKkP,EAASpK,GAE5C,OAAOtF,CACX,CAEA,SAAS2P,EAAQxG,GACb,GAAI0B,MAAMC,QAAQ3B,GAAS,CACvB,IAAIhJ,EAAyB,GAK7B,GAJAgJ,EAAOlJ,SAAQ,SAAS2P,GACpBzP,EAAUA,EAAQiE,OAAOuL,EAAQC,GACrC,IAEIzP,EAAQhC,QAAU,GAElB,OADAgC,EAAQqP,QAAQ,IAAOrP,EAAQhC,QACxBgC,EAGX,IAAMhC,EAASoR,EAAgBpP,EAAQhC,QAGvC,OAFAA,EAAOqR,QAAQ,IAAOrR,EAAOA,QAEtBA,EAAOiG,OAAOjE,E,EAIpB0P,EAAAA,EAAAA,IAAY1G,IACbtD,EAAOmD,mBAAmB,+BAAgC,SAAUG,GAGxE,IAAM3I,EAAsBqK,MAAMpB,UAAUqG,MAAMjO,MAAK2D,EAAAA,EAAAA,IAAS2D,IAEhE,GAAoB,IAAhB3I,EAAKrC,QAAgBqC,EAAK,IAAM,IAChC,OAAOA,EAEJ,GAAIA,EAAKrC,QAAU,GAEtB,OADAqC,EAAKgP,QAAQ,IAAOhP,EAAKrC,QAClBqC,EAGX,IAAMrC,EAASoR,EAAgB/O,EAAKrC,QAGpC,OAFAA,EAAOqR,QAAQ,IAAOrR,EAAOA,QAEtBA,EAAOiG,OAAO5D,EACzB,CAEM,SAAUiF,EAAO0D,GACnB,OAAO4G,EAAAA,EAAAA,IAAQJ,EAAQxG,GAC3B,CAOA,SAAS6G,EAAgBxP,EAAkBkP,EAAgBO,EAAqB9R,GAG5E,IAFA,IAAM6B,EAAS,GAERiQ,EAAcP,EAAS,EAAIvR,GAAQ,CACtC,IAAM+R,EAAUC,EAAQ3P,EAAMyP,GAE9BjQ,EAAOf,KAAKiR,EAAQlQ,SAEpBiQ,GAAeC,EAAQE,UACLV,EAAS,EAAIvR,GAC3B0H,EAAO+I,WAAW,uBAAwB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,E,CAIjF,MAAO,CAACD,SAAW,EAAIjS,EAAS6B,OAAQA,EAC5C,CAGA,SAASmQ,EAAQ3P,EAAkBkP,GAM/B,GALoB,IAAhBlP,EAAKrC,QACL0H,EAAO+I,WAAW,iBAAkB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAInE7P,EAAKkP,IAAW,IAAM,CACtB,IAAMY,EAAe9P,EAAKkP,GAAU,IAChCA,EAAS,EAAIY,EAAe9P,EAAKrC,QACjC0H,EAAO+I,WAAW,+BAAgC9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAGrF,IAAMlS,EAASsR,EAAkBjP,EAAMkP,EAAS,EAAGY,GAKnD,OAJIZ,EAAS,EAAIY,EAAenS,EAASqC,EAAKrC,QAC1C0H,EAAO+I,WAAW,8BAA+B9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAG7EL,EAAgBxP,EAAMkP,EAAQA,EAAS,EAAIY,EAAcA,EAAenS,E,CAE5E,GAAIqC,EAAKkP,IAAW,IAAM,CAC7B,IAAMvR,EAASqC,EAAKkP,GAAU,IAK9B,OAJIA,EAAS,EAAIvR,EAASqC,EAAKrC,QAC3B0H,EAAO+I,WAAW,uBAAwB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAGtEL,EAAgBxP,EAAMkP,EAAQA,EAAS,EAAGvR,E,CAE9C,GAAIqC,EAAKkP,IAAW,IAAM,CAC7B,IAAMY,EAAe9P,EAAKkP,GAAU,IAChCA,EAAS,EAAIY,EAAe9P,EAAKrC,QACjC0H,EAAO+I,WAAW,uBAAwB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAG7E,IAAMlS,EAASsR,EAAkBjP,EAAMkP,EAAS,EAAGY,GAMnD,OALIZ,EAAS,EAAIY,EAAenS,EAASqC,EAAKrC,QAC1C0H,EAAO+I,WAAW,uBAAwB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAItE,CAAED,SAAW,EAAIE,EAAenS,EAAS6B,QADjC+P,EAAAA,EAAAA,IAAQvP,EAAKsP,MAAMJ,EAAS,EAAIY,EAAcZ,EAAS,EAAIY,EAAenS,I,CAGtF,GAAIqC,EAAKkP,IAAW,IAAM,CAC7B,IAAMvR,EAASqC,EAAKkP,GAAU,IAM9B,OALIA,EAAS,EAAIvR,EAASqC,EAAKrC,QAC3B0H,EAAO+I,WAAW,iBAAkB9I,EAAAA,GAAO0F,OAAO6E,eAAgB,CAAC,GAIhE,CAAED,SAAW,EAAIjS,EAAS6B,QADlB+P,EAAAA,EAAAA,IAAQvP,EAAKsP,MAAMJ,EAAS,EAAGA,EAAS,EAAIvR,I,CAG/D,MAAO,CAAEiS,SAAU,EAAGpQ,QAAQ+P,EAAAA,EAAAA,IAAQvP,EAAKkP,IAC/C,CAEM,SAAUvK,EAAO3E,GACnB,IAAM+P,GAAQ/K,EAAAA,EAAAA,IAAShF,GACjB0P,EAAUC,EAAQI,EAAO,GAI/B,OAHIL,EAAQE,WAAaG,EAAMpS,QAC3B0H,EAAOmD,mBAAmB,mBAAoB,OAAQxI,GAEnD0P,EAAQlQ,MACnB,CCzJO,ICSD6F,EAAS,IAAIC,EAAAA,GDTI,iBCWvB,SAAS0K,EAAmBtC,IACnBuC,EAAAA,EAAAA,IAAYvC,EAAS,KACtBrI,EAAOmD,mBAAmB,kBAAmB,UAAWkF,GAQ5D,IAHA,IAAMwC,GAFNxC,EAAUA,EAAQP,eAEIgD,UAAU,GAAGC,MAAM,IAEnCC,EAAW,IAAIC,WAAW,IACvBxL,EAAI,EAAGA,EAAI,GAAIA,IACpBuL,EAASvL,GAAKoL,EAAMpL,GAAGC,WAAW,GAKtC,IAFA,IAAMwL,GAASvL,EAAAA,EAAAA,IAAS6J,EAAUwB,IAEzBvL,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACpByL,EAAOzL,GAAK,IAAM,GAAM,IACzBoL,EAAMpL,GAAKoL,EAAMpL,GAAG0L,gBAEF,GAAjBD,EAAOzL,GAAK,KAAc,IAC3BoL,EAAMpL,EAAI,GAAKoL,EAAMpL,EAAI,GAAG0L,eAIpC,MAAO,KAAON,EAAM/L,KAAK,GAC7B,CAeA,IADA,IAAMsM,EAA8C,CAAC,EAC5C3L,EAAI,EAAGA,EAAI,GAAIA,IAAO2L,EAAWvL,OAAOJ,IAAMI,OAAOJ,GAC9D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAO2L,EAAWvL,OAAOC,aAAa,GAAKL,IAAMI,OAAO,GAAKJ,GAGrF,IAde4L,EAcTC,EAAaC,KAAKC,OAdTH,EAFkB,iBAGzBE,KAAKE,MAAgBF,KAAKE,MAAMJ,GAC7BE,KAAKG,IAAIL,GAAKE,KAAKI,OAc9B,SAASC,EAAavD,GAOlB,IAHA,IAAI2C,GAFJ3C,GADAA,EAAUA,EAAQ8C,eACAL,UAAU,GAAKzC,EAAQyC,UAAU,EAAG,GAAK,MAEpCC,MAAM,IAAIhR,KAAI,SAAC8R,GAAQ,OAAOT,EAAWS,EAAI,IAAG/M,KAAK,IAGrEkM,EAAS1S,QAAUgT,GAAW,CACjC,IAAIQ,EAAQd,EAASF,UAAU,EAAGQ,GAClCN,EAAWe,SAASD,EAAO,IAAM,GAAKd,EAASF,UAAUgB,EAAMxT,O,CAInE,IADA,IAAI0T,EAAWnM,OAAO,GAAMkM,SAASf,EAAU,IAAM,IAC9CgB,EAAS1T,OAAS,GAAK0T,EAAW,IAAMA,EAE/C,OAAOA,CACX,CAEM,SAAU5F,EAAWiC,GACvB,IAAIlO,EAAS,KAMb,GAJwB,kBAAbkO,GACPrI,EAAOmD,mBAAmB,kBAAmB,UAAWkF,GAGxDA,EAAQ4D,MAAM,0BAGkB,OAA5B5D,EAAQyC,UAAU,EAAG,KAAezC,EAAU,KAAOA,GAEzDlO,EAASwQ,EAAmBtC,GAGxBA,EAAQ4D,MAAM,kCAAoC9R,IAAWkO,GAC7DrI,EAAOmD,mBAAmB,uBAAwB,UAAWkF,QAI9D,GAAIA,EAAQ4D,MAAM,kCAAmC,CAQxD,IALI5D,EAAQyC,UAAU,EAAG,KAAOc,EAAavD,IACzCrI,EAAOmD,mBAAmB,oBAAqB,UAAWkF,GAG9DlO,GAAS+R,EAAAA,EAAAA,IAAY7D,EAAQyC,UAAU,IAChC3Q,EAAO7B,OAAS,IAAM6B,EAAS,IAAMA,EAC5CA,EAASwQ,EAAmB,KAAOxQ,E,MAGnC6F,EAAOmD,mBAAmB,kBAAmB,UAAWkF,GAG5D,OAAOlO,CACX,CChHO,IAAMqL,EAAU,a,UCGjB,SAAU9H,EAAGyO,GACf,OAAO3C,GAAU4C,EAAAA,EAAAA,IAAYD,GACjC,C,0SCIMnM,EAAS,IAAIC,EAAAA,GAAOuF,GAIpB6G,EAAU,IAAIpB,WAAW,IAC/BoB,EAAQC,KAAK,GAEb,IAAMC,EAAyBC,EAAAA,GAAU3E,MAAM,GACzC4E,EAAkBD,EAAAA,GAAU3E,KAAK,GACjC6E,EAAiBF,EAAAA,GAAU3E,KAAK,GAChC8E,EAAwBH,EAAAA,GAAU3E,KAAK,sEAW7C,IAAM+E,GAAUC,EAAAA,EAAAA,IAAWH,EAAII,cAAe,IACxCC,GAAWF,EAAAA,EAAAA,IAAWJ,EAAKK,cAAe,IAE1CE,EAA2C,CAC7ClM,KAAM,SACN0E,QAAS,SACThE,QAAS,UACTyL,kBAAmB,UACnBC,KAAM,WAGJC,EAAkC,CACpC,OAAQ,UAAW,UAAW,oBAAqB,QAGvD,SAASC,GAAYzU,GACjB,OAAO,SAAUC,GAIb,MAHsB,kBAAXA,GACPoH,EAAOmD,mBAAmB,4BAAD5E,OAA8B9B,KAAKC,UAAU/D,IAAK,UAAA4F,OAAe5F,GAAQC,GAE/FA,CACX,CACJ,CAEA,IAAMyU,GAAoD,CACtDvM,KAAMsM,GAAY,QAClB5H,QAAS4H,GAAY,WACrB5L,QAAS,SAAS5I,GACd,IACI,OAAO4T,EAAAA,GAAU3E,KAAKjP,GAAO0U,U,CAC/B,MAAO/S,GAAQ,CACjB,OAAOyF,EAAOmD,mBAAmB,qCAAsC,iBAAkBvK,EAC7F,EACAqU,kBAAmB,SAASrU,GACxB,IACI,OAAOwN,EAAWxN,GAAOkP,a,CAC3B,MAAOvN,GAAQ,CACjB,OAAOyF,EAAOmD,mBAAmB,2CAA4C,2BAA4BvK,EAC7G,EACAsU,KAAM,SAAStU,GACX,IACI,IAAM8R,GAAQ/K,EAAAA,EAAAA,IAAS/G,GACvB,GAAqB,KAAjB8R,EAAMpS,OAAiB,MAAM,IAAIkC,MAAM,cAC3C,OAAO0P,EAAAA,EAAAA,IAAQQ,E,CACjB,MAAOnQ,GAAQ,CACjB,OAAOyF,EAAOmD,mBAAmB,8BAA+B,cAAevK,EACnF,GAGJ,SAAS2U,GAAexO,GAGhB,IAAMkN,EAAQlN,EAAKkN,MAAM,kBACzB,GAAIA,EAAO,CACP,IAAMuB,EAAuB,KAAbvB,EAAM,GAEhBwB,EAAQ1B,SAASE,EAAM,IAAM,QAC/BwB,EAAQ,IAAM,GAAKA,EAAQ,KAAQxB,EAAM,IAAMA,EAAM,KAAOpM,OAAO4N,KACnEzN,EAAOmD,mBAAmB,wBAAyB,OAAQpE,GAG/D,IAAM2O,EAAcf,EAAWgB,KAAKH,EAAUC,EAAQ,EAAIA,GACpDG,EAAcJ,EAASE,EAAYG,IAAInB,GAAKoB,IAAIvB,GAAcE,EAEpE,OAAO,SAAS7T,GACZ,IAAMsL,EAAIsI,EAAAA,GAAU3E,KAAKjP,GAMzB,OAJIsL,EAAE6J,GAAGH,IAAgB1J,EAAE8J,GAAGN,KAC1B1N,EAAOmD,mBAAmB,2BAAD5E,OAA6BQ,GAAS,QAASnG,IAGrEiU,EAAAA,EAAAA,IAAW3I,EAAE+J,OAAO,KAAKnB,cAAe,GACnD,C,CAMJ,IAAMb,EAAQlN,EAAKkN,MAAM,gBACzB,GAAIA,EAAO,CACP,IAAMwB,EAAQ1B,SAASE,EAAM,IAK7B,OAJc,IAAVwB,GAAeA,EAAQ,IAAMxB,EAAM,KAAOpM,OAAO4N,KACjDzN,EAAOmD,mBAAmB,sBAAuB,OAAQpE,GAGtD,SAASnG,GAKZ,OAJc+G,EAAAA,EAAAA,IAAS/G,GACbN,SAAWmV,GACjBzN,EAAOmD,mBAAmB,sBAAD5E,OAAwBQ,GAAS,QAASnG,GAjGvF,SAAqBA,GACjB,IAAM8R,GAAQ/K,EAAAA,EAAAA,IAAS/G,GACjBsV,EAAYxD,EAAMpS,OAAS,GACjC,OAAI4V,GACOC,EAAAA,EAAAA,IAAU,CAAEzD,EAAO2B,EAAQpC,MAAMiE,MAErChE,EAAAA,EAAAA,IAAQQ,EACnB,CA4FuB0D,CAAYxV,EACvB,C,CAIR,OAAQmG,GACJ,IAAK,UAAW,OAAO,SAASnG,GAC5B,OAAOiU,EAAAA,EAAAA,IAAWzG,EAAWxN,GAAQ,GACzC,EACA,IAAK,OAAQ,OAAO,SAASA,GACzB,OAAUA,EAAmBgU,EAAVG,CACvB,EACA,IAAK,QAAS,OAAO,SAASnU,GAC1B,OAAO4Q,EAAU5Q,EACrB,EACA,IAAK,SAAU,OAAO,SAASA,GAC3B,OAAO8E,EAAG9E,EACd,EAGJ,OAAO,IACX,CAEA,SAASyV,GAAWvN,EAAcwN,GAC9B,MAAO,GAAP/P,OAAWuC,EAAK,KAAAvC,OAAK+P,EAAOvU,KAAI,SAAAwU,GAAA,IAAGzN,EAAIyN,EAAJzN,KAAU,OAAAyN,EAAJxP,KAAmB,IAAM+B,CAAI,IAAGhC,KAAK,KAAK,IACvF,CAEO,IAAM0P,GAAgB,WAOzB,SAAAA,EAAYC,IAA4CjW,EAAAA,EAAAA,GAAA,KAAAgW,IACpDnL,EAAAA,EAAAA,IAAelK,KAAM,QAASgD,OAAOiJ,QAAOpH,EAAAA,EAAAA,IAASyQ,MAErDpL,EAAAA,EAAAA,IAAelK,KAAM,gBAAiB,CAAC,IACvCkK,EAAAA,EAAAA,IAAelK,KAAM,SAAU,CAAC,GAGhC,IAAMuV,EAAiD,CAAC,EAGlDC,EAAyC,CAAC,EAG1CC,EAAoD,CAAC,EAE3DzS,OAAO8H,KAAKwK,GAAOrU,SAAQ,SAAC2E,GACxB2P,EAAM3P,GAAQ,CAAC,EACf4P,EAAQ5P,GAAQ,GAChB6P,EAAS7P,GAAQ,CAAC,CACtB,IAAG,IAAA8P,EAAA,SAAA/N,GAIC,IAAMgO,EAAuC,CAAC,EAE9CL,EAAM3N,GAAM1G,SAAQ,SAAC2U,GAGbD,EAAYC,EAAMjO,OAClBd,EAAOmD,mBAAmB,2BAAD5E,OAA6B9B,KAAKC,UAAUqS,EAAMjO,MAAM,QAAAvC,OAAQ9B,KAAKC,UAAUoE,IAAU,QAAS2N,GAE/HK,EAAYC,EAAMjO,OAAQ,EAG1B,IAAMkO,EAAWD,EAAMhQ,KAAKkN,MAAM,uBAAuB,GACrD+C,IAAalO,GACbd,EAAOmD,mBAAmB,8BAAD5E,OAAgC9B,KAAKC,UAAUsS,IAAc,QAASP,GAInFlB,GAAeyB,KAG1BL,EAAQK,IACThP,EAAOmD,mBAAmB,gBAAD5E,OAAkB9B,KAAKC,UAAUsS,IAAc,QAASP,GAIrFE,EAAQK,GAAU5V,KAAK0H,GACvB4N,EAAM5N,GAAMkO,IAAY,EAC5B,G,EA7BJ,IAAK,IAAMlO,KAAQ2N,EAAKI,EAAA/N,GAiCxB,IAAMmO,EAAe9S,OAAO8H,KAAK0K,GAASO,QAAO,SAACC,GAAC,OAA4B,IAAtBR,EAAQQ,GAAG7W,MAAY,IAmChF,IAAK,IAAMwI,KAjCiB,IAAxBmO,EAAa3W,OACb0H,EAAOmD,mBAAmB,uBAAwB,QAASsL,GACpDQ,EAAa3W,OAAS,GAC7B0H,EAAOmD,mBAAmB,4CAAD5E,OAA8C0Q,EAAalV,KAAI,SAACqV,GAAC,OAAM3S,KAAKC,UAAU0S,EAAE,IAAGtQ,KAAK,OAAU,QAAS2P,IAGhJpL,EAAAA,EAAAA,IAAelK,KAAM,cAAe8V,EAAa,IAGjD,SAASI,EAActQ,EAAcuQ,GAC7BA,EAAMvQ,IACNiB,EAAOmD,mBAAmB,8BAAD5E,OAAgC9B,KAAKC,UAAUqC,IAAU,QAAS0P,GAG/Fa,EAAMvQ,IAAQ,EAEd5C,OAAO8H,KAAKyK,EAAM3P,IAAO3E,SAAQ,SAAC2P,GACzB4E,EAAQ5E,KAGbsF,EAActF,EAAOuF,GAGrBnT,OAAO8H,KAAKqL,GAAOlV,SAAQ,SAACmV,GACxBX,EAASW,GAASxF,IAAS,CAC/B,IACJ,WAEOuF,EAAMvQ,EACjB,CACAsQ,CAAclW,KAAKqW,YAAa,CAAC,GAGdZ,EAAU,CACzB,IAAMa,EAAKtT,OAAO8H,KAAK2K,EAAS9N,IAChC2O,EAAGC,OACHvW,KAAKwW,OAAO7O,GAAQuN,GAAWvN,EAAM2N,EAAM3N,IAAS2O,EAAG1V,KAAI,SAACqV,GAAC,OAAKf,GAAWe,EAAGX,EAAMW,GAAG,IAAEtQ,KAAK,G,CAExG,CAgQC,OAhQApG,EAAAA,EAAAA,GAAA8V,EAAA,EAAA7V,IAAA,aAAAC,MAED,SAAWmG,GACP,IAAI6Q,EAAUzW,KAAK0W,cAAc9Q,GAIjC,OAHK6Q,IACDA,EAAUzW,KAAK0W,cAAc9Q,GAAQ5F,KAAK2W,YAAY/Q,IAEnD6Q,CACX,GAAC,CAAAjX,IAAA,cAAAC,MAED,SAAYmG,GAAY,IAAAvF,EAAA,KAIVoW,EAAUrC,GAAexO,GAC/B,GAAI6Q,EAAW,OAAOA,EAI1B,IAAM3D,EAAQlN,EAAKkN,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMsD,EAAUtD,EAAM,GAChB8D,EAAa5W,KAAK6W,WAAWT,GAC7BjX,EAASyT,SAASE,EAAM,IAC9B,OAAO,SAACrT,GACAN,GAAU,GAAKM,EAAMN,SAAWA,GAChC0H,EAAOmD,mBAAmB,0DAA2D,QAASvK,GAGlG,IAAIuB,EAASvB,EAAMmB,IAAIgW,GAKvB,OAJIvW,EAAKmW,OAAOJ,KACZpV,EAASA,EAAOJ,IAAIyP,IAGjBA,GAAU2E,EAAAA,EAAAA,IAAUhU,GAC/B,C,CAIJ,IAAMmU,EAASnV,KAAKsV,MAAM1P,GAC1B,GAAIuP,EAAQ,CACR,IAAM2B,EAAcvS,EAAGvE,KAAKwW,OAAO5Q,IACnC,OAAO,SAACnG,GACJ,IAAM+F,EAAS2P,EAAOvU,KAAI,SAAAmW,GAAmB,IAAhBpP,EAAIoP,EAAJpP,KAAM/B,EAAImR,EAAJnR,KACzB5E,EAASX,EAAKwW,WAAWjR,EAAhBvF,CAAsBZ,EAAMkI,IAC3C,OAAItH,EAAKmW,OAAO5Q,GAAgByK,EAAUrP,GACnCA,CACX,IAEA,OADAwE,EAAOgL,QAAQsG,IACR9B,EAAAA,EAAAA,IAAUxP,EACrB,C,CAGJ,OAAOqB,EAAOmD,mBAAmB,iBAAD5E,OAAmBQ,GAAS,OAAQA,EACxE,GAAC,CAAApG,IAAA,aAAAC,MAED,SAAWkI,GACP,IAAM3G,EAAShB,KAAKwW,OAAO7O,GAI3B,OAHK3G,GACD6F,EAAOmD,mBAAmB,iBAAD5E,OAAmB9B,KAAKC,UAAUoE,IAAU,OAAQA,GAE1E3G,CACX,GAAC,CAAAxB,IAAA,aAAAC,MAED,SAAWmG,EAAcnG,GACrB,OAAOO,KAAK6W,WAAWjR,EAAhB5F,CAAsBP,EACjC,GAAC,CAAAD,IAAA,aAAAC,MAED,SAAWkI,EAAclI,GACrB,OAAO4Q,EAAUrQ,KAAKgX,WAAWrP,EAAMlI,GAC3C,GAAC,CAAAD,IAAA,SAAAC,MAED,SAAOA,GACH,OAAOO,KAAKgX,WAAWhX,KAAKqW,YAAa5W,EAC7C,GAAC,CAAAD,IAAA,OAAAC,MAED,SAAKA,GACD,OAAOO,KAAKiX,WAAWjX,KAAKqW,YAAa5W,EAC7C,GAAC,CAAAD,IAAA,SAAAC,MAED,SAAOmG,EAAcnG,EAAYyX,GAA0C,IAAAlV,EAAA,KAInE,GADgBoS,GAAexO,GAChB,OAAOsR,EAAStR,EAAMnG,GAIzC,IAAMqT,EAAQlN,EAAKkN,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMsD,EAAUtD,EAAM,GAChB3T,EAASyT,SAASE,EAAM,IAI9B,OAHI3T,GAAU,GAAKM,EAAMN,SAAWA,GAChC0H,EAAOmD,mBAAmB,0DAA2D,QAASvK,GAE3FA,EAAMmB,KAAI,SAACmK,GAAM,OAAK/I,EAAKmV,OAAOf,EAASrL,EAAGmM,EAAS,G,CAIlE,IAAM/B,EAASnV,KAAKsV,MAAM1P,GAC1B,OAAIuP,EACOA,EAAOjK,QAAO,SAACC,EAAKiM,GAAoB,IAAhBzP,EAAIyP,EAAJzP,KAAM/B,EAAIwR,EAAJxR,KAEjC,OADAuF,EAAMxD,GAAQ3F,EAAKmV,OAAOvR,EAAMnG,EAAMkI,GAAOuP,GACtC/L,CACX,GAAwB,CAAC,GAGtBtE,EAAOmD,mBAAmB,iBAAD5E,OAAmBQ,GAAS,OAAQA,EACxE,GAAC,CAAApG,IAAA,QAAAC,MAED,SAAMA,EAA4ByX,GAC9B,OAAOlX,KAAKmX,OAAOnX,KAAKqW,YAAa5W,EAAOyX,EAChD,IAAC,EAAA1X,IAAA,OAAAC,MAED,SAAY6V,GACR,OAAO,IAAID,EAAiBC,EAChC,GAAC,CAAA9V,IAAA,iBAAAC,MAED,SAAsB6V,GAClB,OAAOD,EAAiB3G,KAAK4G,GAAOe,WACxC,GAAC,CAAA7W,IAAA,aAAAC,MAED,SAAkBkI,EAAc2N,EAA8C7V,GAC1E,OAAO4V,EAAiB3G,KAAK4G,GAAO2B,WAAWtP,EAAMlI,EACzD,GAAC,CAAAD,IAAA,aAAAC,MAED,SAAkB4X,GACd,IAAMC,EAAsC,GAC5C,IAAK,IAAM3P,KAAQ0P,EAAQ,CACvB,IAAMzR,EAAOiO,EAAiBlM,GACzB/B,GACDiB,EAAOmD,mBAAmB,kCAAD5E,OAAoC9B,KAAKC,UAAUoE,IAAU,SAAU0P,GAEpGC,EAAarX,KAAK,CAAE0H,KAAAA,EAAM/B,KAAAA,G,CAO9B,OAJA0R,EAAaf,MAAK,SAACgB,EAAGC,GAClB,OAAOxD,EAAiBhP,QAAQuS,EAAE5P,MAAQqM,EAAiBhP,QAAQwS,EAAE7P,KACzE,IAEO0N,EAAiB4B,WAAW,eAAgB,CAAEQ,aAAcH,GAAgBD,EACvF,GAAC,CAAA7X,IAAA,SAAAC,MAED,SAAc4X,EAAyB/B,EAA8C7V,GACjF,OAAOuV,EAAAA,EAAAA,IAAU,CACb,SACAK,EAAiBqC,WAAWL,GAC5BhC,EAAiB3G,KAAK4G,GAAOqC,KAAKlY,IAE1C,GAAC,CAAAD,IAAA,OAAAC,MAED,SAAY4X,EAAyB/B,EAA8C7V,GAC/E,OAAO4Q,EAAUgF,EAAiB5O,OAAO4Q,EAAQ/B,EAAO7V,GAC5D,GAEA,CAAAD,IAAA,eAAAC,MACA,SAA0B4X,EAAyB/B,EAA8C7V,EAA4B+O,G,yIAEzH6I,GAAS/L,EAAAA,EAAAA,IAAY+L,GAGfO,EAAmC,CAAC,EAGtCP,EAAOvD,qBAAsBrC,EAAAA,EAAAA,IAAY4F,EAAOvD,kBAAmB,MACnE8D,EAASP,EAAOvD,mBAAqB,OAInC2C,EAAUpB,EAAiB3G,KAAK4G,IAG9BuC,MAAMpY,GAAO,SAACmG,EAAcnG,GAIhC,MAHa,YAATmG,IAAuB6L,EAAAA,EAAAA,IAAYhS,EAAO,MAC1CmY,EAASnY,GAAS,MAEfA,CACX,IAEAa,EAAAwX,IAAA/I,EAAAA,EAAAA,KAAAjE,KACmB8M,GAAQ,WAAAtX,EAAAyX,GAAAzX,EAAAwX,MAAAE,KAAE,CAAF1X,EAAAoD,KAAA,SACN,OADViE,EAAIrH,EAAAyX,GAAAtY,MAAAa,EAAAoD,KAAA,GACY8K,EAAY7G,GAAK,QAAxCiQ,EAASjQ,GAAKrH,EAAAuD,KAAAvD,EAAAoD,KAAG,EAAH,cAYf,OARC2T,EAAOvD,mBAAqB8D,EAASP,EAAOvD,qBAC5CuD,EAAOvD,kBAAoB8D,EAASP,EAAOvD,oBAI/CrU,EAAQgX,EAAQoB,MAAMpY,GAAO,SAACmG,EAAcnG,GACxC,MAAa,YAATmG,GAAsBgS,EAASnY,GAAiBmY,EAASnY,GACtDA,CACX,IAAGa,EAAAC,OAAA,SAEI,CAAE8W,OAAAA,EAAQ5X,MAAAA,IAAO,yBAAAa,EAAAE,OAAA,GAAAC,EAAA,I,GAC3B,CAAAjB,IAAA,aAAAC,MAED,SAAkB4X,EAAyB/B,EAA8C7V,GAErF4V,EAAiBqC,WAAWL,GAG5B,IAAMY,EAAoC,CAAC,EACrCC,EAAoD,GAE1DlE,EAAiB/S,SAAQ,SAAC0G,GACtB,IAAMlI,EAAc4X,EAAQ1P,GACf,MAATlI,IACJwY,EAAatQ,GAAQuM,GAAavM,GAAMlI,GACxCyY,EAAYjY,KAAK,CAAE0H,KAAAA,EAAM/B,KAAMiO,EAAiBlM,KACpD,IAEA,IAAM8O,EAAUpB,EAAiB3G,KAAK4G,GAEhC6C,GAAkB7M,EAAAA,EAAAA,IAAYgK,GAUpC,OATI6C,EAAgBV,aAChB5Q,EAAOmD,mBAAmB,2CAA4C,qBAAsBsL,GAE5F6C,EAAgBV,aAAeS,EAInCzB,EAAQhQ,OAAOhH,GAER,CACH6V,MAAO6C,EACPd,OAAQY,EACR5B,YAAaI,EAAQJ,YACrB/U,QAASmV,EAAQoB,MAAMpY,GAAO,SAACmG,EAAcnG,GAGzC,GAAImG,EAAKkN,MAAM,eACX,OAAO/B,EAAAA,EAAAA,KAAQvK,EAAAA,EAAAA,IAAS/G,IAI5B,GAAImG,EAAKkN,MAAM,UACX,OAAOO,EAAAA,GAAU3E,KAAKjP,GAAO0U,WAGjC,OAAQvO,GACJ,IAAK,UACD,OAAOnG,EAAMkP,cACjB,IAAK,OACD,QAASlP,EACb,IAAK,SAID,MAHsB,kBAAXA,GACPoH,EAAOmD,mBAAmB,iBAAkB,QAASvK,GAElDA,EAGf,OAAOoH,EAAOmD,mBAAmB,mBAAoB,OAAQpE,EACjE,IAER,KAACyP,CAAA,CArWwB,GChJvB/B,GAAgCD,EAAAA,GAAU3E,KAAK,G,uaCHrD,IAAA0J,GAAiBC,GAEjB,SAASA,GAAOC,EAAKC,GACnB,IAAKD,EACH,MAAM,IAAIjX,MAAMkX,GAAO,mBAC3B,CAEAF,GAAOG,MAAQ,SAAqBC,EAAGC,EAAGH,GACxC,GAAIE,GAAKC,EACP,MAAM,IAAIrX,MAAMkX,GAAQ,qBAAuBE,EAAI,OAASC,EAChE,E,yBCRA,IAAIC,EAAQC,EAkCZ,SAASC,EAAMC,GACb,OAAoB,IAAhBA,EAAK3Z,OACA,IAAM2Z,EAENA,CACX,CAGA,SAASC,EAAMR,GAEb,IADA,IAAIS,EAAM,GACD1S,EAAI,EAAGA,EAAIiS,EAAIpZ,OAAQmH,IAC9B0S,GAAOH,EAAMN,EAAIjS,GAAG6N,SAAS,KAC/B,OAAO6E,CACT,CAfAL,EAAMM,QA9BN,SAAiBV,EAAKW,GACpB,GAAIrN,MAAMC,QAAQyM,GAChB,OAAOA,EAAIzH,QACb,IAAKyH,EACH,MAAO,GACT,IAAIS,EAAM,GACV,GAAmB,kBAART,EAAkB,CAC3B,IAAK,IAAIjS,EAAI,EAAGA,EAAIiS,EAAIpZ,OAAQmH,IAC9B0S,EAAI1S,GAAc,EAATiS,EAAIjS,GACf,OAAO0S,CACX,CACE,GAAY,QAARE,EAAe,EACjBX,EAAMA,EAAIY,QAAQ,eAAgB,KAC1Bha,OAAS,IAAM,IACrBoZ,EAAM,IAAMA,GACd,IAASjS,EAAI,EAAGA,EAAIiS,EAAIpZ,OAAQmH,GAAK,EACnC0S,EAAI/Y,KAAK2S,SAAS2F,EAAIjS,GAAKiS,EAAIjS,EAAI,GAAI,IAC7C,MACI,IAASA,EAAI,EAAGA,EAAIiS,EAAIpZ,OAAQmH,IAAK,CACnC,IAAIoM,EAAI6F,EAAIhS,WAAWD,GACnB8S,EAAK1G,GAAK,EACV2G,EAAS,IAAJ3G,EACL0G,EACFJ,EAAI/Y,KAAKmZ,EAAIC,GAEbL,EAAI/Y,KAAKoZ,EACjB,CAEE,OAAOL,CACT,EASAL,EAAME,MAAQA,EAQdF,EAAMI,MAAQA,EAEdJ,EAAMlS,OAAS,SAAgB6S,EAAKJ,GAClC,MAAY,QAARA,EACKH,EAAMO,GAENA,CACX,C,yBCvDA,IAAIX,EAAQC,EAKZD,EAAMN,OAASD,GACfO,EAAMM,QAAUM,GAASN,QACzBN,EAAME,MAAQU,GAASV,MACvBF,EAAMI,MAAQQ,GAASR,MACvBJ,EAAMlS,OAAS8S,GAAS9S,OA6BxBkS,EAAMa,OA1BN,SAAgBC,EAAKC,EAAGC,GACtB,IAAIC,EAAM,IAAI/N,MAAMuG,KAAKyH,IAAIJ,EAAIK,YAAaH,GAAQ,GACtDC,EAAIzG,KAAK,GAKT,IAHA,IAAI4G,EAAK,GAAML,EAAI,EACfM,EAAIP,EAAIQ,QAEH3T,EAAI,EAAGA,EAAIsT,EAAIza,OAAQmH,IAAK,CACnC,IAAI4T,EACAC,EAAMH,EAAEI,MAAML,EAAK,GACnBC,EAAEK,SAEFH,EADEC,GAAOJ,GAAM,GAAK,GACfA,GAAM,GAAKI,EAEZA,EACNH,EAAEM,MAAMJ,IAERA,EAAI,EAGNN,EAAItT,GAAK4T,EACTF,EAAEO,OAAO,EACb,CAEE,OAAOX,CACT,EA0DAjB,EAAM6B,OAtDN,SAAgBC,EAAIC,GAClB,IAAIC,EAAM,CACR,GACA,IAGFF,EAAKA,EAAGR,QACRS,EAAKA,EAAGT,QAIR,IAHA,IAEIW,EAFAC,EAAK,EACLC,EAAK,EAEFL,EAAGM,MAAMF,GAAM,GAAKH,EAAGK,MAAMD,GAAM,GAAG,CAE3C,IAMIE,EAYAC,EAlBAC,EAAOT,EAAGL,MAAM,GAAKS,EAAM,EAC3BM,EAAOT,EAAGN,MAAM,GAAKU,EAAM,EACnB,IAARI,IACFA,GAAO,GACG,IAARC,IACFA,GAAO,GAGPH,EADgB,KAAP,EAANE,GACE,EAGO,KADZN,EAAMH,EAAGL,MAAM,GAAKS,EAAM,IACF,IAAPD,GAAqB,IAARO,EAGvBD,GAFCA,EAIVP,EAAI,GAAG1a,KAAK+a,GAIVC,EADgB,KAAP,EAANE,GACE,EAGO,KADZP,EAAMF,EAAGN,MAAM,GAAKU,EAAM,IACF,IAAPF,GAAqB,IAARM,EAGvBC,GAFCA,EAIVR,EAAI,GAAG1a,KAAKgb,GAGR,EAAIJ,IAAOG,EAAK,IAClBH,EAAK,EAAIA,GACP,EAAIC,IAAOG,EAAK,IAClBH,EAAK,EAAIA,GACXL,EAAGF,OAAO,GACVG,EAAGH,OAAO,EACd,CAEE,OAAOI,CACT,EAUAhC,EAAMyC,eAPN,SAAwBC,EAAK1T,EAAM2T,GACjC,IAAI9b,EAAM,IAAMmI,EAChB0T,EAAI5Q,UAAU9C,GAAQ,WACpB,YAAqBvI,IAAdY,KAAKR,GAAqBQ,KAAKR,GACpCQ,KAAKR,GAAO8b,EAASzY,KAAK7C,KAChC,CACA,EAOA2Y,EAAM4C,WAJN,SAAoBhK,GAClB,MAAwB,kBAAVA,EAAqBoH,EAAMM,QAAQ1H,EAAO,OACtDA,CACJ,EAMAoH,EAAM6C,UAHN,SAAmBjK,GACjB,OAAO,IAAIkK,KAAJ,CAAOlK,EAAO,MAAO,KAC9B,C,IChHIiI,GAASkC,GAAMlC,OACfgB,GAASkB,GAAMlB,OACfmB,GAASD,GAAMrD,OAEnB,SAASuD,GAAUhW,EAAMiW,GACvB7b,KAAK4F,KAAOA,EACZ5F,KAAK8b,EAAI,IAAIL,KAAJ,CAAOI,EAAKC,EAAG,IAGxB9b,KAAK+b,IAAMF,EAAKG,MAAQP,KAAAA,IAAOI,EAAKG,OAASP,KAAAA,KAAQzb,KAAK8b,GAG1D9b,KAAKic,KAAO,IAAIR,KAAJ,CAAO,GAAGS,MAAMlc,KAAK+b,KACjC/b,KAAKmc,IAAM,IAAIV,KAAJ,CAAO,GAAGS,MAAMlc,KAAK+b,KAChC/b,KAAKoc,IAAM,IAAIX,KAAJ,CAAO,GAAGS,MAAMlc,KAAK+b,KAGhC/b,KAAKgW,EAAI6F,EAAK7F,GAAK,IAAIyF,KAAJ,CAAOI,EAAK7F,EAAG,IAClChW,KAAKqc,EAAIR,EAAKQ,GAAKrc,KAAKsc,cAAcT,EAAKQ,EAAGR,EAAKU,MAGnDvc,KAAKwc,QAAU,IAAI3Q,MAAM,GACzB7L,KAAKyc,QAAU,IAAI5Q,MAAM,GACzB7L,KAAK0c,QAAU,IAAI7Q,MAAM,GACzB7L,KAAK2c,QAAU,IAAI9Q,MAAM,GAEzB7L,KAAK4c,WAAa5c,KAAKgW,EAAIhW,KAAKgW,EAAE8D,YAAc,EAGhD,IAAI+C,EAAc7c,KAAKgW,GAAKhW,KAAK8b,EAAEgB,IAAI9c,KAAKgW,IACvC6G,GAAeA,EAAY9B,KAAK,KAAO,EAC1C/a,KAAK+c,KAAO,MAEZ/c,KAAKgd,eAAgB,EACrBhd,KAAK+c,KAAO/c,KAAKgW,EAAEkG,MAAMlc,KAAK+b,KAElC,CACA,IAAAkB,GAAiBrB,GAqNjB,SAASsB,GAAUC,EAAOvX,GACxB5F,KAAKmd,MAAQA,EACbnd,KAAK4F,KAAOA,EACZ5F,KAAKod,YAAc,IACrB,CAvNAxB,GAAUnR,UAAU4S,MAAQ,WAC1B,MAAM,IAAIhc,MAAM,kBAClB,EAEAua,GAAUnR,UAAU6S,SAAW,WAC7B,MAAM,IAAIjc,MAAM,kBAClB,EAEAua,GAAUnR,UAAU8S,aAAe,SAAsBzB,EAAG9B,GAC1D2B,GAAOG,EAAEsB,aACT,IAAII,EAAU1B,EAAE2B,cAEZ7D,EAAMJ,GAAOQ,EAAG,EAAGha,KAAK4c,YACxBc,GAAK,GAAMF,EAAQG,KAAO,IAAOH,EAAQG,KAAO,IAAM,EAAI,EAAI,GAClED,GAAK,EAGL,IACIE,EACAC,EAFAC,EAAO,GAGX,IAAKF,EAAI,EAAGA,EAAIhE,EAAIza,OAAQye,GAAKJ,EAAQG,KAAM,CAC7CE,EAAO,EACP,IAAK,IAAIpF,EAAImF,EAAIJ,EAAQG,KAAO,EAAGlF,GAAKmF,EAAGnF,IACzCoF,GAAQA,GAAQ,GAAKjE,EAAInB,GAC3BqF,EAAK7d,KAAK4d,EACd,CAIE,IAFA,IAAItG,EAAIvX,KAAK+d,OAAO,KAAM,KAAM,MAC5BvG,EAAIxX,KAAK+d,OAAO,KAAM,KAAM,MACvBzX,EAAIoX,EAAGpX,EAAI,EAAGA,IAAK,CAC1B,IAAKsX,EAAI,EAAGA,EAAIE,EAAK3e,OAAQye,KAC3BC,EAAOC,EAAKF,MACCtX,EACXkR,EAAIA,EAAEwG,SAASR,EAAQS,OAAOL,IACvBC,KAAUvX,IACjBkR,EAAIA,EAAEwG,SAASR,EAAQS,OAAOL,GAAGM,QAErC3G,EAAIA,EAAE7C,IAAI8C,EACd,CACE,OAAOD,EAAE4G,KACX,EAEAvC,GAAUnR,UAAU2T,SAAW,SAAkBtC,EAAG9B,GAClD,IAAIN,EAAI,EAGJ2E,EAAYvC,EAAEwC,cAAc5E,GAChCA,EAAI2E,EAAUE,IAQd,IAPA,IAAIA,EAAMF,EAAUJ,OAGhBrE,EAAMJ,GAAOQ,EAAGN,EAAG1Z,KAAK4c,YAGxB4B,EAAMxe,KAAK+d,OAAO,KAAM,KAAM,MACzBzX,EAAIsT,EAAIza,OAAS,EAAGmH,GAAK,EAAGA,IAAK,CAExC,IAAK,IAAImS,EAAI,EAAGnS,GAAK,GAAgB,IAAXsT,EAAItT,GAAUA,IACtCmS,IAKF,GAJInS,GAAK,GACPmS,IACF+F,EAAMA,EAAIC,KAAKhG,GAEXnS,EAAI,EACN,MACF,IAAI4T,EAAIN,EAAItT,GACZqV,GAAa,IAANzB,GAIHsE,EAHW,WAAX1C,EAAElW,KAEAsU,EAAI,EACAsE,EAAIR,SAASO,EAAKrE,EAAI,GAAM,IAE5BsE,EAAIR,SAASO,GAAMrE,EAAI,GAAM,GAAGgE,OAGpChE,EAAI,EACAsE,EAAI9J,IAAI6J,EAAKrE,EAAI,GAAM,IAEvBsE,EAAI9J,IAAI6J,GAAMrE,EAAI,GAAM,GAAGgE,MAEzC,CACE,MAAkB,WAAXpC,EAAElW,KAAoB4Y,EAAIL,MAAQK,CAC3C,EAEA5C,GAAUnR,UAAUiU,YAAc,SAAqBC,EACrDV,EACAW,EACAC,EACAC,GACA,IAMIxY,EACAsX,EACA9B,EARAiD,EAAW/e,KAAKwc,QAChB+B,EAAMve,KAAKyc,QACX7C,EAAM5Z,KAAK0c,QAGX7C,EAAM,EAIV,IAAKvT,EAAI,EAAGA,EAAIuY,EAAKvY,IAAK,CAExB,IAAI+X,GADJvC,EAAImC,EAAO3X,IACOgY,cAAcK,GAChCI,EAASzY,GAAK+X,EAAUE,IACxBA,EAAIjY,GAAK+X,EAAUJ,MACvB,CAGE,IAAK3X,EAAIuY,EAAM,EAAGvY,GAAK,EAAGA,GAAK,EAAG,CAChC,IAAIiR,EAAIjR,EAAI,EACRkR,EAAIlR,EACR,GAAoB,IAAhByY,EAASxH,IAA4B,IAAhBwH,EAASvH,GAAlC,CAQA,IAAIwH,EAAO,CACTf,EAAO1G,GACP,KACA,KACA0G,EAAOzG,IAI4B,IAAjCyG,EAAO1G,GAAG0H,EAAEC,IAAIjB,EAAOzG,GAAGyH,IAC5BD,EAAK,GAAKf,EAAO1G,GAAG7C,IAAIuJ,EAAOzG,IAC/BwH,EAAK,GAAKf,EAAO1G,GAAG4H,MAAMnB,SAASC,EAAOzG,GAAG0G,QACM,IAA1CD,EAAO1G,GAAG0H,EAAEC,IAAIjB,EAAOzG,GAAGyH,EAAEG,WACrCJ,EAAK,GAAKf,EAAO1G,GAAG4H,MAAMnB,SAASC,EAAOzG,IAC1CwH,EAAK,GAAKf,EAAO1G,GAAG7C,IAAIuJ,EAAOzG,GAAG0G,SAElCc,EAAK,GAAKf,EAAO1G,GAAG4H,MAAMnB,SAASC,EAAOzG,IAC1CwH,EAAK,GAAKf,EAAO1G,GAAG4H,MAAMnB,SAASC,EAAOzG,GAAG0G,QAG/C,IAAIhd,EAAQ,EACT,GACA,GACA,GACA,EACD,EACA,EACA,EACA,EACA,GAGEyZ,EAAMH,GAAOoE,EAAOrH,GAAIqH,EAAOpH,IAInC,IAHAqC,EAAMzH,KAAKyH,IAAIc,EAAI,GAAGxb,OAAQ0a,GAC9BD,EAAIrC,GAAK,IAAI1L,MAAMgO,GACnBD,EAAIpC,GAAK,IAAI3L,MAAMgO,GACd+D,EAAI,EAAGA,EAAI/D,EAAK+D,IAAK,CACxB,IAAIyB,EAAiB,EAAZ1E,EAAI,GAAGiD,GACZ0B,EAAiB,EAAZ3E,EAAI,GAAGiD,GAEhBhE,EAAIrC,GAAGqG,GAAK1c,EAAiB,GAAVme,EAAK,IAAUC,EAAK,IACvC1F,EAAIpC,GAAGoG,GAAK,EACZW,EAAIhH,GAAKyH,CACf,CA5CA,MALMpF,EAAIrC,GAAKiC,GAAOoF,EAAOrH,GAAIwH,EAASxH,GAAIvX,KAAK4c,YAC7ChD,EAAIpC,GAAKgC,GAAOoF,EAAOpH,GAAIuH,EAASvH,GAAIxX,KAAK4c,YAC7C/C,EAAMzH,KAAKyH,IAAID,EAAIrC,GAAGpY,OAAQ0a,GAC9BA,EAAMzH,KAAKyH,IAAID,EAAIpC,GAAGrY,OAAQ0a,EA+CpC,CAEE,IAAI2E,EAAMxe,KAAK+d,OAAO,KAAM,KAAM,MAC9BwB,EAAMvf,KAAK2c,QACf,IAAKrW,EAAIuT,EAAKvT,GAAK,EAAGA,IAAK,CAGzB,IAFA,IAAI0T,EAAI,EAED1T,GAAK,GAAG,CACb,IAAI2V,GAAO,EACX,IAAK2B,EAAI,EAAGA,EAAIiB,EAAKjB,IACnB2B,EAAI3B,GAAiB,EAAZhE,EAAIgE,GAAGtX,GACD,IAAXiZ,EAAI3B,KACN3B,GAAO,GAEX,IAAKA,EACH,MACFjC,IACA1T,GACN,CAII,GAHIA,GAAK,GACP0T,IACFwE,EAAMA,EAAIC,KAAKzE,GACX1T,EAAI,EACN,MAEF,IAAKsX,EAAI,EAAGA,EAAIiB,EAAKjB,IAAK,CACxB,IAAI1D,EAAIqF,EAAI3B,GAEF,IAAN1D,IAEKA,EAAI,EACX4B,EAAIyC,EAAIX,GAAI1D,EAAI,GAAM,GACfA,EAAI,IACX4B,EAAIyC,EAAIX,IAAK1D,EAAI,GAAM,GAAGgE,OAG1BM,EADa,WAAX1C,EAAElW,KACE4Y,EAAIR,SAASlC,GAEb0C,EAAI9J,IAAIoH,GACtB,CACA,CAEE,IAAKxV,EAAI,EAAGA,EAAIuY,EAAKvY,IACnBiY,EAAIjY,GAAK,KAEX,OAAIwY,EACKN,EAEAA,EAAIL,KACf,EAOAvC,GAAUsB,UAAYA,GAEtBA,GAAUzS,UAAU+U,GAAK,WACvB,MAAM,IAAIne,MAAM,kBAClB,EAEA6b,GAAUzS,UAAU6S,SAAW,WAC7B,OAAOtd,KAAKmd,MAAMG,SAAStd,KAC7B,EAEA4b,GAAUnR,UAAUgV,YAAc,SAAqBlO,EAAO2H,GAC5D3H,EAAQmK,GAAMzC,QAAQ1H,EAAO2H,GAE7B,IAAI2F,EAAM7e,KAAK8b,EAAE4D,aAGjB,IAAkB,IAAbnO,EAAM,IAA4B,IAAbA,EAAM,IAA4B,IAAbA,EAAM,KACjDA,EAAMpS,OAAS,IAAM,EAAI0f,EAS3B,OARiB,IAAbtN,EAAM,GACRoK,GAAOpK,EAAMA,EAAMpS,OAAS,GAAK,IAAM,GACnB,IAAboS,EAAM,IACboK,GAAOpK,EAAMA,EAAMpS,OAAS,GAAK,IAAM,GAE9Ba,KAAKqd,MAAM9L,EAAMT,MAAM,EAAG,EAAI+N,GACvCtN,EAAMT,MAAM,EAAI+N,EAAK,EAAI,EAAIA,IAG1B,IAAkB,IAAbtN,EAAM,IAA4B,IAAbA,EAAM,KAC3BA,EAAMpS,OAAS,IAAM0f,EAC/B,OAAO7e,KAAK2f,WAAWpO,EAAMT,MAAM,EAAG,EAAI+N,GAAmB,IAAbtN,EAAM,IAExD,MAAM,IAAIlQ,MAAM,uBAClB,EAEA6b,GAAUzS,UAAUmV,iBAAmB,SAA0B1G,GAC/D,OAAOlZ,KAAKyG,OAAOyS,GAAK,EAC1B,EAEAgE,GAAUzS,UAAUkG,QAAU,SAAiBkP,GAC7C,IAAIhB,EAAM7e,KAAKmd,MAAMrB,EAAE4D,aACnBxN,EAAIlS,KAAK8f,OAAO7G,QAAQ,KAAM4F,GAElC,OAAIgB,EACK,CAAE7f,KAAK+f,OAAOC,SAAW,EAAO,GAAO5a,OAAO8M,GAEhD,CAAE,GAAO9M,OAAO8M,EAAGlS,KAAK+f,OAAO9G,QAAQ,KAAM4F,GACtD,EAEA3B,GAAUzS,UAAUhE,OAAS,SAAgByS,EAAK2G,GAChD,OAAOnE,GAAMjV,OAAOzG,KAAK2Q,QAAQkP,GAAU3G,EAC7C,EAEAgE,GAAUzS,UAAUwV,WAAa,SAAoBC,GACnD,GAAIlgB,KAAKod,YACP,OAAOpd,KAET,IAAIod,EAAc,CAChBI,QAAS,KACT5D,IAAK,KACLuG,KAAM,MAOR,OALA/C,EAAYxD,IAAM5Z,KAAKse,cAAc,GACrClB,EAAYI,QAAUxd,KAAKyd,YAAY,EAAGyC,GAC1C9C,EAAY+C,KAAOngB,KAAKogB,WACxBpgB,KAAKod,YAAcA,EAEZpd,IACT,EAEAkd,GAAUzS,UAAU4V,YAAc,SAAqBrG,GACrD,IAAKha,KAAKod,YACR,OAAO,EAET,IAAII,EAAUxd,KAAKod,YAAYI,QAC/B,QAAKA,GAGEA,EAAQS,OAAO9e,QAAUiT,KAAKkO,MAAMtG,EAAEF,YAAc,GAAK0D,EAAQG,KAC1E,EAEAT,GAAUzS,UAAUgT,YAAc,SAAqBE,EAAMuC,GAC3D,GAAIlgB,KAAKod,aAAepd,KAAKod,YAAYI,QACvC,OAAOxd,KAAKod,YAAYI,QAI1B,IAFA,IAAIA,EAAU,CAAExd,MACZwe,EAAMxe,KACDsG,EAAI,EAAGA,EAAI4Z,EAAO5Z,GAAKqX,EAAM,CACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAMC,IACxBY,EAAMA,EAAI+B,MACZ/C,EAAQvd,KAAKue,EACjB,CACE,MAAO,CACLb,KAAMA,EACNM,OAAQT,EAEZ,EAEAN,GAAUzS,UAAU6T,cAAgB,SAAuBC,GACzD,GAAIve,KAAKod,aAAepd,KAAKod,YAAYxD,IACvC,OAAO5Z,KAAKod,YAAYxD,IAK1B,IAHA,IAAIZ,EAAM,CAAEhZ,MACR6Z,GAAO,GAAK0E,GAAO,EACnBgC,EAAc,IAAR1G,EAAY,KAAO7Z,KAAKugB,MACzBja,EAAI,EAAGA,EAAIuT,EAAKvT,IACvB0S,EAAI1S,GAAK0S,EAAI1S,EAAI,GAAGoO,IAAI6L,GAC1B,MAAO,CACLhC,IAAKA,EACLN,OAAQjF,EAEZ,EAEAkE,GAAUzS,UAAU2V,SAAW,WAC7B,OAAO,IACT,EAEAlD,GAAUzS,UAAUgU,KAAO,SAAczE,GAEvC,IADA,IAAItB,EAAI1Y,KACCsG,EAAI,EAAGA,EAAI0T,EAAG1T,IACrBoS,EAAIA,EAAE6H,MACR,OAAO7H,CACT,E,uBC5X6B,oBAAlB1V,OAAOwd,OAEhBC,EAAA7H,QAAiB,SAAkBpO,EAAMkW,GACnCA,IACFlW,EAAKmW,OAASD,EACdlW,EAAKC,UAAYzH,OAAOwd,OAAOE,EAAUjW,UAAW,CAClDE,YAAa,CACXlL,MAAO+K,EACPH,YAAY,EACZC,UAAU,EACVsW,cAAc,KAIxB,EAGEH,EAAA7H,QAAiB,SAAkBpO,EAAMkW,GACvC,GAAIA,EAAW,CACblW,EAAKmW,OAASD,EACd,IAAIG,EAAW,WAAa,EAC5BA,EAASpW,UAAYiW,EAAUjW,UAC/BD,EAAKC,UAAY,IAAIoW,EACrBrW,EAAKC,UAAUE,YAAcH,CACnC,CACA,C,IClBIsW,GAASpF,GAAMrD,OAEnB,SAAS0I,GAAWlF,GAClBoB,GAAKpa,KAAK7C,KAAM,QAAS6b,GAEzB7b,KAAKuX,EAAI,IAAIkE,KAAJ,CAAOI,EAAKtE,EAAG,IAAI2E,MAAMlc,KAAK+b,KACvC/b,KAAKwX,EAAI,IAAIiE,KAAJ,CAAOI,EAAKrE,EAAG,IAAI0E,MAAMlc,KAAK+b,KACvC/b,KAAKghB,KAAOhhB,KAAKoc,IAAI6E,UAErBjhB,KAAKkhB,MAAqC,IAA7BlhB,KAAKuX,EAAE4J,UAAUpG,KAAK,GACnC/a,KAAKohB,OAAmD,IAA1CphB,KAAKuX,EAAE4J,UAAUE,IAAIrhB,KAAK8b,GAAGf,MAAM,GAGjD/a,KAAKshB,KAAOthB,KAAKuhB,iBAAiB1F,GAClC7b,KAAKwhB,YAAc,IAAI3V,MAAM,GAC7B7L,KAAKyhB,YAAc,IAAI5V,MAAM,EAC/B,CACA6V,GAASX,GAAY9D,IACrB,IAAA0E,GAAiBZ,GAiOjB,SAASa,GAAMzE,EAAOjL,EAAG+M,EAAG4C,GAC1B5E,GAAKC,UAAUra,KAAK7C,KAAMmd,EAAO,UACvB,OAANjL,GAAoB,OAAN+M,GAChBjf,KAAKkS,EAAI,KACTlS,KAAKif,EAAI,KACTjf,KAAK8hB,KAAM,IAEX9hB,KAAKkS,EAAI,IAAIuJ,KAAJ,CAAOvJ,EAAG,IACnBlS,KAAKif,EAAI,IAAIxD,KAAJ,CAAOwD,EAAG,IAEf4C,IACF7hB,KAAKkS,EAAE6P,SAAS/hB,KAAKmd,MAAMpB,KAC3B/b,KAAKif,EAAE8C,SAAS/hB,KAAKmd,MAAMpB,MAExB/b,KAAKkS,EAAE6J,MACV/b,KAAKkS,EAAIlS,KAAKkS,EAAEgK,MAAMlc,KAAKmd,MAAMpB,MAC9B/b,KAAKif,EAAElD,MACV/b,KAAKif,EAAIjf,KAAKif,EAAE/C,MAAMlc,KAAKmd,MAAMpB,MACnC/b,KAAK8hB,KAAM,EAEf,CA2NA,SAASE,GAAO7E,EAAOjL,EAAG+M,EAAG/E,GAC3B+C,GAAKC,UAAUra,KAAK7C,KAAMmd,EAAO,YACvB,OAANjL,GAAoB,OAAN+M,GAAoB,OAAN/E,GAC9Bla,KAAKkS,EAAIlS,KAAKmd,MAAMhB,IACpBnc,KAAKif,EAAIjf,KAAKmd,MAAMhB,IACpBnc,KAAKka,EAAI,IAAIuB,KAAJ,CAAO,KAEhBzb,KAAKkS,EAAI,IAAIuJ,KAAJ,CAAOvJ,EAAG,IACnBlS,KAAKif,EAAI,IAAIxD,KAAJ,CAAOwD,EAAG,IACnBjf,KAAKka,EAAI,IAAIuB,KAAJ,CAAOvB,EAAG,KAEhBla,KAAKkS,EAAE6J,MACV/b,KAAKkS,EAAIlS,KAAKkS,EAAEgK,MAAMlc,KAAKmd,MAAMpB,MAC9B/b,KAAKif,EAAElD,MACV/b,KAAKif,EAAIjf,KAAKif,EAAE/C,MAAMlc,KAAKmd,MAAMpB,MAC9B/b,KAAKka,EAAE6B,MACV/b,KAAKka,EAAIla,KAAKka,EAAEgC,MAAMlc,KAAKmd,MAAMpB,MAEnC/b,KAAKiiB,KAAOjiB,KAAKka,IAAMla,KAAKmd,MAAMhB,GACpC,CAjeA4E,GAAWtW,UAAU8W,iBAAmB,SAA0B1F,GAEhE,GAAK7b,KAAKkhB,OAAUlhB,KAAKqc,GAAMrc,KAAKgW,GAAwB,IAAnBhW,KAAK8b,EAAEoG,KAAK,GAArD,CAIA,IAAI/B,EACAgC,EACJ,GAAItG,EAAKsE,KACPA,EAAO,IAAI1E,KAAJ,CAAOI,EAAKsE,KAAM,IAAIjE,MAAMlc,KAAK+b,SACnC,CACL,IAAIqG,EAAQpiB,KAAKqiB,cAAcriB,KAAK8b,GAGpCqE,GADAA,EAAOiC,EAAM,GAAGlD,IAAIkD,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,IACzClG,MAAMlc,KAAK+b,IAC3B,CACE,GAAIF,EAAKsG,OACPA,EAAS,IAAI1G,KAAJ,CAAOI,EAAKsG,OAAQ,QACxB,CAEL,IAAIG,EAAUtiB,KAAKqiB,cAAcriB,KAAKgW,GACsB,IAAxDhW,KAAKqc,EAAE1H,IAAI2N,EAAQ,IAAIpQ,EAAEgN,IAAIlf,KAAKqc,EAAEnK,EAAEqQ,OAAOpC,IAC/CgC,EAASG,EAAQ,IAEjBH,EAASG,EAAQ,GACjBxB,GAA2D,IAApD9gB,KAAKqc,EAAE1H,IAAIwN,GAAQjQ,EAAEgN,IAAIlf,KAAKqc,EAAEnK,EAAEqQ,OAAOpC,KAEtD,CAeE,MAAO,CACLA,KAAMA,EACNgC,OAAQA,EACRK,MAdE3G,EAAK2G,MACC3G,EAAK2G,MAAM5hB,KAAI,SAAS6hB,GAC9B,MAAO,CACLlL,EAAG,IAAIkE,KAAJ,CAAOgH,EAAIlL,EAAG,IACjBC,EAAG,IAAIiE,KAAJ,CAAOgH,EAAIjL,EAAG,IAEzB,IAEYxX,KAAK0iB,cAAcP,GApCrB,CA4CV,EAEApB,GAAWtW,UAAU4X,cAAgB,SAAuB5I,GAI1D,IAAIsC,EAAMtC,IAAQzZ,KAAK8b,EAAI9b,KAAK+b,IAAMN,KAAAA,KAAQhC,GAC1CuH,EAAO,IAAIvF,KAAJ,CAAO,GAAGS,MAAMH,GAAKkF,UAC5B0B,EAAQ3B,EAAK5B,SAEbwD,EAAI,IAAInH,KAAJ,CAAO,GAAGS,MAAMH,GAAKqD,SAASyD,UAAUN,OAAOvB,GAIvD,MAAO,CAFE2B,EAAMG,OAAOF,GAAGzB,UAChBwB,EAAMI,OAAOH,GAAGzB,UAE3B,EAEAJ,GAAWtW,UAAUiY,cAAgB,SAAuBP,GA2B1D,IAzBA,IAYIa,EACAC,EAEAC,EACAC,EAEAC,EACAC,EAEAC,EAEA5K,EACAxG,EAxBAqR,EAAWvjB,KAAKgW,EAAEwN,MAAMpR,KAAKC,MAAMrS,KAAKgW,EAAE8D,YAAc,IAIxD2J,EAAItB,EACJpX,EAAI/K,KAAKgW,EAAEiE,QACXyJ,EAAK,IAAIjI,KAAJ,CAAO,GACZkI,EAAK,IAAIlI,KAAJ,CAAO,GACZmI,EAAK,IAAInI,KAAJ,CAAO,GACZoI,EAAK,IAAIpI,KAAJ,CAAO,GAaZnV,EAAI,EAGa,IAAdmd,EAAE1I,KAAK,IAAU,CACtB,IAAI+I,EAAI/Y,EAAE+R,IAAI2G,GACd/K,EAAI3N,EAAEsW,IAAIyC,EAAEnP,IAAI8O,IAChBvR,EAAI0R,EAAGvC,IAAIyC,EAAEnP,IAAI+O,IACjB,IAAIzE,EAAI4E,EAAGxC,IAAIyC,EAAEnP,IAAIgP,IAErB,IAAKT,GAAMxK,EAAEwG,IAAIqE,GAAY,EAC3BP,EAAKM,EAAMpF,MACX+E,EAAKS,EACLR,EAAKxK,EAAEwF,MACPiF,EAAKjR,OACA,GAAIgR,GAAc,MAAN5c,EACjB,MAEFgd,EAAQ5K,EAER3N,EAAI0Y,EACJA,EAAI/K,EACJkL,EAAKF,EACLA,EAAKxR,EACL2R,EAAKF,EACLA,EAAK1E,CACT,CACEmE,EAAK1K,EAAEwF,MACPmF,EAAKnR,EAEL,IAAI6R,EAAOb,EAAGc,MAAMtP,IAAIyO,EAAGa,OAiB3B,OAhBWZ,EAAGY,MAAMtP,IAAI2O,EAAGW,OAClB9E,IAAI6E,IAAS,IACpBX,EAAKJ,EACLK,EAAKJ,GAIHC,EAAGe,WACLf,EAAKA,EAAGhF,MACRiF,EAAKA,EAAGjF,OAENkF,EAAGa,WACLb,EAAKA,EAAGlF,MACRmF,EAAKA,EAAGnF,OAGH,CACL,CAAE3G,EAAG2L,EAAI1L,EAAG2L,GACZ,CAAE5L,EAAG6L,EAAI5L,EAAG6L,GAEhB,EAEAtC,GAAWtW,UAAUyZ,WAAa,SAAoBlK,GACpD,IAAIwI,EAAQxiB,KAAKshB,KAAKkB,MAClB2B,EAAK3B,EAAM,GACX4B,EAAK5B,EAAM,GAEX6B,EAAKD,EAAG5M,EAAE7C,IAAIqF,GAAGsK,SAAStkB,KAAKgW,GAC/BuO,EAAKJ,EAAG3M,EAAE0G,MAAMvJ,IAAIqF,GAAGsK,SAAStkB,KAAKgW,GAErCwO,EAAKH,EAAG1P,IAAIwP,EAAG5M,GACfkN,EAAKF,EAAG5P,IAAIyP,EAAG7M,GACfmN,EAAKL,EAAG1P,IAAIwP,EAAG3M,GACfmN,EAAKJ,EAAG5P,IAAIyP,EAAG5M,GAKnB,MAAO,CAAEiD,GAFAT,EAAEqH,IAAImD,GAAInD,IAAIoD,GAEN/J,GADRgK,EAAGhQ,IAAIiQ,GAAIzG,MAEtB,EAEA6C,GAAWtW,UAAUkV,WAAa,SAAoBzN,EAAG0S,IACvD1S,EAAI,IAAIuJ,KAAJ,CAAOvJ,EAAG,KACP6J,MACL7J,EAAIA,EAAEgK,MAAMlc,KAAK+b,MAEnB,IAAI8H,EAAK3R,EAAE2S,SAAStC,OAAOrQ,GAAG4S,QAAQ5S,EAAEqQ,OAAOviB,KAAKuX,IAAIuN,QAAQ9kB,KAAKwX,GACjEyH,EAAI4E,EAAGhB,UACX,GAA6C,IAAzC5D,EAAE4F,SAAS9B,OAAOc,GAAI3E,IAAIlf,KAAKic,MACjC,MAAM,IAAI5a,MAAM,iBAIlB,IAAIgZ,EAAQ4E,EAAEkC,UAAU9G,QAIxB,OAHIuK,IAAQvK,IAAUuK,GAAOvK,KAC3B4E,EAAIA,EAAEG,UAEDpf,KAAKqd,MAAMnL,EAAG+M,EACvB,EAEA8B,GAAWtW,UAAU6S,SAAW,SAAkBD,GAChD,GAAIA,EAAMyE,IACR,OAAO,EAET,IAAI5P,EAAImL,EAAMnL,EACV+M,EAAI5B,EAAM4B,EAEV8F,EAAK/kB,KAAKuX,EAAEgL,OAAOrQ,GACnB8S,EAAM9S,EAAE2S,SAAStC,OAAOrQ,GAAG4S,QAAQC,GAAID,QAAQ9kB,KAAKwX,GACxD,OAA2C,IAApCyH,EAAE4F,SAASI,QAAQD,GAAKjK,KAAK,EACtC,EAEAgG,GAAWtW,UAAUya,gBACjB,SAAyBjH,EAAQW,EAAQE,GAGvC,IAFA,IAAIqG,EAAUnlB,KAAKwhB,YACf4D,EAAUplB,KAAKyhB,YACVnb,EAAI,EAAGA,EAAI2X,EAAO9e,OAAQmH,IAAK,CACtC,IAAIsL,EAAQ5R,KAAKkkB,WAAWtF,EAAOtY,IAC/BwV,EAAImC,EAAO3X,GACX6Z,EAAOrE,EAAEsE,WAETxO,EAAM6I,GAAGwJ,WACXrS,EAAM6I,GAAG4K,OACTvJ,EAAIA,EAAEoC,KAAI,IAERtM,EAAM8I,GAAGuJ,WACXrS,EAAM8I,GAAG2K,OACTlF,EAAOA,EAAKjC,KAAI,IAGlBiH,EAAY,EAAJ7e,GAASwV,EACjBqJ,EAAY,EAAJ7e,EAAQ,GAAK6Z,EACrBiF,EAAY,EAAJ9e,GAASsL,EAAM6I,GACvB2K,EAAY,EAAJ9e,EAAQ,GAAKsL,EAAM8I,EACnC,CAIM,IAHA,IAAI1B,EAAMhZ,KAAK0e,YAAY,EAAGyG,EAASC,EAAa,EAAJ9e,EAAOwY,GAG9ClB,EAAI,EAAGA,EAAQ,EAAJtX,EAAOsX,IACzBuH,EAAQvH,GAAK,KACbwH,EAAQxH,GAAK,KAEf,OAAO5E,CACb,EAuBA0I,GAASE,GAAO3E,GAAKC,WAErB6D,GAAWtW,UAAU4S,MAAQ,SAAenL,EAAG+M,EAAG4C,GAChD,OAAO,IAAID,GAAM5hB,KAAMkS,EAAG+M,EAAG4C,EAC/B,EAEAd,GAAWtW,UAAU6R,cAAgB,SAAuBjB,EAAKU,GAC/D,OAAO6F,GAAM0D,SAAStlB,KAAMqb,EAAKU,EACnC,EAEA6F,GAAMnX,UAAU2V,SAAW,WACzB,GAAKpgB,KAAKmd,MAAMmE,KAAhB,CAGA,IAAIiE,EAAMvlB,KAAKod,YACf,GAAImI,GAAOA,EAAIpF,KACb,OAAOoF,EAAIpF,KAEb,IAAIA,EAAOngB,KAAKmd,MAAME,MAAMrd,KAAKkS,EAAEqQ,OAAOviB,KAAKmd,MAAMmE,KAAKnB,MAAOngB,KAAKif,GACtE,GAAIsG,EAAK,CACP,IAAIpI,EAAQnd,KAAKmd,MACbqI,EAAU,SAAS1J,GACrB,OAAOqB,EAAME,MAAMvB,EAAE5J,EAAEqQ,OAAOpF,EAAMmE,KAAKnB,MAAOrE,EAAEmD,EACxD,EACIsG,EAAIpF,KAAOA,EACXA,EAAK/C,YAAc,CACjB+C,KAAM,KACNvG,IAAK2L,EAAI3L,KAAO,CACd2E,IAAKgH,EAAI3L,IAAI2E,IACbN,OAAQsH,EAAI3L,IAAIqE,OAAOrd,IAAI4kB,IAE7BhI,QAAS+H,EAAI/H,SAAW,CACtBG,KAAM4H,EAAI/H,QAAQG,KAClBM,OAAQsH,EAAI/H,QAAQS,OAAOrd,IAAI4kB,IAGvC,CACE,OAAOrF,CAzBC,CA0BV,EAEAyB,GAAMnX,UAAUgb,OAAS,WACvB,OAAKzlB,KAAKod,YAGH,CAAEpd,KAAKkS,EAAGlS,KAAKif,EAAGjf,KAAKod,aAAe,CAC3CI,QAASxd,KAAKod,YAAYI,SAAW,CACnCG,KAAM3d,KAAKod,YAAYI,QAAQG,KAC/BM,OAAQje,KAAKod,YAAYI,QAAQS,OAAOnN,MAAM,IAEhD8I,IAAK5Z,KAAKod,YAAYxD,KAAO,CAC3B2E,IAAKve,KAAKod,YAAYxD,IAAI2E,IAC1BN,OAAQje,KAAKod,YAAYxD,IAAIqE,OAAOnN,MAAM,MATrC,CAAE9Q,KAAKkS,EAAGlS,KAAKif,EAY1B,EAEA2C,GAAM0D,SAAW,SAAkBnI,EAAO9B,EAAKU,GAC1B,kBAARV,IACTA,EAAM/X,KAAKoiB,MAAMrK,IACnB,IAAIrC,EAAMmE,EAAME,MAAMhC,EAAI,GAAIA,EAAI,GAAIU,GACtC,IAAKV,EAAI,GACP,OAAOrC,EAET,SAAS2M,EAAUtK,GACjB,OAAO8B,EAAME,MAAMhC,EAAI,GAAIA,EAAI,GAAIU,EACvC,CAEE,IAAIwJ,EAAMlK,EAAI,GAYd,OAXArC,EAAIoE,YAAc,CAChB+C,KAAM,KACN3C,QAAS+H,EAAI/H,SAAW,CACtBG,KAAM4H,EAAI/H,QAAQG,KAClBM,OAAQ,CAAEjF,GAAM5T,OAAOmgB,EAAI/H,QAAQS,OAAOrd,IAAI+kB,KAEhD/L,IAAK2L,EAAI3L,KAAO,CACd2E,IAAKgH,EAAI3L,IAAI2E,IACbN,OAAQ,CAAEjF,GAAM5T,OAAOmgB,EAAI3L,IAAIqE,OAAOrd,IAAI+kB,MAGvC3M,CACT,EAEA4I,GAAMnX,UAAUmb,QAAU,WACxB,OAAI5lB,KAAK6lB,aACA,sBACF,gBAAkB7lB,KAAKkS,EAAEiP,UAAUhN,SAAS,GAAI,GACnD,OAASnU,KAAKif,EAAEkC,UAAUhN,SAAS,GAAI,GAAK,GAClD,EAEAyN,GAAMnX,UAAUob,WAAa,WAC3B,OAAO7lB,KAAK8hB,GACd,EAEAF,GAAMnX,UAAUiK,IAAM,SAAaoH,GAEjC,GAAI9b,KAAK8hB,IACP,OAAOhG,EAGT,GAAIA,EAAEgG,IACJ,OAAO9hB,KAGT,GAAIA,KAAKwf,GAAG1D,GACV,OAAO9b,KAAKugB,MAGd,GAAIvgB,KAAKke,MAAMsB,GAAG1D,GAChB,OAAO9b,KAAKmd,MAAME,MAAM,KAAM,MAGhC,GAAwB,IAApBrd,KAAKkS,EAAEgN,IAAIpD,EAAE5J,GACf,OAAOlS,KAAKmd,MAAME,MAAM,KAAM,MAEhC,IAAI3K,EAAI1S,KAAKif,EAAE8D,OAAOjH,EAAEmD,GACN,IAAdvM,EAAEqI,KAAK,KACTrI,EAAIA,EAAE6P,OAAOviB,KAAKkS,EAAE6Q,OAAOjH,EAAE5J,GAAG+O,YAClC,IAAI6E,EAAKpT,EAAEmS,SAASI,QAAQjlB,KAAKkS,GAAG+S,QAAQnJ,EAAE5J,GAC1C6T,EAAKrT,EAAE6P,OAAOviB,KAAKkS,EAAE6Q,OAAO+C,IAAKb,QAAQjlB,KAAKif,GAClD,OAAOjf,KAAKmd,MAAME,MAAMyI,EAAIC,EAC9B,EAEAnE,GAAMnX,UAAU8V,IAAM,WACpB,GAAIvgB,KAAK8hB,IACP,OAAO9hB,KAGT,IAAIgmB,EAAMhmB,KAAKif,EAAE6D,OAAO9iB,KAAKif,GAC7B,GAAoB,IAAhB+G,EAAIjL,KAAK,GACX,OAAO/a,KAAKmd,MAAME,MAAM,KAAM,MAEhC,IAAI9F,EAAIvX,KAAKmd,MAAM5F,EAEfqM,EAAK5jB,KAAKkS,EAAE2S,SACZoB,EAAQD,EAAI/E,UACZvO,EAAIkR,EAAGd,OAAOc,GAAIkB,QAAQlB,GAAIkB,QAAQvN,GAAGgL,OAAO0D,GAEhDH,EAAKpT,EAAEmS,SAASI,QAAQjlB,KAAKkS,EAAE4Q,OAAO9iB,KAAKkS,IAC3C6T,EAAKrT,EAAE6P,OAAOviB,KAAKkS,EAAE6Q,OAAO+C,IAAKb,QAAQjlB,KAAKif,GAClD,OAAOjf,KAAKmd,MAAME,MAAMyI,EAAIC,EAC9B,EAEAnE,GAAMnX,UAAUqV,KAAO,WACrB,OAAO9f,KAAKkS,EAAEiP,SAChB,EAEAS,GAAMnX,UAAUsV,KAAO,WACrB,OAAO/f,KAAKif,EAAEkC,SAChB,EAEAS,GAAMnX,UAAUkK,IAAM,SAAaqF,GAEjC,OADAA,EAAI,IAAIyB,KAAJ,CAAOzB,EAAG,IACVha,KAAK6lB,aACA7lB,KACAA,KAAKqgB,YAAYrG,GACjBha,KAAKmd,MAAMI,aAAavd,KAAMga,GAC9Bha,KAAKmd,MAAMmE,KACXthB,KAAKmd,MAAM+H,gBAAgB,CAAEllB,MAAQ,CAAEga,IAEvCha,KAAKmd,MAAMiB,SAASpe,KAAMga,EACrC,EAEA4H,GAAMnX,UAAUyb,OAAS,SAAgBzL,EAAIgK,EAAI/J,GAC/C,IAAIuD,EAAS,CAAEje,KAAMykB,GACjB7F,EAAS,CAAEnE,EAAIC,GACnB,OAAI1a,KAAKmd,MAAMmE,KACNthB,KAAKmd,MAAM+H,gBAAgBjH,EAAQW,GAEnC5e,KAAKmd,MAAMuB,YAAY,EAAGT,EAAQW,EAAQ,EACrD,EAEAgD,GAAMnX,UAAU0b,QAAU,SAAiB1L,EAAIgK,EAAI/J,GACjD,IAAIuD,EAAS,CAAEje,KAAMykB,GACjB7F,EAAS,CAAEnE,EAAIC,GACnB,OAAI1a,KAAKmd,MAAMmE,KACNthB,KAAKmd,MAAM+H,gBAAgBjH,EAAQW,GAAQ,GAE3C5e,KAAKmd,MAAMuB,YAAY,EAAGT,EAAQW,EAAQ,GAAG,EACxD,EAEAgD,GAAMnX,UAAU+U,GAAK,SAAY1D,GAC/B,OAAO9b,OAAS8b,GACT9b,KAAK8hB,MAAQhG,EAAEgG,MACV9hB,KAAK8hB,KAA2B,IAApB9hB,KAAKkS,EAAEgN,IAAIpD,EAAE5J,IAAgC,IAApBlS,KAAKif,EAAEC,IAAIpD,EAAEmD,GAChE,EAEA2C,GAAMnX,UAAUyT,IAAM,SAAakI,GACjC,GAAIpmB,KAAK8hB,IACP,OAAO9hB,KAET,IAAIgZ,EAAMhZ,KAAKmd,MAAME,MAAMrd,KAAKkS,EAAGlS,KAAKif,EAAEG,UAC1C,GAAIgH,GAAepmB,KAAKod,YAAa,CACnC,IAAImI,EAAMvlB,KAAKod,YACXiJ,EAAS,SAASvK,GACpB,OAAOA,EAAEoC,KACf,EACIlF,EAAIoE,YAAc,CAChBxD,IAAK2L,EAAI3L,KAAO,CACd2E,IAAKgH,EAAI3L,IAAI2E,IACbN,OAAQsH,EAAI3L,IAAIqE,OAAOrd,IAAIylB,IAE7B7I,QAAS+H,EAAI/H,SAAW,CACtBG,KAAM4H,EAAI/H,QAAQG,KAClBM,OAAQsH,EAAI/H,QAAQS,OAAOrd,IAAIylB,IAGvC,CACE,OAAOrN,CACT,EAEA4I,GAAMnX,UAAU0U,IAAM,WACpB,OAAInf,KAAK8hB,IACA9hB,KAAKmd,MAAMY,OAAO,KAAM,KAAM,MAE7B/d,KAAKmd,MAAMY,OAAO/d,KAAKkS,EAAGlS,KAAKif,EAAGjf,KAAKmd,MAAMhB,IAEzD,EAsBAuF,GAASM,GAAQ/E,GAAKC,WAEtB6D,GAAWtW,UAAUsT,OAAS,SAAgB7L,EAAG+M,EAAG/E,GAClD,OAAO,IAAI8H,GAAOhiB,KAAMkS,EAAG+M,EAAG/E,EAChC,EAEA8H,GAAOvX,UAAU0T,IAAM,WACrB,GAAIne,KAAK6lB,aACP,OAAO7lB,KAAKmd,MAAME,MAAM,KAAM,MAEhC,IAAIiJ,EAAOtmB,KAAKka,EAAE+G,UACdsF,EAAQD,EAAKzB,SACbE,EAAK/kB,KAAKkS,EAAEqQ,OAAOgE,GACnBC,EAAKxmB,KAAKif,EAAEsD,OAAOgE,GAAOhE,OAAO+D,GAErC,OAAOtmB,KAAKmd,MAAME,MAAM0H,EAAIyB,EAC9B,EAEAxE,GAAOvX,UAAUyT,IAAM,WACrB,OAAOle,KAAKmd,MAAMY,OAAO/d,KAAKkS,EAAGlS,KAAKif,EAAEG,SAAUpf,KAAKka,EACzD,EAEA8H,GAAOvX,UAAUiK,IAAM,SAAaoH,GAElC,GAAI9b,KAAK6lB,aACP,OAAO/J,EAGT,GAAIA,EAAE+J,aACJ,OAAO7lB,KAGT,IAAIymB,EAAM3K,EAAE5B,EAAE2K,SACV6B,EAAK1mB,KAAKka,EAAE2K,SACZ7J,EAAKhb,KAAKkS,EAAEqQ,OAAOkE,GACnBxL,EAAKa,EAAE5J,EAAEqQ,OAAOmE,GAChBC,EAAK3mB,KAAKif,EAAEsD,OAAOkE,EAAIlE,OAAOzG,EAAE5B,IAChC0M,EAAK9K,EAAEmD,EAAEsD,OAAOmE,EAAGnE,OAAOviB,KAAKka,IAE/B2M,EAAI7L,EAAG+H,OAAO9H,GACdvC,EAAIiO,EAAG5D,OAAO6D,GAClB,GAAkB,IAAdC,EAAE9L,KAAK,GACT,OAAkB,IAAdrC,EAAEqC,KAAK,GACF/a,KAAKmd,MAAMY,OAAO,KAAM,KAAM,MAE9B/d,KAAKugB,MAGhB,IAAIuG,EAAKD,EAAEhC,SACPkC,EAAKD,EAAGvE,OAAOsE,GACf9b,EAAIiQ,EAAGuH,OAAOuE,GAEdhB,EAAKpN,EAAEmM,SAASC,QAAQiC,GAAI9B,QAAQla,GAAGka,QAAQla,GAC/Cgb,EAAKrN,EAAE6J,OAAOxX,EAAEka,QAAQa,IAAKb,QAAQ0B,EAAGpE,OAAOwE,IAC/CC,EAAKhnB,KAAKka,EAAEqI,OAAOzG,EAAE5B,GAAGqI,OAAOsE,GAEnC,OAAO7mB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUuT,SAAW,SAAkBlC,GAE5C,GAAI9b,KAAK6lB,aACP,OAAO/J,EAAEqD,MAGX,GAAIrD,EAAE+J,aACJ,OAAO7lB,KAGT,IAAI0mB,EAAK1mB,KAAKka,EAAE2K,SACZ7J,EAAKhb,KAAKkS,EACV+I,EAAKa,EAAE5J,EAAEqQ,OAAOmE,GAChBC,EAAK3mB,KAAKif,EACV2H,EAAK9K,EAAEmD,EAAEsD,OAAOmE,GAAInE,OAAOviB,KAAKka,GAEhC2M,EAAI7L,EAAG+H,OAAO9H,GACdvC,EAAIiO,EAAG5D,OAAO6D,GAClB,GAAkB,IAAdC,EAAE9L,KAAK,GACT,OAAkB,IAAdrC,EAAEqC,KAAK,GACF/a,KAAKmd,MAAMY,OAAO,KAAM,KAAM,MAE9B/d,KAAKugB,MAGhB,IAAIuG,EAAKD,EAAEhC,SACPkC,EAAKD,EAAGvE,OAAOsE,GACf9b,EAAIiQ,EAAGuH,OAAOuE,GAEdhB,EAAKpN,EAAEmM,SAASC,QAAQiC,GAAI9B,QAAQla,GAAGka,QAAQla,GAC/Cgb,EAAKrN,EAAE6J,OAAOxX,EAAEka,QAAQa,IAAKb,QAAQ0B,EAAGpE,OAAOwE,IAC/CC,EAAKhnB,KAAKka,EAAEqI,OAAOsE,GAEvB,OAAO7mB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUgU,KAAO,SAAcwI,GACpC,GAAY,IAARA,EACF,OAAOjnB,KACT,GAAIA,KAAK6lB,aACP,OAAO7lB,KACT,IAAKinB,EACH,OAAOjnB,KAAKugB,MAEd,IAAIja,EACJ,GAAItG,KAAKmd,MAAM+D,OAASlhB,KAAKmd,MAAMiE,OAAQ,CACzC,IAAI1I,EAAI1Y,KACR,IAAKsG,EAAI,EAAGA,EAAI2gB,EAAK3gB,IACnBoS,EAAIA,EAAE6H,MACR,OAAO7H,CACX,CAIE,IAAInB,EAAIvX,KAAKmd,MAAM5F,EACfyJ,EAAOhhB,KAAKmd,MAAM6D,KAElBkG,EAAKlnB,KAAKkS,EACViV,EAAKnnB,KAAKif,EACVmI,EAAKpnB,KAAKka,EACVmN,EAAMD,EAAGvC,SAASA,SAGlByC,EAAMH,EAAGrE,OAAOqE,GACpB,IAAK7gB,EAAI,EAAGA,EAAI2gB,EAAK3gB,IAAK,CACxB,IAAIihB,EAAML,EAAGrC,SACT2C,EAAOF,EAAIzC,SACX4C,EAAOD,EAAK3C,SACZnS,EAAI6U,EAAIzE,OAAOyE,GAAKzC,QAAQyC,GAAKzC,QAAQvN,EAAEgL,OAAO8E,IAElDtP,EAAKmP,EAAG3E,OAAOiF,GACf1B,EAAKpT,EAAEmS,SAASI,QAAQlN,EAAG+K,OAAO/K,IAClC2P,EAAK3P,EAAGkN,QAAQa,GAChB6B,EAAMjV,EAAE6P,OAAOmF,GACnBC,EAAMA,EAAI7C,QAAQ6C,GAAK1C,QAAQwC,GAC/B,IAAIT,EAAKM,EAAI/E,OAAO6E,GAChB9gB,EAAI,EAAI2gB,IACVI,EAAMA,EAAI9E,OAAOkF,IAEnBP,EAAKpB,EACLsB,EAAKJ,EACLM,EAAMK,CACV,CAEE,OAAO3nB,KAAKmd,MAAMY,OAAOmJ,EAAII,EAAI/E,OAAOvB,GAAOoG,EACjD,EAEApF,GAAOvX,UAAU8V,IAAM,WACrB,OAAIvgB,KAAK6lB,aACA7lB,KAELA,KAAKmd,MAAM+D,MACNlhB,KAAK4nB,WACL5nB,KAAKmd,MAAMiE,OACXphB,KAAK6nB,YAEL7nB,KAAK8nB,MAChB,EAEA9F,GAAOvX,UAAUmd,SAAW,WAC1B,IAAI9B,EACAC,EACAiB,EAEJ,GAAIhnB,KAAKiiB,KAAM,CAMb,IAAI8F,EAAK/nB,KAAKkS,EAAE2S,SAEZmD,EAAKhoB,KAAKif,EAAE4F,SAEZoD,EAAOD,EAAGnD,SAEVjC,EAAI5iB,KAAKkS,EAAE4Q,OAAOkF,GAAInD,SAASI,QAAQ8C,GAAI9C,QAAQgD,GACvDrF,EAAIA,EAAEkC,QAAQlC,GAEd,IAAIsF,EAAIH,EAAGjF,OAAOiF,GAAIjD,QAAQiD,GAE1B9R,EAAIiS,EAAErD,SAASI,QAAQrC,GAAGqC,QAAQrC,GAGlCuF,EAAQF,EAAKnD,QAAQmD,GAEzBE,GADAA,EAAQA,EAAMrD,QAAQqD,IACRrD,QAAQqD,GAGtBrC,EAAK7P,EAEL8P,EAAKmC,EAAE3F,OAAOK,EAAEqC,QAAQhP,IAAIgP,QAAQkD,GAEpCnB,EAAKhnB,KAAKif,EAAE6D,OAAO9iB,KAAKif,EAC5B,KAAS,CAML,IAAI1H,EAAIvX,KAAKkS,EAAE2S,SAEXrN,EAAIxX,KAAKif,EAAE4F,SAEXnS,EAAI8E,EAAEqN,SAENuD,EAAIpoB,KAAKkS,EAAE4Q,OAAOtL,GAAGqN,SAASI,QAAQ1N,GAAG0N,QAAQvS,GACrD0V,EAAIA,EAAEtD,QAAQsD,GAEd,IAAIC,EAAI9Q,EAAEuL,OAAOvL,GAAGuN,QAAQvN,GAExB+Q,EAAID,EAAExD,SAGN0D,EAAK7V,EAAEoS,QAAQpS,GAEnB6V,GADAA,EAAKA,EAAGzD,QAAQyD,IACRzD,QAAQyD,GAGhBzC,EAAKwC,EAAErD,QAAQmD,GAAGnD,QAAQmD,GAE1BrC,EAAKsC,EAAE9F,OAAO6F,EAAEnD,QAAQa,IAAKb,QAAQsD,GAGrCvB,GADAA,EAAKhnB,KAAKif,EAAEsD,OAAOviB,KAAKka,IAChB4K,QAAQkC,EACpB,CAEE,OAAOhnB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUod,UAAY,WAC3B,IAAI/B,EACAC,EACAiB,EAEJ,GAAIhnB,KAAKiiB,KAAM,CAMb,IAAI8F,EAAK/nB,KAAKkS,EAAE2S,SAEZmD,EAAKhoB,KAAKif,EAAE4F,SAEZoD,EAAOD,EAAGnD,SAEVjC,EAAI5iB,KAAKkS,EAAE4Q,OAAOkF,GAAInD,SAASI,QAAQ8C,GAAI9C,QAAQgD,GACvDrF,EAAIA,EAAEkC,QAAQlC,GAEd,IAAIsF,EAAIH,EAAGjF,OAAOiF,GAAIjD,QAAQiD,GAAIjD,QAAQ9kB,KAAKmd,MAAM5F,GAEjDtB,EAAIiS,EAAErD,SAASI,QAAQrC,GAAGqC,QAAQrC,GAEtCkD,EAAK7P,EAEL,IAAIkS,EAAQF,EAAKnD,QAAQmD,GAEzBE,GADAA,EAAQA,EAAMrD,QAAQqD,IACRrD,QAAQqD,GACtBpC,EAAKmC,EAAE3F,OAAOK,EAAEqC,QAAQhP,IAAIgP,QAAQkD,GAEpCnB,EAAKhnB,KAAKif,EAAE6D,OAAO9iB,KAAKif,EAC5B,KAAS,CAKL,IAAIuJ,EAAQxoB,KAAKka,EAAE2K,SAEf4D,EAAQzoB,KAAKif,EAAE4F,SAEf1E,EAAOngB,KAAKkS,EAAEqQ,OAAOkG,GAErBC,EAAQ1oB,KAAKkS,EAAE6Q,OAAOyF,GAAOjG,OAAOviB,KAAKkS,EAAE4Q,OAAO0F,IACtDE,EAAQA,EAAM5F,OAAO4F,GAAO5D,QAAQ4D,GAEpC,IAAIC,EAAQxI,EAAK2E,QAAQ3E,GAErByI,GADJD,EAAQA,EAAM7D,QAAQ6D,IACJ7F,OAAO6F,GACzB7C,EAAK4C,EAAM7D,SAASI,QAAQ2D,GAE5B5B,EAAKhnB,KAAKif,EAAE6D,OAAO9iB,KAAKka,GAAG2K,SAASI,QAAQwD,GAAOxD,QAAQuD,GAE3D,IAAIK,EAAUJ,EAAM5D,SAGpBgE,GADAA,GADAA,EAAUA,EAAQ/D,QAAQ+D,IACR/D,QAAQ+D,IACR/D,QAAQ+D,GAC1B9C,EAAK2C,EAAMnG,OAAOoG,EAAM1D,QAAQa,IAAKb,QAAQ4D,EACjD,CAEE,OAAO7oB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUqd,KAAO,WACtB,IAAIvQ,EAAIvX,KAAKmd,MAAM5F,EAGf2P,EAAKlnB,KAAKkS,EACViV,EAAKnnB,KAAKif,EACVmI,EAAKpnB,KAAKka,EACVmN,EAAMD,EAAGvC,SAASA,SAElB0C,EAAML,EAAGrC,SACTiE,EAAM3B,EAAGtC,SAETnS,EAAI6U,EAAIzE,OAAOyE,GAAKzC,QAAQyC,GAAKzC,QAAQvN,EAAEgL,OAAO8E,IAElD0B,EAAO7B,EAAGpE,OAAOoE,GAEjBnP,GADJgR,EAAOA,EAAKjE,QAAQiE,IACNxG,OAAOuG,GACjBhD,EAAKpT,EAAEmS,SAASI,QAAQlN,EAAG+K,OAAO/K,IAClC2P,EAAK3P,EAAGkN,QAAQa,GAEhBkD,EAAOF,EAAIjE,SAGfmE,GADAA,GADAA,EAAOA,EAAKlE,QAAQkE,IACRlE,QAAQkE,IACRlE,QAAQkE,GACpB,IAAIjD,EAAKrT,EAAE6P,OAAOmF,GAAIzC,QAAQ+D,GAC1BhC,EAAKG,EAAGrE,OAAOqE,GAAI5E,OAAO6E,GAE9B,OAAOpnB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUwe,KAAO,WACtB,IAAKjpB,KAAKmd,MAAM+D,MACd,OAAOlhB,KAAKugB,MAAM7L,IAAI1U,MAMxB,IAAI+nB,EAAK/nB,KAAKkS,EAAE2S,SAEZmD,EAAKhoB,KAAKif,EAAE4F,SAEZqE,EAAKlpB,KAAKka,EAAE2K,SAEZoD,EAAOD,EAAGnD,SAEVqD,EAAIH,EAAGjF,OAAOiF,GAAIjD,QAAQiD,GAE1BoB,EAAKjB,EAAErD,SAEPwD,EAAIroB,KAAKkS,EAAE4Q,OAAOkF,GAAInD,SAASI,QAAQ8C,GAAI9C,QAAQgD,GAKnDmB,GAFJf,GADAA,GADAA,EAAIA,EAAEvD,QAAQuD,IACRvF,OAAOuF,GAAGvD,QAAQuD,IAClBpD,QAAQkE,IAEHtE,SAEP5O,EAAIgS,EAAKnD,QAAQmD,GAGrBhS,GADAA,GADAA,EAAIA,EAAE6O,QAAQ7O,IACR6O,QAAQ7O,IACR6O,QAAQ7O,GAEd,IAAIwN,EAAIyE,EAAEpD,QAAQuD,GAAGxD,SAASI,QAAQkE,GAAIlE,QAAQmE,GAAInE,QAAQhP,GAE1DoT,EAAOrB,EAAGzF,OAAOkB,GAErB4F,GADAA,EAAOA,EAAKvE,QAAQuE,IACRvE,QAAQuE,GACpB,IAAIvD,EAAK9lB,KAAKkS,EAAEqQ,OAAO6G,GAAInE,QAAQoE,GAEnCvD,GADAA,EAAKA,EAAGhB,QAAQgB,IACRhB,QAAQgB,GAEhB,IAAIC,EAAK/lB,KAAKif,EAAEsD,OAAOkB,EAAElB,OAAOtM,EAAEgP,QAAQxB,IAAIwB,QAAQoD,EAAE9F,OAAO6G,KAG/DrD,GADAA,GADAA,EAAKA,EAAGjB,QAAQiB,IACRjB,QAAQiB,IACRjB,QAAQiB,GAEhB,IAAIiB,EAAKhnB,KAAKka,EAAE4I,OAAOuF,GAAGxD,SAASI,QAAQiE,GAAIjE,QAAQmE,GAEvD,OAAOppB,KAAKmd,MAAMY,OAAO+H,EAAIC,EAAIiB,EACnC,EAEAhF,GAAOvX,UAAUkK,IAAM,SAAaqF,EAAGsP,GAGrC,OAFAtP,EAAI,IAAIyB,KAAJ,CAAOzB,EAAGsP,GAEPtpB,KAAKmd,MAAMiB,SAASpe,KAAMga,EACnC,EAEAgI,GAAOvX,UAAU+U,GAAK,SAAY1D,GAChC,GAAe,WAAXA,EAAElW,KACJ,OAAO5F,KAAKwf,GAAG1D,EAAEqD,OAEnB,GAAInf,OAAS8b,EACX,OAAO,EAGT,IAAI4K,EAAK1mB,KAAKka,EAAE2K,SACZ4B,EAAM3K,EAAE5B,EAAE2K,SACd,GAA2D,IAAvD7kB,KAAKkS,EAAEqQ,OAAOkE,GAAKxB,QAAQnJ,EAAE5J,EAAEqQ,OAAOmE,IAAK3L,KAAK,GAClD,OAAO,EAGT,IAAIwO,EAAK7C,EAAGnE,OAAOviB,KAAKka,GACpBsP,EAAM/C,EAAIlE,OAAOzG,EAAE5B,GACvB,OAA8D,IAAvDla,KAAKif,EAAEsD,OAAOiH,GAAKvE,QAAQnJ,EAAEmD,EAAEsD,OAAOgH,IAAKxO,KAAK,EACzD,EAEAiH,GAAOvX,UAAUgf,OAAS,SAAgBvX,GACxC,IAAIwX,EAAK1pB,KAAKka,EAAE2K,SACZ8E,EAAKzX,EAAEgK,MAAMlc,KAAKmd,MAAMpB,KAAKwG,OAAOmH,GACxC,GAAuB,IAAnB1pB,KAAKkS,EAAEgN,IAAIyK,GACb,OAAO,EAIT,IAFA,IAAIC,EAAK1X,EAAE+H,QACPhE,EAAIjW,KAAKmd,MAAMJ,KAAKwF,OAAOmH,KACtB,CAEP,GADAE,EAAGC,KAAK7pB,KAAKmd,MAAMnH,GACf4T,EAAG1K,IAAIlf,KAAKmd,MAAMrB,IAAM,EAC1B,OAAO,EAGT,GADA6N,EAAG7E,QAAQ7O,GACY,IAAnBjW,KAAKkS,EAAEgN,IAAIyK,GACb,OAAO,CACb,CACA,EAEA3H,GAAOvX,UAAUmb,QAAU,WACzB,OAAI5lB,KAAK6lB,aACA,uBACF,iBAAmB7lB,KAAKkS,EAAEiC,SAAS,GAAI,GAC1C,OAASnU,KAAKif,EAAE9K,SAAS,GAAI,GAC7B,OAASnU,KAAKka,EAAE/F,SAAS,GAAI,GAAK,GACxC,EAEA6N,GAAOvX,UAAUob,WAAa,WAE5B,OAA0B,IAAnB7lB,KAAKka,EAAEa,KAAK,EACrB,E,yBCv6BA,IAAIoC,EAAQvE,EAEZuE,EAAMF,KAAOA,GACbE,EAAM2M,MAAQnI,GACdxE,EAAM4M,KAAI,KACV5M,EAAM6M,QAAO,I,yBCLb,IAsKIzE,EAtKA0E,EAASrR,EAMTP,EAASqD,GAAMrD,OAEnB,SAAS6R,EAAYhjB,GACE,UAAjBA,EAAQtB,KACV5F,KAAKmd,MAAQ,IAAIgN,GAAML,MAAM5iB,GACL,YAAjBA,EAAQtB,KACf5F,KAAKmd,MAAQ,IAAIgN,GAAMH,QAAQ9iB,GAE/BlH,KAAKmd,MAAQ,IAAIgN,GAAMJ,KAAK7iB,GAC9BlH,KAAKqc,EAAIrc,KAAKmd,MAAMd,EACpBrc,KAAKgW,EAAIhW,KAAKmd,MAAMnH,EACpBhW,KAAK2X,KAAOzQ,EAAQyQ,KAEpBU,EAAOrY,KAAKqc,EAAEiB,WAAY,iBAC1BjF,EAAOrY,KAAKqc,EAAE1H,IAAI3U,KAAKgW,GAAG6P,aAAc,0BAC1C,CAGA,SAASuE,EAAYziB,EAAMT,GACzBlE,OAAOoH,eAAe6f,EAAQtiB,EAAM,CAClCiZ,cAAc,EACdvW,YAAY,EACZggB,IAAK,WACH,IAAIlN,EAAQ,IAAI+M,EAAYhjB,GAM5B,OALAlE,OAAOoH,eAAe6f,EAAQtiB,EAAM,CAClCiZ,cAAc,EACdvW,YAAY,EACZ5K,MAAO0d,IAEFA,CACb,GAEA,CAhBA8M,EAAOC,YAAcA,EAkBrBE,EAAY,OAAQ,CAClBxkB,KAAM,QACNoW,MAAO,OACPF,EAAG,wDACHvE,EAAG,wDACHC,EAAG,wDACHxB,EAAG,wDACH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,wDACA,2DAIJ+N,EAAY,OAAQ,CAClBxkB,KAAM,QACNoW,MAAO,OACPF,EAAG,iEACHvE,EAAG,iEACHC,EAAG,iEACHxB,EAAG,iEACH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,iEACA,oEAIJ+N,EAAY,OAAQ,CAClBxkB,KAAM,QACNoW,MAAO,KACPF,EAAG,0EACHvE,EAAG,0EACHC,EAAG,0EACHxB,EAAG,0EACH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,0EACA,6EAIJ+N,EAAY,OAAQ,CAClBxkB,KAAM,QACNoW,MAAO,KACPF,EAAG,8GAEHvE,EAAG,8GAEHC,EAAG,8GAEHxB,EAAG,8GAEH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,8GAEA,iHAKJ+N,EAAY,OAAQ,CAClBxkB,KAAM,QACNoW,MAAO,KACPF,EAAG,2JAGHvE,EAAG,2JAGHC,EAAG,2JAGHxB,EAAG,2JAGH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,2JAGA,8JAMJ+N,EAAY,aAAc,CACxBxkB,KAAM,OACNoW,MAAO,SACPF,EAAG,sEACHvE,EAAG,QACHC,EAAG,IACHxB,EAAG,sEACH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,OAIJ+N,EAAY,UAAW,CACrBxkB,KAAM,UACNoW,MAAO,SACPF,EAAG,sEACHvE,EAAG,KACH7E,EAAG,IAEH0V,EAAG,sEACHpS,EAAG,sEACH2B,KAAMA,KAAAA,OACN4E,MAAM,EACNF,EAAG,CACD,mEAGA,sEAKJ,IACEkJ,EAAG,KAAA+E,OACL,CAAE,MAAOjC,GACP9C,OAAMnmB,CACR,CAEAgrB,EAAY,YAAa,CACvBxkB,KAAM,QACNoW,MAAO,OACPF,EAAG,0EACHvE,EAAG,IACHC,EAAG,IACHxB,EAAG,0EACH6Q,EAAG,IACHlP,KAAMA,KAAAA,OAGNwI,KAAM,mEACNgC,OAAQ,mEACRK,MAAO,CACL,CACEjL,EAAG,mCACHC,EAAG,qCAEL,CACED,EAAG,oCACHC,EAAG,qCAIP+E,MAAM,EACNF,EAAG,CACD,mEACA,mEACAkJ,I,ICrMJ,SAASgF,GAASrjB,GAChB,KAAMlH,gBAAgBuqB,IACpB,OAAO,IAAIA,GAASrjB,GACtBlH,KAAK2X,KAAOzQ,EAAQyQ,KACpB3X,KAAKwqB,aAAetjB,EAAQsjB,WAE5BxqB,KAAKyqB,OAASzqB,KAAK2X,KAAK+S,QACxB1qB,KAAK2qB,WAAazjB,EAAQyjB,YAAc3qB,KAAK2X,KAAKiT,aAElD5qB,KAAK6qB,QAAU,KACf7qB,KAAK8qB,eAAiB,KACtB9qB,KAAK+qB,EAAI,KACT/qB,KAAKgrB,EAAI,KAET,IAAIC,EAAU1R,GAAMN,QAAQ/R,EAAQ+jB,QAAS/jB,EAAQgkB,YAAc,OAC/Dnb,EAAQwJ,GAAMN,QAAQ/R,EAAQ6I,MAAO7I,EAAQikB,UAAY,OACzDC,EAAO7R,GAAMN,QAAQ/R,EAAQkkB,KAAMlkB,EAAQmkB,SAAW,OAC1DjT,GAAO6S,EAAQ9rB,QAAWa,KAAK2qB,WAAa,EACrC,mCAAqC3qB,KAAK2qB,WAAa,SAC9D3qB,KAAKsrB,MAAML,EAASlb,EAAOqb,EAC7B,CACA,IAAAG,GAAiBhB,GAEjBA,GAAS9f,UAAU6gB,MAAQ,SAAcL,EAASlb,EAAOqb,GACvD,IAAII,EAAOP,EAAQ7lB,OAAO2K,GAAO3K,OAAOgmB,GAExCprB,KAAK+qB,EAAI,IAAIlf,MAAM7L,KAAKyqB,OAAS,GACjCzqB,KAAKgrB,EAAI,IAAInf,MAAM7L,KAAKyqB,OAAS,GACjC,IAAK,IAAInkB,EAAI,EAAGA,EAAItG,KAAKgrB,EAAE7rB,OAAQmH,IACjCtG,KAAK+qB,EAAEzkB,GAAK,EACZtG,KAAKgrB,EAAE1kB,GAAK,EAGdtG,KAAKyrB,QAAQD,GACbxrB,KAAK6qB,QAAU,EACf7qB,KAAK8qB,eAAiB,eACxB,EAEAP,GAAS9f,UAAUihB,MAAQ,WACzB,OAAO,IAAI/T,KAAAA,MAAU3X,KAAK2X,KAAM3X,KAAK+qB,EACvC,EAEAR,GAAS9f,UAAUghB,QAAU,SAAgBD,GAC3C,IAAIG,EAAO3rB,KAAK0rB,QACAE,OAAO5rB,KAAKgrB,GACZY,OAAO,CAAE,IACrBJ,IACFG,EAAOA,EAAKC,OAAOJ,IACrBxrB,KAAK+qB,EAAIY,EAAKE,SACd7rB,KAAKgrB,EAAIhrB,KAAK0rB,QAAQE,OAAO5rB,KAAKgrB,GAAGa,SAChCL,IAGLxrB,KAAK+qB,EAAI/qB,KAAK0rB,QACAE,OAAO5rB,KAAKgrB,GACZY,OAAO,CAAE,IACTA,OAAOJ,GACPK,SACd7rB,KAAKgrB,EAAIhrB,KAAK0rB,QAAQE,OAAO5rB,KAAKgrB,GAAGa,SACvC,EAEAtB,GAAS9f,UAAUqhB,OAAS,SAAgBb,EAASC,EAAYxW,EAAKqX,GAE1C,kBAAfb,IACTa,EAASrX,EACTA,EAAMwW,EACNA,EAAa,MAGfD,EAAU1R,GAAMN,QAAQgS,EAASC,GACjCxW,EAAM6E,GAAMN,QAAQvE,EAAKqX,GAEzB3T,GAAO6S,EAAQ9rB,QAAWa,KAAK2qB,WAAa,EACrC,mCAAqC3qB,KAAK2qB,WAAa,SAE9D3qB,KAAKyrB,QAAQR,EAAQ7lB,OAAOsP,GAAO,KACnC1U,KAAK6qB,QAAU,CACjB,EAEAN,GAAS9f,UAAUuhB,SAAW,SAAkBnN,EAAK3F,EAAKxE,EAAKqX,GAC7D,GAAI/rB,KAAK6qB,QAAU7qB,KAAK8qB,eACtB,MAAM,IAAIzpB,MAAM,sBAGC,kBAAR6X,IACT6S,EAASrX,EACTA,EAAMwE,EACNA,EAAM,MAIJxE,IACFA,EAAM6E,GAAMN,QAAQvE,EAAKqX,GAAU,OACnC/rB,KAAKyrB,QAAQ/W,IAIf,IADA,IAAIuX,EAAO,GACJA,EAAK9sB,OAAS0f,GACnB7e,KAAKgrB,EAAIhrB,KAAK0rB,QAAQE,OAAO5rB,KAAKgrB,GAAGa,SACrCI,EAAOA,EAAK7mB,OAAOpF,KAAKgrB,GAG1B,IAAIhS,EAAMiT,EAAKnb,MAAM,EAAG+N,GAGxB,OAFA7e,KAAKyrB,QAAQ/W,GACb1U,KAAK6qB,UACEtR,GAAM9S,OAAOuS,EAAKE,EAC3B,EC5GA,IAAIgT,GAASxQ,GAAMrD,OAEnB,SAAS8T,GAAQC,EAAIllB,GACnBlH,KAAKosB,GAAKA,EACVpsB,KAAKqsB,KAAO,KACZrsB,KAAKssB,IAAM,KAGPplB,EAAQmlB,MACVrsB,KAAKusB,eAAerlB,EAAQmlB,KAAMnlB,EAAQslB,SACxCtlB,EAAQolB,KACVtsB,KAAKysB,cAAcvlB,EAAQolB,IAAKplB,EAAQwlB,OAC5C,CACA,IAAAltB,GAAiB2sB,GAEjBA,GAAQQ,WAAa,SAAoBP,EAAIE,EAAKpT,GAChD,OAAIoT,aAAeH,GACVG,EAEF,IAAIH,GAAQC,EAAI,CACrBE,IAAKA,EACLI,OAAQxT,GAEZ,EAEAiT,GAAQS,YAAc,SAAqBR,EAAIC,EAAMnT,GACnD,OAAImT,aAAgBF,GACXE,EAEF,IAAIF,GAAQC,EAAI,CACrBC,KAAMA,EACNG,QAAStT,GAEb,EAEAiT,GAAQ1hB,UAAU6S,SAAW,WAC3B,IAAIgP,EAAMtsB,KAAK6sB,YAEf,OAAIP,EAAIzG,aACC,CAAE7kB,QAAQ,EAAO8rB,OAAQ,sBAC7BR,EAAIhP,WAEJgP,EAAI3X,IAAI3U,KAAKosB,GAAGjP,MAAMnH,GAAG6P,aAGvB,CAAE7kB,QAAQ,EAAM8rB,OAAQ,MAFtB,CAAE9rB,QAAQ,EAAO8rB,OAAQ,uBAFzB,CAAE9rB,QAAQ,EAAO8rB,OAAQ,4BAKpC,EAEAX,GAAQ1hB,UAAUoiB,UAAY,SAAmBhN,EAAS3G,GAUxD,MARuB,kBAAZ2G,IACT3G,EAAM2G,EACNA,EAAU,MAGP7f,KAAKssB,MACRtsB,KAAKssB,IAAMtsB,KAAKosB,GAAG/P,EAAE1H,IAAI3U,KAAKqsB,OAE3BnT,EAGElZ,KAAKssB,IAAI7lB,OAAOyS,EAAK2G,GAFnB7f,KAAKssB,GAGhB,EAEAH,GAAQ1hB,UAAUsiB,WAAa,SAAoB7T,GACjD,MAAY,QAARA,EACKlZ,KAAKqsB,KAAKlY,SAAS,GAAI,GAEvBnU,KAAKqsB,IAChB,EAEAF,GAAQ1hB,UAAU8hB,eAAiB,SAAwB/sB,EAAK0Z,GAC9DlZ,KAAKqsB,KAAO,IAAI5Q,KAAJ,CAAOjc,EAAK0Z,GAAO,IAI/BlZ,KAAKqsB,KAAOrsB,KAAKqsB,KAAKW,KAAKhtB,KAAKosB,GAAGjP,MAAMnH,EAC3C,EAEAmW,GAAQ1hB,UAAUgiB,cAAgB,SAAuBjtB,EAAK0Z,GAC5D,GAAI1Z,EAAI0S,GAAK1S,EAAIyf,EAWf,MAP2B,SAAvBjf,KAAKosB,GAAGjP,MAAMvX,KAChBsmB,GAAO1sB,EAAI0S,EAAG,qBACkB,UAAvBlS,KAAKosB,GAAGjP,MAAMvX,MACS,YAAvB5F,KAAKosB,GAAGjP,MAAMvX,MACvBsmB,GAAO1sB,EAAI0S,GAAK1S,EAAIyf,EAAG,qCAEzBjf,KAAKssB,IAAMtsB,KAAKosB,GAAGjP,MAAME,MAAM7d,EAAI0S,EAAG1S,EAAIyf,IAG5Cjf,KAAKssB,IAAMtsB,KAAKosB,GAAGjP,MAAMsC,YAAYjgB,EAAK0Z,EAC5C,EAGAiT,GAAQ1hB,UAAUwiB,OAAS,SAAgBX,GAIzC,OAHIA,EAAIhP,YACN4O,GAAOI,EAAIhP,WAAY,8BAElBgP,EAAI3X,IAAI3U,KAAKqsB,MAAMvM,MAC5B,EAGAqM,GAAQ1hB,UAAUyiB,KAAO,SAAc3U,EAAKW,EAAKhS,GAC/C,OAAOlH,KAAKosB,GAAGc,KAAK3U,EAAKvY,KAAMkZ,EAAKhS,EACtC,EAEAilB,GAAQ1hB,UAAU0iB,OAAS,SAAgB5U,EAAK6U,GAC9C,OAAOptB,KAAKosB,GAAGe,OAAO5U,EAAK6U,EAAWptB,KACxC,EAEAmsB,GAAQ1hB,UAAUmb,QAAU,WAC1B,MAAO,eAAiB5lB,KAAKqsB,MAAQrsB,KAAKqsB,KAAKlY,SAAS,GAAI,IACrD,UAAYnU,KAAKssB,KAAOtsB,KAAKssB,IAAI1G,WAAa,IACvD,ECnHA,IAAIyH,GAAS3R,GAAMrD,OAEnB,SAASiV,GAAUpmB,EAASgS,GAC1B,GAAIhS,aAAmBomB,GACrB,OAAOpmB,EAELlH,KAAKutB,WAAWrmB,EAASgS,KAG7BmU,GAAOnmB,EAAQwR,GAAKxR,EAAQ0b,EAAG,4BAC/B5iB,KAAK0Y,EAAI,IAAI+C,KAAJ,CAAOvU,EAAQwR,EAAG,IAC3B1Y,KAAK4iB,EAAI,IAAInH,KAAJ,CAAOvU,EAAQ0b,EAAG,SACGxjB,IAA1B8H,EAAQsmB,cACVxtB,KAAKwtB,cAAgB,KAErBxtB,KAAKwtB,cAAgBtmB,EAAQsmB,cACjC,CACA,IAAAJ,GAAiBE,GAEjB,SAASG,KACPztB,KAAK0tB,MAAQ,CACf,CAEA,SAASC,GAAUC,EAAK9R,GACtB,IAAI+R,EAAUD,EAAI9R,EAAE4R,SACpB,KAAgB,IAAVG,GACJ,OAAOA,EAET,IAAIC,EAAqB,GAAVD,EAGf,GAAiB,IAAbC,GAAkBA,EAAW,EAC/B,OAAO,EAIT,IADA,IAAIxV,EAAM,EACDhS,EAAI,EAAGynB,EAAMjS,EAAE4R,MAAOpnB,EAAIwnB,EAAUxnB,IAAKynB,IAChDzV,IAAQ,EACRA,GAAOsV,EAAIG,GACXzV,KAAS,EAIX,QAAIA,GAAO,OAIXwD,EAAE4R,MAAQK,EACHzV,EACT,CAEA,SAAS0V,GAAUJ,GAGjB,IAFA,IAAItnB,EAAI,EACJuY,EAAM+O,EAAIzuB,OAAS,GACfyuB,EAAItnB,MAAqB,IAAbsnB,EAAItnB,EAAI,KAAcA,EAAIuY,GAC5CvY,IAEF,OAAU,IAANA,EACKsnB,EAEFA,EAAI9c,MAAMxK,EACnB,CA2DA,SAAS2nB,GAAgB3U,EAAKuF,GAC5B,GAAIA,EAAM,IACRvF,EAAIrZ,KAAK4e,OADX,CAIA,IAAIqP,EAAS,GAAK9b,KAAKG,IAAIsM,GAAOzM,KAAK+b,MAAQ,GAE/C,IADA7U,EAAIrZ,KAAc,IAATiuB,KACAA,GACP5U,EAAIrZ,KAAM4e,KAASqP,GAAU,GAAM,KAErC5U,EAAIrZ,KAAK4e,EANX,CAOA,CApEAyO,GAAU7iB,UAAU8iB,WAAa,SAAoB/rB,EAAM0X,GACzD1X,EAAOka,GAAMzC,QAAQzX,EAAM0X,GAC3B,IAAI4C,EAAI,IAAI2R,GACZ,GAAwB,KAApBjsB,EAAKsa,EAAE4R,SACT,OAAO,EAET,IAAI7O,EAAM8O,GAAUnsB,EAAMsa,GAC1B,IAAY,IAAR+C,EACF,OAAO,EAET,GAAKA,EAAM/C,EAAE4R,QAAWlsB,EAAKrC,OAC3B,OAAO,EAET,GAAwB,IAApBqC,EAAKsa,EAAE4R,SACT,OAAO,EAET,IAAIU,EAAOT,GAAUnsB,EAAMsa,GAC3B,IAAa,IAATsS,EACF,OAAO,EAET,IAAI1V,EAAIlX,EAAKsP,MAAMgL,EAAE4R,MAAOU,EAAOtS,EAAE4R,OAErC,GADA5R,EAAE4R,OAASU,EACa,IAApB5sB,EAAKsa,EAAE4R,SACT,OAAO,EAET,IAAIW,EAAOV,GAAUnsB,EAAMsa,GAC3B,IAAa,IAATuS,EACF,OAAO,EAET,GAAI7sB,EAAKrC,SAAWkvB,EAAOvS,EAAE4R,MAC3B,OAAO,EAET,IAAI9K,EAAIphB,EAAKsP,MAAMgL,EAAE4R,MAAOW,EAAOvS,EAAE4R,OACrC,GAAa,IAAThV,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAE5H,MAAM,EAKlB,CACE,GAAa,IAAT8R,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAE9R,MAAM,EAKlB,CAME,OAJA9Q,KAAK0Y,EAAI,IAAI+C,KAAJ,CAAO/C,GAChB1Y,KAAK4iB,EAAI,IAAInH,KAAJ,CAAOmH,GAChB5iB,KAAKwtB,cAAgB,MAEd,CACT,EAeAF,GAAU7iB,UAAU6jB,MAAQ,SAAepV,GACzC,IAAIR,EAAI1Y,KAAK0Y,EAAEO,UACX2J,EAAI5iB,KAAK4iB,EAAE3J,UAYf,IATW,IAAPP,EAAE,KACJA,EAAI,CAAE,GAAItT,OAAOsT,IAER,IAAPkK,EAAE,KACJA,EAAI,CAAE,GAAIxd,OAAOwd,IAEnBlK,EAAIsV,GAAUtV,GACdkK,EAAIoL,GAAUpL,IAENA,EAAE,MAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAE9R,MAAM,GAEd,IAAIwI,EAAM,CAAE,GACZ2U,GAAgB3U,EAAKZ,EAAEvZ,SACvBma,EAAMA,EAAIlU,OAAOsT,IACbzY,KAAK,GACTguB,GAAgB3U,EAAKsJ,EAAEzjB,QACvB,IAAIovB,EAAWjV,EAAIlU,OAAOwd,GACtB5J,EAAM,CAAE,IAGZ,OAFAiV,GAAgBjV,EAAKuV,EAASpvB,QAC9B6Z,EAAMA,EAAI5T,OAAOmpB,GACV7S,GAAMjV,OAAOuS,EAAKE,EAC3B,EC/JA,IAAIsV,GAAI,qBAAAntB,MAAA,gBACJotB,GAAS/S,GAAMrD,OAKnB,SAASqW,GAAGxnB,GACV,KAAMlH,gBAAgB0uB,IACpB,OAAO,IAAIA,GAAGxnB,GAGO,kBAAZA,IACTunB,GAAOzrB,OAAOyH,UAAUkkB,eAAe9rB,KAAK+rB,GAAQ1nB,GAClD,iBAAmBA,GAErBA,EAAU0nB,GAAO1nB,IAIfA,aAAmB0nB,GAAO1E,cAC5BhjB,EAAU,CAAEiW,MAAOjW,IAErBlH,KAAKmd,MAAQjW,EAAQiW,MAAMA,MAC3Bnd,KAAKgW,EAAIhW,KAAKmd,MAAMnH,EACpBhW,KAAK6uB,GAAK7uB,KAAKgW,EAAEwN,MAAM,GACvBxjB,KAAKqc,EAAIrc,KAAKmd,MAAMd,EAGpBrc,KAAKqc,EAAInV,EAAQiW,MAAMd,EACvBrc,KAAKqc,EAAE4D,WAAW/Y,EAAQiW,MAAMnH,EAAE8D,YAAc,GAGhD9Z,KAAK2X,KAAOzQ,EAAQyQ,MAAQzQ,EAAQiW,MAAMxF,IAC5C,CACA,IAAAyU,GAAiBsC,GAEjBA,GAAGjkB,UAAUqkB,QAAU,SAAiB5nB,GACtC,OAAO,IAAI1H,GAAQQ,KAAMkH,EAC3B,EAEAwnB,GAAGjkB,UAAUskB,eAAiB,SAAwB1C,EAAMnT,GAC1D,OAAO1Z,GAAQotB,YAAY5sB,KAAMqsB,EAAMnT,EACzC,EAEAwV,GAAGjkB,UAAUukB,cAAgB,SAAuB1C,EAAKpT,GACvD,OAAO1Z,GAAQmtB,WAAW3sB,KAAMssB,EAAKpT,EACvC,EAEAwV,GAAGjkB,UAAUwkB,WAAa,SAAoB/nB,GACvCA,IACHA,EAAU,CAAC,GAcb,IAXA,IAAIgoB,EAAO,IAAI3D,GAAS,CACtB5T,KAAM3X,KAAK2X,KACXyT,KAAMlkB,EAAQkkB,KACdC,QAASnkB,EAAQmkB,SAAW,OAC5BJ,QAAS/jB,EAAQ+jB,SAAWuD,GAAKxuB,KAAK2X,KAAKiT,cAC3CM,WAAYhkB,EAAQ+jB,SAAW/jB,EAAQgkB,YAAc,OACrDnb,MAAO/P,KAAKgW,EAAEiD,YAGZ1H,EAAQvR,KAAKgW,EAAE0J,aACfyP,EAAMnvB,KAAKgW,EAAEqL,IAAI,IAAI5F,KAAJ,CAAO,MACnB,CACP,IAAI4Q,EAAO,IAAI5Q,KAAJ,CAAOyT,EAAKlD,SAASza,IAChC,KAAI8a,EAAKnN,IAAIiQ,GAAO,GAIpB,OADA9C,EAAK+C,MAAM,GACJpvB,KAAK+uB,eAAe1C,EAC/B,CACA,EAEAqC,GAAGjkB,UAAU4kB,aAAe,SAAsB9W,EAAK+W,GACrD,IAAI9G,EAA2B,EAAnBjQ,EAAImH,aAAmB1f,KAAKgW,EAAE8D,YAG1C,OAFI0O,EAAQ,IACVjQ,EAAMA,EAAIiL,MAAMgF,KACb8G,GAAa/W,EAAI2G,IAAIlf,KAAKgW,IAAM,EAC5BuC,EAAI8I,IAAIrhB,KAAKgW,GAEbuC,CACX,EAEAmW,GAAGjkB,UAAUyiB,KAAO,SAAc3U,EAAK/Y,EAAK0Z,EAAKhS,GAC5B,kBAARgS,IACThS,EAAUgS,EACVA,EAAM,MAEHhS,IACHA,EAAU,CAAC,GAEb1H,EAAMQ,KAAK+uB,eAAevvB,EAAK0Z,GAC/BX,EAAMvY,KAAKqvB,aAAa,IAAI5T,KAAJ,CAAOlD,EAAK,KAqBpC,IAlBA,IAAIhH,EAAQvR,KAAKgW,EAAE0J,aACf6P,EAAO/vB,EAAIutB,aAAa9T,QAAQ,KAAM1H,GAGtCxB,EAAQwI,EAAIU,QAAQ,KAAM1H,GAG1B2d,EAAO,IAAI3D,GAAS,CACtB5T,KAAM3X,KAAK2X,KACXsT,QAASsE,EACTxf,MAAOA,EACPqb,KAAMlkB,EAAQkkB,KACdC,QAASnkB,EAAQmkB,SAAW,SAI1BmE,EAAMxvB,KAAKgW,EAAEqL,IAAI,IAAI5F,KAAJ,CAAO,IAEnBgU,EAAO,GAAKA,IAAQ,CAC3B,IAAIzV,EAAI9S,EAAQ8S,EACd9S,EAAQ8S,EAAEyV,GACV,IAAIhU,KAAJ,CAAOyT,EAAKlD,SAAShsB,KAAKgW,EAAE0J,eAE9B,MADA1F,EAAIha,KAAKqvB,aAAarV,GAAG,IACnBe,KAAK,IAAM,GAAKf,EAAEkF,IAAIsQ,IAAQ,GAApC,CAGA,IAAIE,EAAK1vB,KAAKqc,EAAE1H,IAAIqF,GACpB,IAAI0V,EAAG7J,aAAP,CAGA,IAAI8J,EAAMD,EAAG5P,OACTpH,EAAIiX,EAAI3C,KAAKhtB,KAAKgW,GACtB,GAAkB,IAAd0C,EAAEqC,KAAK,GAAX,CAGA,IAAI6H,EAAI5I,EAAE4V,KAAK5vB,KAAKgW,GAAGrB,IAAI+D,EAAE/D,IAAInV,EAAIutB,cAAclD,KAAKtR,IAExD,GAAkB,KADlBqK,EAAIA,EAAEoK,KAAKhtB,KAAKgW,IACV+E,KAAK,GAAX,CAGA,IAAIyS,GAAiBkC,EAAG3P,OAAO1F,QAAU,EAAI,IACT,IAAfsV,EAAIzQ,IAAIxG,GAAW,EAAI,GAQ5C,OALIxR,EAAQ2oB,WAAajN,EAAE1D,IAAIlf,KAAK6uB,IAAM,IACxCjM,EAAI5iB,KAAKgW,EAAEqL,IAAIuB,GACf4K,GAAiB,GAGZ,IAAIJ,GAAU,CAAE1U,EAAGA,EAAGkK,EAAGA,EAAG4K,cAAeA,GAXxC,CALA,CALA,CAJA,CA0Bd,CACA,EAEAkB,GAAGjkB,UAAU0iB,OAAS,SAAgB5U,EAAKuX,EAAWtwB,EAAK0Z,GACzDX,EAAMvY,KAAKqvB,aAAa,IAAI5T,KAAJ,CAAOlD,EAAK,KACpC/Y,EAAMQ,KAAKgvB,cAAcxvB,EAAK0Z,GAI9B,IAAIR,GAHJoX,EAAY,IAAI1C,GAAU0C,EAAW,QAGnBpX,EACdkK,EAAIkN,EAAUlN,EAClB,GAAIlK,EAAEqC,KAAK,GAAK,GAAKrC,EAAEwG,IAAIlf,KAAKgW,IAAM,EACpC,OAAO,EACT,GAAI4M,EAAE7H,KAAK,GAAK,GAAK6H,EAAE1D,IAAIlf,KAAKgW,IAAM,EACpC,OAAO,EAGT,IAGI8F,EAHAiU,EAAOnN,EAAEgN,KAAK5vB,KAAKgW,GACnBgF,EAAK+U,EAAKpb,IAAI4D,GAAKyU,KAAKhtB,KAAKgW,GAC7BiF,EAAK8U,EAAKpb,IAAI+D,GAAGsU,KAAKhtB,KAAKgW,GAG/B,OAAKhW,KAAKmd,MAAMH,gBAWhBlB,EAAI9b,KAAKqc,EAAE8J,QAAQnL,EAAIxb,EAAIqtB,YAAa5R,IAClC4K,cAMC/J,EAAE2N,OAAO/Q,KAjBdoD,EAAI9b,KAAKqc,EAAE6J,OAAOlL,EAAIxb,EAAIqtB,YAAa5R,IACjC4K,cAGkC,IAAjC/J,EAAEgE,OAAOkN,KAAKhtB,KAAKgW,GAAGkJ,IAAIxG,EAcrC,EAEAgW,GAAGjkB,UAAUulB,cAAgB,SAASzX,EAAKuX,EAAWlS,EAAG1E,GACvDuV,IAAQ,EAAI7Q,KAAOA,EAAG,4CACtBkS,EAAY,IAAI1C,GAAU0C,EAAW5W,GAErC,IAAIlD,EAAIhW,KAAKgW,EACTqS,EAAI,IAAI5M,KAAJ,CAAOlD,GACXG,EAAIoX,EAAUpX,EACdkK,EAAIkN,EAAUlN,EAGdqN,EAAa,EAAJrS,EACTsS,EAActS,GAAK,EACvB,GAAIlF,EAAEwG,IAAIlf,KAAKmd,MAAMrB,EAAEkR,KAAKhtB,KAAKmd,MAAMnH,KAAO,GAAKka,EACjD,MAAM,IAAI7uB,MAAM,wCAIhBqX,EADEwX,EACElwB,KAAKmd,MAAMwC,WAAWjH,EAAEhE,IAAI1U,KAAKmd,MAAMnH,GAAIia,GAE3CjwB,KAAKmd,MAAMwC,WAAWjH,EAAGuX,GAE/B,IAAIE,EAAOL,EAAUpX,EAAEkX,KAAK5Z,GACxB2Q,EAAK3Q,EAAEqL,IAAIgH,GAAG1T,IAAIwb,GAAMnD,KAAKhX,GAC7B4Q,EAAKhE,EAAEjO,IAAIwb,GAAMnD,KAAKhX,GAI1B,OAAOhW,KAAKqc,EAAE6J,OAAOS,EAAIjO,EAAGkO,EAC9B,EAEA8H,GAAGjkB,UAAU2lB,oBAAsB,SAAS/H,EAAGyH,EAAWO,EAAGnX,GAE3D,GAAgC,QADhC4W,EAAY,IAAI1C,GAAU0C,EAAW5W,IACvBsU,cACZ,OAAOsC,EAAUtC,cAEnB,IAAK,IAAIlnB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIgqB,EACJ,IACEA,EAAStwB,KAAKgwB,cAAc3H,EAAGyH,EAAWxpB,EAChD,CAAM,MAAO+hB,GACP,QACN,CAEI,GAAIiI,EAAO9Q,GAAG6Q,GACZ,OAAO/pB,CACb,CACE,MAAM,IAAIjF,MAAM,uCAClB,E,ICjPIkvB,G,kBCCJ,IAAIC,EAAW5X,EAEf4X,EAASnkB,QAAO,QAChBmkB,EAAS7X,MAAQ+C,GACjB8U,EAAShC,KAAI,qBAAAntB,MAAA,gBACbmvB,EAASrT,MAAQgN,GACjBqG,EAASvG,OAAS2E,GAGlB4B,EAASpE,GAAKA,GACdoE,EAASC,MAAK,I,IDXDrE,GEQPvlB,GAAS,IAAIC,EAAAA,GCTI,qBDWnB4pB,GAAa,KACjB,SAASC,KAIL,OAHKD,KACDA,GAAS,IAAIhC,GAAG,cAEbgC,EACX,CAEO,IAAME,GAAU,WAYnB,SAAAA,EAAYC,IAAqBxxB,EAAAA,EAAAA,GAAA,KAAAuxB,IAC7B1mB,EAAAA,EAAAA,IAAelK,KAAM,QAAS,cAE9BkK,EAAAA,EAAAA,IAAelK,KAAM,cAAc+Q,EAAAA,EAAAA,IAAQ8f,IACJ,MAAnCC,EAAAA,EAAAA,IAAc9wB,KAAK6wB,aACnBhqB,GAAOmD,mBAAmB,sBAAuB,aAAc,kBAGnE,IAAM8kB,EAAU6B,KAAW5B,gBAAevoB,EAAAA,EAAAA,IAASxG,KAAK6wB,cAExD3mB,EAAAA,EAAAA,IAAelK,KAAM,YAAa,KAAO8uB,EAAQjC,WAAU,EAAO,SAClE3iB,EAAAA,EAAAA,IAAelK,KAAM,sBAAuB,KAAO8uB,EAAQjC,WAAU,EAAM,SAE3E3iB,EAAAA,EAAAA,IAAelK,KAAM,iBAAiB,EAC1C,CA8BC,OA9BAT,EAAAA,EAAAA,GAAAqxB,EAAA,EAAApxB,IAAA,YAAAC,MAED,SAAUsxB,GACN,IAAMC,EAAML,KAAW3B,eAAcxoB,EAAAA,EAAAA,IAASxG,KAAKixB,YAC7CzM,EAAMmM,KAAW3B,eAAcxoB,EAAAA,EAAAA,IAASuqB,IAC9C,MAAO,KAAOC,EAAG1E,IAAI5X,IAAI8P,EAAG8H,KAAK1M,iBAAiB,MACtD,GAAC,CAAApgB,IAAA,aAAAC,MAED,SAAWosB,GACP,IAAMiD,EAAU6B,KAAW5B,gBAAevoB,EAAAA,EAAAA,IAASxG,KAAK6wB,aAClDK,GAAc1qB,EAAAA,EAAAA,IAASqlB,GACF,KAAvBqF,EAAY/xB,QACZ0H,GAAOmD,mBAAmB,oBAAqB,SAAU6hB,GAE7D,IAAMuB,EAAY0B,EAAQ5B,KAAKgE,EAAa,CAAErB,WAAW,IACzD,OAAOsB,EAAAA,EAAAA,GAAe,CAClB3D,cAAeJ,EAAUI,cACzB9U,GAAGhF,EAAAA,EAAAA,IAAW,KAAO0Z,EAAU1U,EAAEvE,SAAS,IAAK,IAC/CyO,GAAGlP,EAAAA,EAAAA,IAAW,KAAO0Z,EAAUxK,EAAEzO,SAAS,IAAK,KAEvD,GAAC,CAAA3U,IAAA,sBAAAC,MAED,SAAoB2xB,GAChB,IAAMtC,EAAU6B,KAAW5B,gBAAevoB,EAAAA,EAAAA,IAASxG,KAAK6wB,aAClDQ,EAAeV,KAAW3B,eAAcxoB,EAAAA,EAAAA,IAAS8qB,GAAiBF,KACxE,OAAO1d,EAAAA,EAAAA,IAAW,KAAOob,EAAQ7B,OAAOoE,EAAaxE,aAAa1Y,SAAS,IAAK,GACpF,IAAC,EAAA3U,IAAA,eAAAC,MAED,SAAoBA,GAChB,SAAUA,IAASA,EAAM8xB,cAC7B,KAACX,CAAA,CAxDkB,GAiEjB,SAAUU,GAAiB9xB,EAAgBgyB,GAC7C,IAAMjgB,GAAQ/K,EAAAA,EAAAA,IAAShH,GAEvB,GAAqB,KAAjB+R,EAAMpS,OAAe,CACrB,IAAMsyB,EAAa,IAAIb,GAAWrf,GAClC,OAAIigB,EACO,KAAOb,KAAW5B,eAAexd,GAAOsb,WAAU,EAAM,OAE5D4E,EAAWR,S,CAEf,OAAqB,KAAjB1f,EAAMpS,OACTqyB,GAAqBzgB,EAAAA,EAAAA,IAAQQ,GAC1B,KAAOof,KAAW3B,cAAczd,GAAOsb,WAAU,EAAO,OAEvC,KAAjBtb,EAAMpS,OACRqyB,EACE,KAAOb,KAAW3B,cAAczd,GAAOsb,WAAU,EAAM,QADpC9b,EAAAA,EAAAA,IAAQQ,GAI/B1K,GAAOmD,mBAAmB,gCAAiC,MAAO,aAC7E,CExGO,ICyBK0nB,GAZN7qB,GAAS,IAAIC,EAAAA,GDbI,sBCoFvB,SAAS6qB,GAAclyB,GACnB,MAAc,OAAVA,EAAyB,KACtBwN,EAAWxN,EACtB,CAEA,SAASmyB,GAAanyB,GAClB,MAAc,OAAVA,EAAyB6T,GACtBD,EAAAA,GAAU3E,KAAKjP,EAC1B,EAnEA,SAAYiyB,GACRA,EAAAA,EAAA,mBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,oBACH,CAJD,CAAYA,KAAAA,GAAgB,KAwFtB,SAAUG,GAAehG,EAAmBuB,GAC9C,OANE,SAAyB5tB,GAC3B,IAAMyxB,EAAYK,GAAiB9xB,GACnC,OAAOyN,GAAW6kB,EAAAA,EAAAA,IAAazhB,GAAUyhB,EAAAA,EAAAA,IAAab,EAAW,IAAK,IAC1E,CAGWc,CHpCL,SAA2BlG,EAAmBuB,GAChD,IAAM4E,GAAMb,EAAAA,EAAAA,GAAe/D,GACrB6E,EAAK,CAAEvZ,GAAGlS,EAAAA,EAAAA,IAASwrB,EAAItZ,GAAIkK,GAAGpc,EAAAA,EAAAA,IAASwrB,EAAIpP,IACjD,MAAO,KAAO+N,KAAWX,eAAcxpB,EAAAA,EAAAA,IAASqlB,GAASoG,EAAID,EAAIxE,eAAe/mB,OAAO,OAAO,EAClG,CGgC0ByrB,EAAiB1rB,EAAAA,EAAAA,IAASqlB,GAASuB,GAC7D,CAEA,SAAS+E,GAAa1yB,EAAqBkI,GACvC,IAAM3G,GAASoxB,EAAAA,EAAAA,IAAW/e,EAAAA,GAAU3E,KAAKjP,GAAOkU,eAIhD,OAHI3S,EAAO7B,OAAS,IAChB0H,GAAOmD,mBAAmB,sBAAwBrC,EAAO,eAAiBA,EAAOlI,GAE9EuB,CACX,CAEA,SAASqxB,GAAaC,EAAcC,GAChC,MAAO,CACHrjB,QAASjC,EAAWqlB,GACpBC,aAAcA,GAAe,IAAI3xB,KAAI,SAAC4xB,EAAYtxB,GAI9C,OAHkC,MAA9B4vB,EAAAA,EAAAA,IAAc0B,IACd3rB,GAAOmD,mBAAmB,iCAAkC,cAAF5E,OAAiBktB,EAAK,KAAAltB,OAAKlE,EAAM,KAAKsxB,GAE7FA,EAAW7jB,aACtB,IAER,CAEM,SAAU8jB,GAAchzB,GAC1B,GAAIoM,MAAMC,QAAQrM,GACd,OAA0FA,EAAOmB,KAAI,SAAC8xB,EAAKxxB,GACvG,OAAI2K,MAAMC,QAAQ4mB,IACVA,EAAIvzB,OAAS,GACb0H,GAAOmD,mBAAmB,wDAAyD,SAAF5E,OAAYlE,EAAM,KAAKwxB,GAErGL,GAAaK,EAAI,GAAIA,EAAI,KAE7BL,GAAaK,EAAIxjB,QAASwjB,EAAIH,YACzC,IAGJ,IAAMvxB,EAAiEgC,OAAO8H,KAAKrL,GAAOmB,KAAI,SAAC0xB,GAC3F,IAAMC,EAAoC9yB,EAAM6yB,GAAMpnB,QAAO,SAACC,EAAOqnB,GAEjE,OADArnB,EAAMqnB,IAAc,EACbrnB,CACX,GAAyB,CAAC,GAC1B,OAAOknB,GAAaC,EAAMtvB,OAAO8H,KAAKynB,GAAahc,OACvD,IAEA,OADAvV,EAAOuV,MAAK,SAACgB,EAAGC,GAAC,OAAMD,EAAErI,QAAQyjB,cAAcnb,EAAEtI,QAAQ,IAClDlO,CACX,CAEA,SAAS4xB,GAAiBnzB,GACtB,OAAOgzB,GAAchzB,GAAOmB,KAAI,SAAC8xB,GAAG,MAAK,CAAEA,EAAIxjB,QAASwjB,EAAIH,YAAa,GAC7E,CAEA,SAASM,GAAkB1lB,EAAkCigB,GAIzD,GAA4B,MAAxBjgB,EAAYuC,SAAkB,CAC9B,IAAMA,EAAW2D,EAAAA,GAAU3E,KAAKvB,EAAYuC,UACtCF,EAAe6D,EAAAA,GAAU3E,KAAKvB,EAAYqC,cAAgB,GAC3DE,EAAS8P,GAAGhQ,IACb3I,GAAOmD,mBAAmB,6CAA8C,KAAM,CAC1E0F,SAAAA,EAAUF,aAAAA,G,CAKtB,IAAM2F,EAAc,CAChBgd,GAAahlB,EAAY9E,SAAW,EAAG,WACvC8pB,GAAahlB,EAAY4C,OAAS,EAAG,SACrCoiB,GAAahlB,EAAYsC,sBAAwB,EAAG,wBACpD0iB,GAAahlB,EAAYqC,cAAgB,EAAG,gBAC5C2iB,GAAahlB,EAAY6C,UAAY,EAAG,YACpB,MAAlB7C,EAAY0B,GAAc5B,EAAWE,EAAY0B,IAAK,KACxDsjB,GAAahlB,EAAY1N,OAAS,EAAG,SACpC0N,EAAY3L,MAAQ,KACpBoxB,GAAiBzlB,EAAY2lB,YAAc,KAGhD,GAAI1F,EAAW,CACX,IAAM4E,GAAMb,EAAAA,EAAAA,GAAe/D,GAC3BjY,EAAOlV,KAAKkyB,GAAaH,EAAIxE,cAAe,kBAC5CrY,EAAOlV,MAAKmyB,EAAAA,EAAAA,IAAWJ,EAAItZ,IAC3BvD,EAAOlV,MAAKmyB,EAAAA,EAAAA,IAAWJ,EAAIpP,G,CAG/B,OAAO5N,EAAAA,EAAAA,IAAU,CAAE,OAAQ+d,EAAW5d,IAC1C,CAEA,SAAS6d,GAAkB7lB,EAAkCigB,GACzD,IAAMjY,EAAc,CAChBgd,GAAahlB,EAAY9E,SAAW,EAAG,WACvC8pB,GAAahlB,EAAY4C,OAAS,EAAG,SACrCoiB,GAAahlB,EAAYuC,UAAY,EAAG,YACxCyiB,GAAahlB,EAAY6C,UAAY,EAAG,YACpB,MAAlB7C,EAAY0B,GAAc5B,EAAWE,EAAY0B,IAAK,KACxDsjB,GAAahlB,EAAY1N,OAAS,EAAG,SACpC0N,EAAY3L,MAAQ,KACpBoxB,GAAiBzlB,EAAY2lB,YAAc,KAGhD,GAAI1F,EAAW,CACX,IAAM4E,GAAMb,EAAAA,EAAAA,GAAe/D,GAC3BjY,EAAOlV,KAAKkyB,GAAaH,EAAIxE,cAAe,kBAC5CrY,EAAOlV,MAAKmyB,EAAAA,EAAAA,IAAWJ,EAAItZ,IAC3BvD,EAAOlV,MAAKmyB,EAAAA,EAAAA,IAAWJ,EAAIpP,G,CAG/B,OAAO5N,EAAAA,EAAAA,IAAU,CAAE,OAAQ+d,EAAW5d,IAC1C,CA4GA,SAAS8d,GAAmB5lB,EAAiB8H,EAAuB+d,GAChE,IACI,IAAMC,EAAQvB,GAAazc,EAAO,IAAIie,WACtC,GAAc,IAAVD,GAAyB,IAAVA,EAAe,MAAM,IAAI9xB,MAAM,aAClDgM,EAAGtC,EAAIooB,C,CACT,MAAO/xB,GACLyF,GAAOmD,mBAAmB,oCAAqC,IAAKmL,EAAO,G,CAG/E9H,EAAGqL,GAAIhF,EAAAA,EAAAA,IAAWyB,EAAO,GAAI,IAC7B9H,EAAGuV,GAAIlP,EAAAA,EAAAA,IAAWyB,EAAO,GAAI,IAE7B,IACI,IAAM0W,EAASxb,EAAU6iB,EAAU7lB,IACnCA,EAAGqB,KAAOmjB,GAAehG,EAAQ,CAAEnT,EAAGrL,EAAGqL,EAAGkK,EAAGvV,EAAGuV,EAAG4K,cAAengB,EAAGtC,G,CACzE,MAAO3J,GAAQ,CACrB,CAoIM,SAAUskB,GAAM2N,GAClB,IAAMlyB,GAAUqF,EAAAA,EAAAA,IAAS6sB,GAGzB,GAAIlyB,EAAQ,GAAK,IAAQ,OAvE7B,SAAgBkyB,GACZ,IAAMlmB,EAAc4lB,EAAWM,GAEJ,IAAvBlmB,EAAYhO,QAAuC,IAAvBgO,EAAYhO,QACxC0H,GAAOmD,mBAAmB,0BAA2B,iBAAkBqpB,GAG3E,IAAMhmB,EAAkB,CACpB0C,MAAU6hB,GAAazkB,EAAY,IAAIimB,WACvC1jB,SAAUkiB,GAAazkB,EAAY,IACnC6C,SAAU4hB,GAAazkB,EAAY,IACnC0B,GAAU8iB,GAAcxkB,EAAY,IACpC1N,MAAUmyB,GAAazkB,EAAY,IACnC3L,KAAU2L,EAAY,GACtB9E,QAAU,GAId,GAA2B,IAAvB8E,EAAYhO,OAAgB,OAAOkO,EAEvC,IACIA,EAAGtC,EAAIsI,EAAAA,GAAU3E,KAAKvB,EAAY,IAAIimB,U,CAExC,MAAOhyB,GAEL,OAAOiM,C,CAMX,GAHAA,EAAGqL,GAAIhF,EAAAA,EAAAA,IAAWvG,EAAY,GAAI,IAClCE,EAAGuV,GAAIlP,EAAAA,EAAAA,IAAWvG,EAAY,GAAI,IAE9BkG,EAAAA,GAAU3E,KAAKrB,EAAGqL,GAAG4a,UAAYjgB,EAAAA,GAAU3E,KAAKrB,EAAGuV,GAAG0Q,SAEtDjmB,EAAGhF,QAAUgF,EAAGtC,EAChBsC,EAAGtC,EAAI,MAEJ,CAGHsC,EAAGhF,QAAU+J,KAAKC,OAAOhF,EAAGtC,EAAI,IAAM,GAClCsC,EAAGhF,QAAU,IAAKgF,EAAGhF,QAAU,GAEnC,IAAImlB,EAAgBngB,EAAGtC,EAAI,GAErBwoB,EAAMpmB,EAAY2D,MAAM,EAAG,GAEd,IAAfzD,EAAGhF,UACHkrB,EAAItzB,MAAK8Q,EAAAA,EAAAA,IAAQ1D,EAAGhF,UACpBkrB,EAAItzB,KAAK,MACTszB,EAAItzB,KAAK,MACTutB,GAA8B,EAAbngB,EAAGhF,QAAc,GAGtC,IAAMwjB,EAASxb,EAAU0iB,EAAWQ,IACpC,IACIlmB,EAAGqB,KAAOmjB,GAAehG,EAAQ,CAAEnT,GAAG3H,EAAAA,EAAAA,IAAQ1D,EAAGqL,GAAIkK,GAAG7R,EAAAA,EAAAA,IAAQ1D,EAAGuV,GAAI4K,cAAeA,G,CACxF,MAAOpsB,GAAQ,CAEjBiM,EAAGsK,KAAOtH,EAAUgjB,E,CAKxB,OAFAhmB,EAAGzH,KAAO,KAEHyH,CACX,CAOoCmmB,CAAOryB,GAGvC,OAAQA,EAAQ,IACZ,KAAK,EACD,OA1GZ,SAAuBA,GACnB,IAAMgM,EAAc4lB,EAAW5xB,EAAQ2P,MAAM,IAElB,IAAvB3D,EAAYhO,QAAuC,KAAvBgO,EAAYhO,QACxC0H,GAAOmD,mBAAmB,kDAAmD,WAAW+G,EAAAA,EAAAA,IAAQ5P,IAGpG,IAAMkM,EAAkB,CACpBzH,KAAY,EACZyC,QAAYupB,GAAazkB,EAAY,IAAIimB,WACzCrjB,MAAY6hB,GAAazkB,EAAY,IAAIimB,WACzC1jB,SAAYkiB,GAAazkB,EAAY,IACrC6C,SAAY4hB,GAAazkB,EAAY,IACrC0B,GAAY8iB,GAAcxkB,EAAY,IACtC1N,MAAYmyB,GAAazkB,EAAY,IACrC3L,KAAY2L,EAAY,GACxB2lB,WAAYL,GAActlB,EAAY,KAI1C,OAA2B,IAAvBA,EAAYhO,SAEhBkO,EAAGsK,KAAOtH,EAAUlP,GAEpB8xB,GAAmB5lB,EAAIF,EAAY2D,MAAM,GAAIkiB,KAJN3lB,CAO3C,CA+EmBomB,CAActyB,GACzB,KAAK,EACD,OA7IZ,SAAuBA,GACnB,IAAMgM,EAAc4lB,EAAW5xB,EAAQ2P,MAAM,IAElB,IAAvB3D,EAAYhO,QAAuC,KAAvBgO,EAAYhO,QACxC0H,GAAOmD,mBAAmB,kDAAmD,WAAW+G,EAAAA,EAAAA,IAAQ5P,IAGpG,IAAMsO,EAAuBmiB,GAAazkB,EAAY,IAChDqC,EAAeoiB,GAAazkB,EAAY,IACxCE,EAAkB,CACpBzH,KAAuB,EACvByC,QAAuBupB,GAAazkB,EAAY,IAAIimB,WACpDrjB,MAAuB6hB,GAAazkB,EAAY,IAAIimB,WACpD3jB,qBAAuBA,EACvBD,aAAuBA,EACvBE,SAAuB,KACvBM,SAAuB4hB,GAAazkB,EAAY,IAChD0B,GAAuB8iB,GAAcxkB,EAAY,IACjD1N,MAAuBmyB,GAAazkB,EAAY,IAChD3L,KAAuB2L,EAAY,GACnC2lB,WAAuBL,GAActlB,EAAY,KAIrD,OAA2B,IAAvBA,EAAYhO,SAEhBkO,EAAGsK,KAAOtH,EAAUlP,GAEpB8xB,GAAmB5lB,EAAIF,EAAY2D,MAAM,GAAI+hB,KAJNxlB,CAO3C,CA8GmBqmB,CAAcvyB,GAK7B,OAAO0F,GAAO+I,WAAW,iCAADxK,OAAmCjE,EAAQ,IAAO2F,EAAAA,GAAO0F,OAAOqD,sBAAuB,CAC3GC,UAAW,mBACX6jB,gBAAiBxyB,EAAQ,IAEjC,C,mUCteM0F,GAAS,IAAIC,EAAAA,GCXI,2BDsJD8sB,GAAU,SAAAC,IAAAjyB,EAAAA,EAAAA,GAAAgyB,EAAAC,GAAA,IAAAlwB,GAAA7B,EAAAA,EAAAA,GAAA8xB,GAAA,SAAAA,IAAA,OAAAv0B,EAAAA,EAAAA,GAAA,KAAAu0B,GAAAjwB,EAAAmwB,MAAA,KAAA50B,UAAA,CAO3B,OAP2BK,EAAAA,EAAAA,GAAAq0B,EAAA,OAAAp0B,IAAA,cAAAC,MAK5B,SAAmBA,GACf,SAAUA,IAASA,EAAMs0B,aAC7B,KAACH,CAAA,CAP2B,CAAQznB,EAAAA,IA4ElB6nB,GAAQ,WAgF1B,SAAAA,KAAA30B,EAAAA,EAAAA,GAAA,KAAA20B,GACIntB,GAAOgG,cAAc,gBAADmnB,EAAA,KAAArpB,iBAAA,EAAaqpB,IACjC9pB,EAAAA,EAAAA,IAAelK,KAAM,eAAe,EACxC,CAIC,OAJAT,EAAAA,EAAAA,GAAAy0B,EAAA,EAAAx0B,IAAA,aAAAC,MA3EK,W,gJAC0B,O,UAAMmL,EAAAA,EAAAA,IAAkB,CAChD+H,MAAO3S,KAAKi0B,SAAS,UACrBvkB,SAAU1P,KAAKkO,cAAcoB,OAAM,SAAClO,GAGhC,OAAO,IACX,MACF,OAWD,OAXC8yB,EAAA5zB,EAAAuD,KAPM8O,EAAKuhB,EAALvhB,MAAOjD,EAAQwkB,EAARxkB,SASXykB,EAAoB,KAAM3kB,EAAe,KAAMC,EAAuB,KAEtEkD,GAASA,EAAMyhB,gBAIfD,EAAoBxhB,EAAMyhB,cAC1B3kB,EAAuB4D,EAAAA,GAAU3E,KAAK,cACtCc,EAAemD,EAAMyhB,cAAczf,IAAI,GAAGD,IAAIjF,IACjDnP,EAAAC,OAAA,SAEM,CAAE4zB,kBAAAA,EAAmB3kB,aAAAA,EAAcC,qBAAAA,EAAsBC,SAAAA,IAAU,wBAAApP,EAAAE,OAAA,GAAAC,EAAA,S,GAoC9E,CAAAjB,IAAA,cAAAC,MACA,SAAY40B,EAAsBC,GAC9B,OAAOt0B,KAAKu0B,GAAGF,EAAWC,EAC9B,GAEA,CAAA90B,IAAA,iBAAAC,MACA,SAAe40B,EAAsBC,GACjC,OAAOt0B,KAAK+tB,IAAIsG,EAAWC,EAC/B,IAAC,EAAA90B,IAAA,aAAAC,MAYD,SAAkBA,GACd,SAAUA,IAASA,EAAM+0B,YAC7B,KAACR,CAAA,CAvFyB,G,UEvLjBS,GAAK,WAOd,SAAAA,EAAYC,IAAgBr1B,EAAAA,EAAAA,GAAA,KAAAo1B,IACxBvqB,EAAAA,EAAAA,IAAelK,KAAM,WAAY00B,IACjCxqB,EAAAA,EAAAA,IAAelK,KAAM,OAAQ00B,EAASv1B,SAEtC+K,EAAAA,EAAAA,IAAelK,KAAM,eAAgB,CAAC,IACtCkK,EAAAA,EAAAA,IAAelK,KAAM,UAAW00B,EAASC,OAAO,IAGhD,IAAK,IAAIruB,EAAI,EAAGA,EAAIouB,EAASv1B,OAAQmH,IACjCtG,KAAK40B,aAAaF,EAASC,OAAOruB,IAAMA,CAEhD,CAwEC,OAxEA/G,EAAAA,EAAAA,GAAAk1B,EAAA,EAAAj1B,IAAA,SAAAC,MAED,SAAOA,GACH,IAAIo1B,GAASruB,EAAAA,EAAAA,IAAS/G,GAEtB,GAAsB,IAAlBo1B,EAAO11B,OAAgB,MAAO,GAGlC,IADA,IAAI21B,EAAS,CAAE,GACNxuB,EAAI,EAAGA,EAAIuuB,EAAO11B,SAAUmH,EAAG,CAEpC,IADA,IAAIyuB,EAAQF,EAAOvuB,GACVsX,EAAI,EAAGA,EAAIkX,EAAO31B,SAAUye,EACjCmX,GAASD,EAAOlX,IAAM,EACtBkX,EAAOlX,GAAKmX,EAAQ/0B,KAAKid,KACzB8X,EAASA,EAAQ/0B,KAAKid,KAAQ,EAGlC,KAAO8X,EAAQ,GACXD,EAAO70B,KAAK80B,EAAQ/0B,KAAKid,MACzB8X,EAASA,EAAQ/0B,KAAKid,KAAQ,C,CAOtC,IAHA,IAAItR,EAAS,GAGJqO,EAAI,EAAiB,IAAd6a,EAAO7a,IAAYA,EAAI6a,EAAO11B,OAAS,IAAK6a,EACxDrO,GAAU3L,KAAKg1B,QAInB,IAAK,IAAIlR,EAAIgR,EAAO31B,OAAS,EAAG2kB,GAAK,IAAKA,EACtCnY,GAAU3L,KAAK00B,SAASI,EAAOhR,IAGnC,OAAOnY,CACX,GAAC,CAAAnM,IAAA,SAAAC,MAED,SAAOA,GACH,GAAsB,kBAAXA,EACP,MAAM,IAAIw1B,UAAU,mBAGxB,IAAI1jB,EAAuB,GAC3B,GAAqB,IAAjB9R,EAAMN,OAAgB,OAAO,IAAI2S,WAAWP,GAEhDA,EAAMtR,KAAK,GACX,IAAK,IAAIqG,EAAI,EAAGA,EAAI7G,EAAMN,OAAQmH,IAAK,CACnC,IAAI4uB,EAAOl1B,KAAK40B,aAAan1B,EAAM6G,IAEnC,QAAalH,IAAT81B,EACA,MAAM,IAAI7zB,MAAM,WAAarB,KAAKid,KAAO,cAI7C,IADA,IAAI8X,EAAQG,EACHtX,EAAI,EAAGA,EAAIrM,EAAMpS,SAAUye,EAChCmX,GAASxjB,EAAMqM,GAAK5d,KAAKid,KACzB1L,EAAMqM,GAAa,IAARmX,EACXA,IAAU,EAGd,KAAOA,EAAQ,GACXxjB,EAAMtR,KAAa,IAAR80B,GACXA,IAAU,C,CAKlB,IAAK,IAAI/a,EAAI,EAAGva,EAAMua,KAAOha,KAAKg1B,SAAWhb,EAAIva,EAAMN,OAAS,IAAK6a,EACjEzI,EAAMtR,KAAK,GAGf,OAAOuG,EAAAA,EAAAA,IAAS,IAAIsL,WAAWP,EAAM4jB,WACzC,KAACV,CAAA,CA1Fa,GA8FZW,IADS,IAAIX,GAAM,oCACV,IAAIA,GAAM,+D,wBCxGzB,SAASY,GAAKC,EAAmBC,GAChB,MAATA,IAAiBA,EAAQ,GAC7B,IAAMv0B,EAAqB,GAErBC,EAAUD,EAAOC,QAavB,OAXiB,SAAXu0B,EAAqBlc,EAAiBic,GACxCt0B,EAAQ4B,KAAKyW,GAAK,SAAUhB,GACpBid,EAAQ,GAAK1pB,MAAMC,QAAQwM,GAC3Bkd,EAASld,EAAKid,EAAQ,GAEvBv0B,EAAOf,KAAKqY,EAEnB,GACJ,CAEAkd,CAASF,EAAOC,GACTv0B,CACX,CAmGM,SAAUy0B,GAAwBlkB,GACvC,OALK,SAAuBxG,GAC5B,IAAI2qB,EAAM,EACV,OAAO,kBAAM3qB,EAAE2qB,IAAM,CACtB,CAEQC,CAzFF,SAA4BpkB,GACjC,IAAImkB,EAAM,EACV,SAASE,IAAQ,OAAQrkB,EAAMmkB,MAAU,EAAKnkB,EAAMmkB,IAAQ,CAM5D,IAHA,IAAIG,EAAeD,IACfE,EAAQ,EACRtX,EAAM,CAAC,EAAG,GACLlY,EAAI,EAAGA,EAAIuvB,EAAcvvB,IACjCkY,EAAIve,KAAK61B,GAASF,KAInB,IAAIG,EAAOH,IACPI,EAAcN,EAClBA,GAAOK,EAEP,IAAIE,EAAa,EACbC,EAAc,EAClB,SAASC,IAOR,OANkB,GAAdF,IAGHC,EAAeA,GAAe,EAAK3kB,EAAMmkB,KACzCO,EAAa,GAENC,KAAiBD,EAAc,CACxC,CAUA,IARA,IACMG,EAAOhkB,KAAA6U,IAAA,EADH,IAEJoP,EAAOD,IAAS,EAChBE,EAAOD,GAAQ,EACfE,EAAOH,EAAO,EAGhBI,EAAW,EACNlwB,EAAI,EAAGA,EARN,GAQaA,IAAKkwB,EAAYA,GAAY,EAAKL,IAKzD,IAHA,IAAIM,EAAU,GACVC,EAAM,EACNC,EAAQP,IACC,CAIZ,IAHA,IAAI32B,EAAQ2S,KAAKC,QAASmkB,EAAWE,EAAM,GAAKZ,EAAS,GAAKa,GAC1DC,EAAQ,EACRC,EAAMhB,EACHgB,EAAMD,EAAQ,GAAG,CACvB,IAAIE,EAAOF,EAAQC,IAAS,EACxBp3B,EAAQ+e,EAAIsY,GACfD,EAAMC,EAENF,EAAQE,C,CAGV,GAAa,GAATF,EAAY,MAChBH,EAAQx2B,KAAK22B,GAGb,IAFA,IAAIrf,EAAImf,EAAMtkB,KAAKC,MAAMskB,EAAQnY,EAAIoY,GAAWd,GAC5Cte,EAAIkf,EAAMtkB,KAAKC,MAAMskB,EAAQnY,EAAIoY,EAAM,GAAKd,GAAS,EAC9B,KAAlBve,EAAIC,GAAK6e,IACjBG,EAAYA,GAAY,EAAKD,EAAOJ,IACpC5e,EAAKA,GAAK,EAAKgf,EACf/e,EAAKA,GAAK,EAAK+e,EAAO,EAEvB,KAAOhf,GAAKC,EAAI8e,GACfE,EAAYA,EAAWH,EAAUG,GAAY,EAAMD,IAAS,EAAMJ,IAClE5e,EAAKA,GAAK,EAAK8e,EACf7e,GAAMA,EAAI6e,IAAS,EAAKA,EAAO,EAEhCK,EAAMnf,EACNof,EAAQ,EAAInf,EAAID,C,CAEjB,IAAI7G,EAASmlB,EAAe,EAC5B,OAAOY,EAAQ71B,KAAI,SAAAsR,GAClB,OAAQA,EAAIxB,GACX,KAAK,EAAG,OAAOA,EAAS,OAAYa,EAAMykB,MAAkB,GAAOzkB,EAAMykB,MAAkB,EAAKzkB,EAAMykB,MACtG,KAAK,EAAG,OAAOtlB,EAAS,KAAUa,EAAMykB,MAAkB,EAAKzkB,EAAMykB,MACrE,KAAK,EAAG,OAAOtlB,EAASa,EAAMykB,KAC9B,QAAS,OAAO9jB,EAAI,EAEtB,GACD,CASqB6kB,CAAkBxlB,GACvC,CAGM,SAAU8C,GAAO/N,GACtB,OAAY,EAAJA,GAAWA,GAAK,EAAMA,GAAK,CACpC,CAQA,SAAS0wB,GAAehhB,EAAWtS,GAElC,IADA,IAAIqH,EAAIc,MAAMmK,GACL1P,EAAI,EAAG4L,GAAK,EAAG5L,EAAI0P,EAAG1P,IAAKyE,EAAEzE,GAAK4L,GAAK,EAAIxO,IACpD,OAAOqH,CACR,CAEA,SAASksB,GAAYjhB,EAAWtS,GAE/B,IADA,IAAIqH,EAAIc,MAAMmK,GACL1P,EAAI,EAAG4L,EAAI,EAAG5L,EAAI0P,EAAG1P,IAAKyE,EAAEzE,GAAK4L,GAAKmC,GAAO3Q,KACtD,OAAOqH,CACR,CAEM,SAAUmsB,GAAkBxzB,EAAgByzB,GAK9C,IAJA,IAAIpsB,EAAIisB,GAAetzB,IAAQA,GAC3BsS,EAAItS,IACJ0zB,EAAKJ,GAAehhB,EAAGtS,GACvB2zB,EAtBR,SAAqBrhB,EAAWtS,GAE/B,IADA,IAAIqH,EAAIc,MAAMmK,GACL1P,EAAI,EAAGA,EAAI0P,EAAG1P,IAAKyE,EAAEzE,GAAK,EAAI5C,IACvC,OAAOqH,CACR,CAkBausB,CAAYthB,EAAGtS,GACf4C,EAAI,EAAGA,EAAI0P,EAAG1P,IACnB,IAAK,IAAIsX,EAAI,EAAGA,EAAIyZ,EAAG/wB,GAAIsX,IACvB7S,EAAE9K,KAAKm3B,EAAG9wB,GAAKsX,GAGvB,OAAOuZ,EAASpsB,EAAEnK,KAAI,SAAAsR,GAAC,OAAIilB,EAAOjlB,EAAE,IAAInH,CAC5C,CA8BA,SAASwsB,GAAgBvhB,EAAW0D,EAAWhW,GAE3C,IADA,IAAIwkB,EAAIrc,MAAMmK,GAAG7C,UAAK/T,GAAWwB,KAAI,iBAAM,EAAE,IACpC0F,EAAI,EAAGA,EAAIoT,EAAGpT,IACnB2wB,GAAYjhB,EAAGtS,GAAMzC,SAAQ,SAACiR,EAAG0L,GAAC,OAAKsK,EAAEtK,GAAG3d,KAAKiS,EAAE,IAEvD,OAAOgW,CACX,CAGA,SAASsP,GAAkB9d,EAAWhW,GACrC,IAAI+zB,EAAK,EAAI/zB,IACTg0B,EAAKh0B,IACL2zB,EAtBC,SAAqC3zB,GAE1C,IADA,IAAIqH,EAAI,KACK,CACZ,IAAIzE,EAAI5C,IACR,GAAS,GAAL4C,EAAQ,MACZyE,EAAE9K,KAAKqG,E,CAER,OAAOyE,CACR,CAcU4sB,CAA2Bj0B,GAEpC,OAAO2xB,GADCkC,GAAgBF,EAAGl4B,OAAQ,EAAEua,EAAGhW,GAC1B9C,KAAI,SAACmK,EAAGzE,GACpB,IAAM4L,EAAInH,EAAE,GAAI6sB,EAAK7sB,EAAE+F,MAAM,GAG9B,OAAOjF,MAAMwrB,EAAG/wB,IAAI6M,UAAK/T,GAAWwB,KAAI,SAACi3B,EAAGja,GAC3C,IAAIka,EAAOla,EAAI8Z,EACf,MAAO,CAACxlB,EAAI0L,EAAI6Z,EAAIG,EAAGh3B,KAAI,SAAAqe,GAAC,OAAIA,EAAI6Y,CAAI,IACzC,GACD,IACD,CAEA,SAASC,GAAuBre,EAAWhW,GAG1C,OADQ6zB,GADA,EAAI7zB,IACe,EAAEgW,EAAGhW,GACvB9C,KAAI,SAAAmK,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE+F,MAAM,GAAG,GACrC,CCvNA,IAAM4H,GCEK+c,IAAwBtvB,EAAAA,GAAAA,GAAO,q6cDIpC6xB,GAAQ,IAAIC,IAAIf,GAAkBxe,KAClCwf,GAAU,IAAID,IAAIf,GAAkBxe,KACpCyf,GDyJA,SAA0Bz0B,GAE/B,IADA,IAAI00B,EAAM,KACG,CACZ,IAAI1e,EAAIhW,IACR,GAAS,GAALgW,EAAQ,MACZ0e,EAAIn4B,KAAKu3B,GAAkB9d,EAAGhW,G,CAE/B,OAAa,CACZ,IAAIgW,EAAIhW,IAAS,EACjB,GAAIgW,EAAI,EAAG,MACX0e,EAAIn4B,KAAK83B,GAAuBre,EAAGhW,G,CAEpC,OAxJD,SAA6F4xB,GAEzF,IADA,IAAMt0B,EAAqC,CAAC,EACnCsF,EAAI,EAAGA,EAAIgvB,EAAMn2B,OAAQmH,IAAK,CACnC,IAAM7G,EAAQ61B,EAAMhvB,GACpBtF,EAAOvB,EAAM,IAAMA,EAAM,E,CAE7B,OAAOuB,CACX,CAiJQq3B,CAAmChD,GAAK+C,GAChD,CCtKeE,CAAgB5f,IACzB6f,GD6NA,SAA0B70B,GAC/B,IAAI80B,EAAStB,GAAkBxzB,GAAM6S,MAAK,SAACgB,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IACzD,OACA,SAASihB,IACR,IAAIC,EAAW,GACf,OAAa,CACZ,IAAI5tB,EAAOosB,GAAkBxzB,EAAM80B,GACnC,GAAmB,GAAf1tB,EAAK3L,OAAa,MACtBu5B,EAASz4B,KAAK,CAACyyB,IAAK,IAAIuF,IAAIntB,GAAO6tB,KAAMF,K,CAExCC,EAASniB,MAAK,SAACgB,EAAGC,GAAC,OAAKA,EAAEkb,IAAIkG,KAAOrhB,EAAEmb,IAAIkG,IAAI,IAChD,IAAI3M,EAAOvoB,IAOX,MAAO,CAACg1B,SAAAA,EAAUG,MANN5M,EAAO,EAMM6M,QAJJ,GADrB7M,EAAQA,EAAO,EAAG,IAKa8M,KAFZ,IADnB9M,IAAS,GAG4B+M,MADjB,GAAR/M,EAEd,CAjBOwM,EAkBR,CCjPmBQ,CAAgBvgB,IAI7BwgB,GAAS,GACTC,GAAa,GAEnB,SAASC,GAAWzxB,GAChB,OAAO0xB,EAAAA,EAAAA,IAAiB1xB,EAC5B,CAEA,SAAS2xB,GAAYC,GACjB,OAAOA,EAAIxjB,QAAO,SAAAyjB,GAAE,OAAU,OAANA,CAAY,GACxC,CAEM,SAAUC,GAAyB9xB,GAAY,IACnB+xB,EADmBC,GAAAC,EAAAA,GAAAA,GAClCjyB,EAAKiK,MAAM,MAAI,IAAjC,IAAA+nB,EAAA/W,MAAA8W,EAAAC,EAAA3jB,KAAAgC,MAAmC,KAA1B6hB,EAAKH,EAAAj6B,MACT85B,EAAMH,GAAWS,GACrB,IACC,IAAK,IAAIvzB,EAAIizB,EAAIO,YAAYX,IAAc,EAAG7yB,GAAK,EAAGA,IACrD,GAAIizB,EAAIjzB,KAAO6yB,GACd,MAAM,IAAI93B,MAAM,oCAGlB,GAAIk4B,EAAIp6B,QAAU,GAAKo6B,EAAIQ,OAAM,SAAAP,GAAE,OAAIA,EAAK,GAAI,KAAKD,EAAI,KAAOL,IAAUK,EAAI,KAAOL,GACpF,MAAM,IAAI73B,MAAM,0B,CAEhB,MAAO24B,GACR,MAAM,IAAI34B,MAAM,kBAAD+D,OAAmBy0B,EAAK,OAAAz0B,OAAM40B,EAAI14B,S,EAElD,OAAA04B,GAAAL,EAAAtR,EAAA2R,EAAA,SAAAL,EAAArR,GAAA,CACD,OAAO3gB,CACR,CAEM,SAAUsyB,GAActyB,GAC7B,OAAO8xB,GAGR,SAAmB9xB,EAAcuyB,GAChC,IAAIC,EAAQf,GAAWzxB,GAAMwtB,UACzBiF,EAAS,GACb,KAAOD,EAAMh7B,QAAQ,CACpB,IAAIk7B,EAAQC,GAAuBH,GACnC,GAAIE,EACHD,EAAOn6B,KAAI6zB,MAAXsG,GAAMG,EAAAA,GAAAA,GAASL,EAAaG,SAD7B,CAIA,IAAIb,EAAKW,EAAMK,MACf,GAAIxC,GAAMyC,IAAIjB,GACbY,EAAOn6B,KAAKu5B,QAGb,IAAItB,GAAQuC,IAAIjB,GAAhB,CAGA,IAAID,EAAMpB,GAAOqB,GACjB,IAAID,EAIJ,MAAM,IAAIl4B,MAAM,2BAAD+D,OAA4Bo0B,EAAGrlB,SAAS,IAAInC,gBAH1DooB,EAAOn6B,KAAI6zB,MAAXsG,GAAMG,EAAAA,GAAAA,GAAShB,G,GAKjB,OAAOE,IAGK7W,EAHwBlc,OAAOg0B,cAAa5G,MAApBptB,OAAwB0zB,GAIlDxX,EAAE+X,UAAU,SADvB,IAAa/X,CAFb,CA5BiC+X,CAAUhzB,EAAM2xB,IACjD,CAiCA,SAASgB,GAAuBf,EAAoBqB,G,MAE/CP,EACAQ,EAFAlC,EAAOJ,GAGPuC,EAAQ,GACRpF,EAAM6D,EAAIp6B,OACVy7B,IAAOA,EAAMz7B,OAAS,GAC1B,IAD6B,IAAAuW,EAAA,WAE5B,IAAI8jB,EAAKD,IAAM7D,GAEf,GADAiD,EAA6C,QAAtCoC,EAAApC,EAAKD,SAASsC,MAAK,SAAA9oB,GAAC,OAAIA,EAAEwgB,IAAI+H,IAAIjB,EAAG,WAAC,IAAAuB,OAAA,EAAAA,EAAEpC,MAC1CA,EAAM,OAAF,EACT,GAAIA,EAAKI,KACR8B,EAAQrB,OACF,GAAIb,EAAKK,OACXQ,IAAOqB,EAAO,OAAF,EAEjBC,EAAM76B,KAAKu5B,GACPb,EAAKG,OACRgC,EAAM76B,KAAK,OACPy1B,EAAM,GAAqB,OAAhB6D,EAAI7D,EAAM,IAAcA,KAEpCiD,EAAKE,QACRwB,EAAQS,EAAMhqB,QACI,GAAd6nB,EAAKE,OAAYwB,EAAMY,OAAO,EAAG,GACjCL,GAAOA,EAAM36B,KAAI6zB,MAAV8G,GAAKL,EAAAA,GAAAA,GAAShB,EAAIzoB,MAAM4kB,GAAKP,YACxCoE,EAAIp6B,OAASu2B,E,EAlBRA,GAAG,IAAAhgB,MAqBV,OAAO2kB,CACR,CErIA,IAAMxzB,GAAS,IAAIC,EAAAA,GAAOuF,GAIpB6uB,GAAQ,IAAIppB,WAAW,IAG7B,SAASqpB,GAAeC,GACpB,GAAoB,IAAhBA,EAAKj8B,OAAgB,MAAM,IAAIkC,MAAM,qCACzC,OAAO+5B,CACX,CAEA,SAASC,GAAa1zB,GAClB,IAAM4J,GAAQ0B,EAAAA,EAAAA,IAAYgnB,GAActyB,IAClC2zB,EAA2B,GAEjC,GAAoB,IAAhB3zB,EAAKxI,OAAgB,OAAOm8B,EAGhC,IADA,IAAIC,EAAO,EACFj1B,EAAI,EAAGA,EAAIiL,EAAMpS,OAAQmH,IAAK,CAIzB,KAHAiL,EAAMjL,KAIZg1B,EAAMr7B,KAAKk7B,GAAe5pB,EAAMT,MAAMyqB,EAAMj1B,KAC5Ci1B,EAAOj1B,EAAI,E,CAKnB,GAAIi1B,GAAQhqB,EAAMpS,OAAU,MAAM,IAAIkC,MAAM,qCAG5C,OADAi6B,EAAMr7B,KAAKk7B,GAAe5pB,EAAMT,MAAMyqB,KAC/BD,CACX,CAaM,SAAUE,GAAS7zB,GAEA,kBAAVA,GACPd,GAAOmD,mBAAmB,iCAAkC,OAAQrC,GAMxE,IAHA,IAAI3G,EAA8Bk6B,GAE5BI,EAAQD,GAAa1zB,GACpB2zB,EAAMn8B,QACT6B,EAASqP,GAAUjL,EAAAA,EAAAA,IAAO,CAACpE,EAAQqP,EAAUirB,EAAMd,UAGvD,OAAOzpB,EAAAA,EAAAA,IAAQ/P,EACnB,CAxDAk6B,GAAM/nB,KAAK,G,gBCAI,IAAIrM,EAAAA,GCXI,cDiBjB,SAAU20B,GAAOj6B,GACnB,MAAO,KAAQmW,KAAAA,SAAciU,QAAOplB,EAAAA,EAAAA,IAAShF,IAAOqqB,OAAO,MAC/D,C,2BEPMhlB,GAAS,IAAIC,EAAAA,GAAOuF,GAAAA,GAiBbqvB,GAAS,WAGlB,SAAAA,KAAAr8B,EAAAA,EAAAA,GAAA,KAAAq8B,GACI17B,KAAK27B,QAAU37B,KAAK47B,mBACxB,CAucC,OAvcAr8B,EAAAA,EAAAA,GAAAm8B,EAAA,EAAAl8B,IAAA,oBAAAC,MAED,WAAiB,IAAAY,EAAA,KACPs7B,EAA6B,CAAC,EAE9BzsB,EAAUlP,KAAKkP,QAAQ2sB,KAAK77B,MAC5B87B,EAAY97B,KAAK87B,UAAUD,KAAK77B,MAChC8M,EAAW9M,KAAK8M,SAAS+uB,KAAK77B,MAC9BwB,EAAOxB,KAAKwB,KAAKq6B,KAAK77B,MACtB2X,EAAO3X,KAAK2X,KAAKkkB,KAAK77B,MACtB+7B,EAAM/7B,KAAK+7B,IAAIF,KAAK77B,MACpB0L,EAAS1L,KAAK0L,OAAOmwB,KAAK77B,MAC1B4F,EAAO5F,KAAK4F,KAAKi2B,KAAK77B,MAmI5B,OA/HA27B,EAAQxuB,YAAc,CAClBwK,KAAMA,EAEN/R,KAAMA,EACNktB,WAAY4I,EAAUM,UAAUh8B,KAAK8yB,WAAW+I,KAAK77B,MAAO,MAE5Di8B,UAAWP,EAAUM,UAAUrkB,EAAM,MACrCukB,YAAaR,EAAUM,UAAUtwB,EAAQ,MACzCywB,iBAAkBT,EAAUM,UAAUtwB,EAAQ,MAE9C0wB,cAAeV,EAAUM,UAAUtwB,EAAQ,MAE3CgD,KAAMQ,EAINQ,SAAUgsB,EAAUM,UAAUF,GAC9BrsB,qBAAsBisB,EAAUM,UAAUF,GAC1CtsB,aAAcksB,EAAUM,UAAUF,GAElC9rB,SAAU8rB,EACVjtB,GAAI6sB,EAAUM,UAAU9sB,EAAS,MACjCzP,MAAOq8B,EACP/rB,MAAOrE,EACPlK,KAAMA,EAENkX,EAAGgjB,EAAUM,UAAUh8B,KAAKq8B,SAC5BzZ,EAAG8Y,EAAUM,UAAUh8B,KAAKq8B,SAC5BtxB,EAAG2wB,EAAUM,UAAUtwB,GAEvB4wB,QAASZ,EAAUM,UAAU9sB,EAAS,MAEtCqkB,IAAKmI,EAAUM,UAAUx6B,IAG7Bm6B,EAAQY,mBAAqB,CACzB7tB,KAAMgtB,EAAUM,UAAU9sB,GAC1Ba,MAAO2rB,EAAUM,UAAUtwB,GAC3BsE,SAAU0rB,EAAUM,UAAUF,GAC9BpsB,SAAUgsB,EAAUM,UAAUF,GAC9BrsB,qBAAsBisB,EAAUM,UAAUF,GAC1CtsB,aAAcksB,EAAUM,UAAUF,GAClCjtB,GAAI6sB,EAAUM,UAAU9sB,GACxBzP,MAAOi8B,EAAUM,UAAUF,GAC3Bt6B,KAAMk6B,EAAUM,WA9CD,SAACjxB,GAAa,OAAO1K,EAAKmB,KAAKuJ,GAAG,EAAO,IA+CxDnF,KAAM81B,EAAUM,UAAUtwB,GAC1BonB,WAAY4I,EAAUM,UAAUh8B,KAAK8yB,WAAW+I,KAAK77B,MAAO,OAGhE27B,EAAQa,WAAa,CACjBL,iBAAkBzwB,EAClBwwB,YAAaxwB,EACb+wB,gBAAiB9kB,EACjBzI,QAASA,EACTwtB,OAAQhB,EAAUiB,QAAQhlB,GAC1BnW,KAAMA,EACNo7B,SAAUlxB,EACVuwB,UAAWtkB,GAGfgkB,EAAQkB,QAAU,CACdhuB,GAAI6sB,EAAUM,UAAUh8B,KAAKkP,QAAS,MACtCR,KAAMgtB,EAAUM,UAAUh8B,KAAKkP,QAAS,MACxC4tB,gBAAiBpB,EAAUM,UAAU9sB,EAAS,MAC9CitB,iBAAkBzwB,EAElBqxB,KAAMrB,EAAUM,UAAUD,GAC1BiB,QAASlB,EACTmB,UAAWvB,EAAUM,UAAUx6B,GAC/By6B,UAAWtkB,EACX8kB,gBAAiB9kB,EACjBulB,KAAMxB,EAAUiB,QAAQ38B,KAAKw8B,WAAWX,KAAK77B,OAC7Ck8B,YAAaxwB,EACb0wB,cAAeV,EAAUM,UAAUtwB,EAAQ,MAC3CyxB,kBAAmBrB,EACnBsB,kBAAmB1B,EAAUM,UAAUF,GACvCuB,OAAQ3B,EAAUM,UAAUtwB,GAC5B9F,KAAMA,GAGV+1B,EAAQhpB,MAAQ,CACZgF,KAAM+jB,EAAUM,UAAUrkB,GAC1B2lB,WAAY3lB,EACZjM,OAAQA,EAER6xB,UAAW7xB,EACXqE,MAAO2rB,EAAUM,UAAUD,GAC3ByB,WAAYx9B,KAAKw9B,WAAW3B,KAAK77B,MAEjCgQ,SAAU8rB,EACVkB,QAASlB,EAET2B,MAAO/B,EAAUM,UAAU9sB,GAC3BwuB,UAAWl8B,EAEXm8B,aAAcjC,EAAUM,UAAUN,EAAUiB,QAAQhlB,IAEpDyc,cAAesH,EAAUM,UAAUF,IAGvCH,EAAQiC,uBAAwBtyB,EAAAA,EAAAA,IAAYqwB,EAAQhpB,OACpDgpB,EAAQiC,sBAAsBD,aAAejC,EAAUM,UAAUN,EAAUiB,QAAQ38B,KAAK69B,oBAAoBhC,KAAK77B,QAEjH27B,EAAQ5lB,OAAS,CACb+nB,UAAWpC,EAAUM,UAAUlvB,OAAU1N,GACzC2+B,QAASrC,EAAUM,UAAUlvB,OAAU1N,GACvC68B,UAAWP,EAAUM,UAAUrkB,OAAMvY,GACrC8P,QAASwsB,EAAUM,UAAU9sB,OAAS9P,GACtCs9B,OAAQhB,EAAUM,UAAUh8B,KAAK08B,OAAOb,KAAK77B,WAAOZ,IAGxDu8B,EAAQqC,UAAY,CAChB9B,YAAaR,EAAUM,UAAUtwB,GACjCuwB,UAAWP,EAAUM,UAAUrkB,GAC/BwkB,iBAAkBzwB,EAElBuyB,QAASvC,EAAUM,UAAUh8B,KAAKyL,QAAQowB,KAAK77B,OAE/CkP,QAASA,EACT1N,KAAMk6B,EAAUwC,aAAa18B,EAAM,MAEnCk7B,OAAQhB,EAAUiB,QAAQhlB,GAE1B8kB,gBAAiB9kB,EACjBilB,SAAUlxB,GAGPiwB,CACX,GAAC,CAAAn8B,IAAA,aAAAC,MAED,SAAWqzB,GACP,OAAOL,GAAcK,GAAc,GACvC,GAGA,CAAAtzB,IAAA,SAAAC,MACA,SAAOiM,GACH,MAAe,OAAXA,EAA0B,EACvB2H,EAAAA,GAAU3E,KAAKhD,GAAQ0nB,UAClC,GAAC,CAAA5zB,IAAA,OAAAC,MAED,SAAKiM,GACD,MAAe,OAAXA,GAA6B,MAAVA,EAAyB,EACzC2H,EAAAA,GAAU3E,KAAKhD,GAAQ0nB,UAClC,GAEA,CAAA5zB,IAAA,YAAAC,MACA,SAAUA,GACN,OAAO4T,EAAAA,GAAU3E,KAAKjP,EAC1B,GAEA,CAAAD,IAAA,UAAAC,MACA,SAAQA,GACJ,GAAsB,mBAAXA,EAAwB,OAAOA,EAC1C,GAAsB,kBAAXA,EAAqB,CAE5B,GAAc,UADdA,EAAQA,EAAMkP,eACU,OAAO,EAC/B,GAAc,UAAVlP,EAAqB,OAAO,C,CAEpC,MAAM,IAAI4B,MAAM,qBAAuB5B,EAC3C,GAAC,CAAAD,IAAA,MAAAC,MAED,SAAIA,EAAY0+B,GACZ,MAAsB,kBAAX1+B,IACF0+B,GAAoC,OAA1B1+B,EAAMkS,UAAU,EAAG,KAAelS,EAAQ,KAAOA,IAC5DgS,EAAAA,EAAAA,IAAYhS,IACNA,EAAMkP,cAGb9H,GAAOmD,mBAAmB,eAAgB,QAASvK,EAC9D,GAAC,CAAAD,IAAA,OAAAC,MAED,SAAKA,EAAY0+B,GACb,IAAMn9B,EAAShB,KAAK+7B,IAAIt8B,EAAO0+B,GAC/B,GAAKn9B,EAAO7B,OAAS,IAAO,EACxB,MAAM,IAAIkC,MAAM,8BAAgC5B,GAEpD,OAAOuB,CACX,GAGA,CAAAxB,IAAA,UAAAC,MACA,SAAQA,GACJ,OAAOwN,EAAWxN,EACtB,GAAC,CAAAD,IAAA,cAAAC,MAED,SAAYA,GACR,KAAKgS,EAAAA,EAAAA,IAAYhS,EAAO,IAAO,OAAO,KACtC,IAAMyP,EAAUjC,GAAW6kB,EAAAA,EAAAA,IAAaryB,EAAO,KAC/C,MC/OmB,+CD+OXyP,EAA2B,KAAMA,CAC7C,GAAC,CAAA1P,IAAA,kBAAAC,MAED,SAAgBA,GACZ,OhClHF,SAA6B0N,GAC/B,IAAIuB,EAAe,KACnB,IACIA,EAAOzB,EAAWE,EAAYuB,K,CAChC,MAAOtN,GACLyF,EAAOmD,mBAAmB,uBAAwB,cAAemD,E,CAGrE,IAAM4C,GAAQqiB,EAAAA,EAAAA,KAAW5rB,EAAAA,EAAAA,IAAS6M,EAAAA,GAAU3E,KAAKvB,EAAY4C,OAAO4D,gBAEpE,OAAO1G,GAAW6kB,EAAAA,EAAAA,IAAazhB,EAAU5J,EAAO,CAAEiI,EAAMqB,KAAW,IACvE,CgCuGequB,CAAmB3+B,EAC9B,GAEA,CAAAD,IAAA,WAAAC,MACA,SAASqN,GACL,GAAgB,MAAZA,EAAoB,MAAO,SAE/B,GAAiB,aAAbA,EAA2B,MAAO,MAEtC,OAAQA,GACJ,IAAK,WAAY,MAAO,MACxB,IAAK,SAAU,IAAK,UAAW,IAAK,OAAQ,IAAK,YAC7C,OAAOA,EAGf,GAAyB,kBAAdA,IAA0B2E,EAAAA,EAAAA,IAAY3E,GAC7C,OAAOuxB,EAAAA,EAAAA,IAA0BvxB,GAGrC,MAAM,IAAIzL,MAAM,mBACpB,GAEA,CAAA7B,IAAA,OAAAC,MACA,SAAKA,EAAY0+B,GACb,IAAMn9B,EAAShB,KAAK+7B,IAAIt8B,EAAO0+B,GAC/B,OAA8B,MAA1BrN,EAAAA,EAAAA,IAAc9vB,GACP6F,GAAOmD,mBAAmB,eAAgB,QAASvK,GAEvDuB,CACX,GAEA,CAAAxB,IAAA,aAAAC,MACA,SAAWA,GACP,GAAa,MAATA,EAAiB,OAAO,KAE5B,IAAMsL,EAAIsI,EAAAA,GAAU3E,KAAKjP,GAEzB,IACI,OAAOsL,EAAEqoB,U,CACX,MAAOhyB,GAAQ,CAElB,OAAO,IACV,GAAC,CAAA5B,IAAA,UAAAC,MAED,SAAQA,GACJ,KAAKgS,EAAAA,EAAAA,IAAYhS,GACb,MAAM,IAAI4B,MAAM,mBAEpB,OAAOqS,EAAAA,EAAAA,IAAWjU,EAAO,GAC7B,GAAC,CAAAD,IAAA,SAAAC,MAED,SAAOA,EAAY6+B,GACK,MAAhB7+B,EAAM8+B,QAAiC,MAAf9+B,EAAMg+B,QAC9Bh+B,EAAMg+B,MAAQh+B,EAAM8+B,QAGxB,IAAMf,EAAmC,MAArB/9B,EAAM++B,YAAuB/+B,EAAM++B,YAAa/+B,EAAM+9B,WACpEx8B,EAAS06B,EAAU1C,MAAMsF,EAAQ7+B,GAEvC,OADAuB,EAAOw9B,YAA8B,MAAdhB,EAAsB,KAAMnqB,EAAAA,GAAU3E,KAAK8uB,GAC3Dx8B,CACX,GAAC,CAAAxB,IAAA,QAAAC,MAED,SAAMA,GACF,OAAOO,KAAKy+B,OAAOh/B,EAAOO,KAAK27B,QAAQhpB,MAC3C,GAAC,CAAAnT,IAAA,wBAAAC,MAED,SAAsBA,GAClB,OAAOO,KAAKy+B,OAAOh/B,EAAOO,KAAK27B,QAAQiC,sBAC3C,GAEA,CAAAp+B,IAAA,qBAAAC,MACA,SAAmBA,GACf,OAAOi8B,EAAU1C,MAAMh5B,KAAK27B,QAAQY,mBAAoB98B,EAC5D,GAAC,CAAAD,IAAA,sBAAAC,MAED,SAAoB0N,GAGO,MAAnBA,EAAYuxB,KAAuC,MAAxBvxB,EAAY6C,WACvC7C,EAAY6C,SAAW7C,EAAYuxB,KAKnCvxB,EAAY0B,IAAMwE,EAAAA,GAAU3E,KAAKvB,EAAY0B,IAAIykB,WACjDnmB,EAAY0B,GAAK,8CAII,MAArB1B,EAAYgtB,OAAqC,MAApBhtB,EAAY3L,OACzC2L,EAAY3L,KAAO2L,EAAYgtB,OAIb,MAAlBhtB,EAAY0B,IAAqC,MAAvB1B,EAAYmvB,UACtCnvB,EAAYmvB,QAAUt8B,KAAK88B,gBAAgB3vB,IAGrB,IAArBA,EAAYvH,MAAmC,IAArBuH,EAAYvH,MAAwC,MAA1BuH,EAAY2lB,aACjE3lB,EAAY2lB,WAAa,IAG7B,IAAM9xB,EAA8B06B,EAAU1C,MAAMh5B,KAAK27B,QAAQxuB,YAAaA,GAE9E,GAA2B,MAAvBA,EAAY9E,QAAiB,CAC7B,IAAIA,EAAU8E,EAAY9E,SAEtBoJ,EAAAA,EAAAA,IAAYpJ,KACZA,EAAUgL,EAAAA,GAAU3E,KAAKrG,GAAS+qB,YAGtCpyB,EAAOqH,QAAUA,C,KAEd,CACH,IAAIA,EAAU8E,EAAYwxB,UAGX,MAAXt2B,GAA+B,MAAZrH,EAAO+J,IAC1B1C,EAAU8E,EAAY9E,UAGtBoJ,EAAAA,EAAAA,IAAYpJ,KACZA,EAAUgL,EAAAA,GAAU3E,KAAKrG,GAAS+qB,YAGd,kBAAb/qB,GAAqC,MAAZrH,EAAO+J,KACvC1C,GAAWrH,EAAO+J,EAAI,IAAM,GACd,IAAK1C,EAAU,GAC7BA,EAAUuK,SAASvK,IAGC,kBAAbA,IAAyBA,EAAU,GAE9CrH,EAAOqH,QAAUA,C,CAQrB,OAJIrH,EAAOi7B,WAAoD,MAAvCj7B,EAAOi7B,UAAU9iB,QAAQ,KAAM,MACnDnY,EAAOi7B,UAAY,MAGhBj7B,CACX,GAAC,CAAAxB,IAAA,cAAAC,MAED,SAAYA,GACR,OAAOm/B,GAAiBn/B,EAC5B,GAAC,CAAAD,IAAA,aAAAC,MAED,SAAWA,GACP,OAAOi8B,EAAU1C,MAAMh5B,KAAK27B,QAAQa,WAAY/8B,EACpD,GAAC,CAAAD,IAAA,UAAAC,MAED,SAAQA,GACJ,IAAMuB,EAA6B06B,EAAU1C,MAAMh5B,KAAK27B,QAAQkB,QAASp9B,GAGzE,GAAmB,MAAfuB,EAAO+7B,KACP,GAAI/7B,EAAO+7B,KAAK59B,QAAU,EAAG,CAEzB,IAAMM,EAAQ4T,EAAAA,GAAU3E,KAAK1N,EAAO+7B,MAAM3J,WAC5B,IAAV3zB,GAAyB,IAAVA,GAEM,MAAjBuB,EAAOq8B,QAAmBr8B,EAAOq8B,SAAW59B,GAC5CoH,GAAOmD,mBAAmB,kCAAmC,QAAS,CAAE+yB,KAAM/7B,EAAO+7B,KAAMM,OAAQr8B,EAAOq8B,SAE9Gr8B,EAAOq8B,OAAS59B,SACTuB,EAAO+7B,MAEdl2B,GAAOmD,mBAAmB,0BAA2B,aAAchJ,EAAO+7B,K,MAEhD,KAAvB/7B,EAAO+7B,KAAK59B,QAEnB0H,GAAOmD,mBAAmB,oBAAqB,aAAchJ,EAAO+7B,MAQ5E,OAJqB,MAAjB/7B,EAAOq8B,SACPr8B,EAAO69B,WAAY,GAGhB79B,CACX,GAAC,CAAAxB,IAAA,SAAAC,MAED,SAAOA,GAAU,IAAAuC,EAAA,KACb,OAAI6J,MAAMC,QAAQrM,GACPA,EAAMmB,KAAI,SAACmK,GAAC,OAAK/I,EAAK06B,OAAO3xB,EAAE,IAEtB,MAATtL,EACAO,KAAK2X,KAAKlY,GAAO,GAGrB,IACX,GAAC,CAAAD,IAAA,SAAAC,MAED,SAAOA,GACH,OAAOi8B,EAAU1C,MAAMh5B,KAAK27B,QAAQ5lB,OAAQtW,EAChD,GAAC,CAAAD,IAAA,YAAAC,MAED,SAAUA,GACN,OAAOi8B,EAAU1C,MAAMh5B,KAAK27B,QAAQqC,UAAWv+B,EACnD,IAAC,EAAAD,IAAA,QAAAC,MAED,SAAa6+B,EAA0Cn0B,GACnD,IAAMnJ,EAAc,CAAC,EACrB,IAAK,IAAMxB,KAAO8+B,EACd,IACI,IAAM7+B,EAAQ6+B,EAAO9+B,GAAK2K,EAAO3K,SACnBJ,IAAVK,IAAuBuB,EAAOxB,GAAOC,E,CAC3C,MAAO2B,GAGL,MAFAA,EAAM09B,SAAWt/B,EACjB4B,EAAM29B,WAAa50B,EAAO3K,GACpB4B,C,CAGd,OAAOJ,CACX,GAEA,CAAAxB,IAAA,YAAAC,MACA,SAAiB6+B,EAAoBU,GACjC,OAAQ,SAASv/B,GACb,OAAa,MAATA,EAAwBu/B,EACrBV,EAAO7+B,EAClB,CACJ,GAEA,CAAAD,IAAA,eAAAC,MACA,SAAoB6+B,EAAoBW,GACpC,OAAQ,SAASx/B,GACb,OAAKA,EACE6+B,EAAO7+B,GADOw/B,CAEzB,CACJ,GAEA,CAAAz/B,IAAA,UAAAC,MACA,SAAe6+B,GACX,OAAQ,SAAShJ,GACb,IAAKzpB,MAAMC,QAAQwpB,GAAU,MAAM,IAAIj0B,MAAM,gBAE7C,IAAML,EAAc,GAMpB,OAJAs0B,EAAMr0B,SAAQ,SAASxB,GACnBuB,EAAOf,KAAKq+B,EAAO7+B,GACvB,IAEOuB,CACX,CACJ,KAAC06B,CAAA,CA5ciB,G,2SENhB70B,GAAS,IAAIC,EAAAA,GAAOuF,GAAAA,GAS1B,SAAS6yB,GAAWC,GACf,OAAa,MAATA,EAAwB,QACC,MAAzBrO,EAAAA,EAAAA,IAAcqO,IACdt4B,GAAOmD,mBAAmB,gBAAiB,QAASm1B,GAEjDA,EAAMxwB,cAClB,CAEA,SAASywB,GAAgB1C,GAGrB,IADAA,EAASA,EAAO5rB,QACT4rB,EAAOv9B,OAAS,GAAkC,MAA7Bu9B,EAAOA,EAAOv9B,OAAS,IAAcu9B,EAAOlC,MAExE,OAAOkC,EAAO97B,KAAI,SAACu+B,GACf,GAAItzB,MAAMC,QAAQqzB,GAAQ,CAGtB,IAAME,EAAyC,CAAC,EAChDF,EAAMl+B,SAAQ,SAACk+B,GACXE,EAAOH,GAAWC,KAAU,CAChC,IAGA,IAAM3G,EAASx1B,OAAO8H,KAAKu0B,GAG3B,OAFA7G,EAAOjiB,OAEAiiB,EAAO7yB,KAAK,I,CAGnB,OAAOu5B,GAAWC,EAE1B,IAAGx5B,KAAK,IACZ,CAgBA,SAAS25B,GAAYjL,GACjB,GAA0B,kBAAfA,EAAyB,CAGhC,GAFAA,EAAYA,EAAU1lB,cAEW,MAA7BmiB,EAAAA,EAAAA,IAAcuD,GACd,MAAO,MAAQA,EAGnB,IAAgC,IAA5BA,EAAUrvB,QAAQ,KAClB,OAAOqvB,C,KAGR,IAAIxoB,MAAMC,QAAQuoB,GACrB,MAAO,YAAc+K,GAAgB/K,GAElC,GAAIT,GAAU2L,YAAYlL,GAE7B,MADAxtB,GAAO24B,KAAK,mBACN,IAAIn+B,MAAM,mBAEb,GAAIgzB,GAAmC,kBAAfA,EAC3B,MAAO,WAAaA,EAAUnlB,SAAW,KAAO,IAAMkwB,GAAgB/K,EAAUqI,QAAU,G,CAG9F,MAAM,IAAIr7B,MAAM,mBAAqBgzB,EACzC,CAKA,SAASoL,KACL,OAAQ,IAAIC,MAAQD,SACxB,CAEA,SAASE,GAAMC,GACX,OAAO,IAAI7/B,SAAQ,SAACH,GAChBQ,WAAWR,EAASggC,EACxB,GACJ,CAmBA,IAAMC,GAAiB,CAAE,QAAS,UAAW,UAAW,QAE3CC,GAAK,WAQd,SAAAA,EAAYC,EAAazL,EAAoB0L,IAAa3gC,EAAAA,EAAAA,GAAA,KAAAygC,IACtD51B,EAAAA,EAAAA,IAAelK,KAAM,MAAO+/B,IAC5B71B,EAAAA,EAAAA,IAAelK,KAAM,WAAYs0B,IACjCpqB,EAAAA,EAAAA,IAAelK,KAAM,OAAQggC,GAE7BhgC,KAAKigC,kBAAoB,EACzBjgC,KAAKkgC,WAAY,CACrB,CAsCC,OAtCA3gC,EAAAA,EAAAA,GAAAugC,EAAA,EAAAtgC,IAAA,QAAA6qB,IAED,WACI,OAAQrqB,KAAK4F,MACT,IAAK,KACF,OAAO5F,KAAK2X,KACf,IAAK,SACF,OAAO3X,KAAK+V,OAEnB,OAAO/V,KAAK+/B,GAChB,GAAC,CAAAvgC,IAAA,OAAA6qB,IAED,WACI,OAAOrqB,KAAK+/B,IAAInuB,MAAM,KAAK,EAC/B,GAAC,CAAApS,IAAA,OAAA6qB,IAED,WACI,IAAMiR,EAAQt7B,KAAK+/B,IAAInuB,MAAM,KAC7B,MAAiB,OAAb0pB,EAAM,GAAsB,KACzBA,EAAM,EACjB,GAAC,CAAA97B,IAAA,SAAA6qB,IAED,WACI,IAAMiR,EAAQt7B,KAAK+/B,IAAInuB,MAAM,KAC7B,GAAiB,WAAb0pB,EAAM,GAAmB,OAAO,KACpC,IAhHmB95B,EAgHb0N,EAAUosB,EAAM,GAEhBoB,EAjHG,MADUl7B,EAkHc85B,EAAM,IAjHjB,GAEnB95B,EAAKoQ,MAAM,MAAMhR,KAAI,SAACu+B,GACzB,GAAc,KAAVA,EAAgB,MAAO,GAE3B,IAAM7D,EAAQ6D,EAAMvtB,MAAM,KAAKhR,KAAI,SAACu+B,GAChC,MAAmB,SAAVA,EAAoB,KAAMA,CACvC,IAEA,OAA0B,IAAjB7D,EAAMn8B,OAAgBm8B,EAAM,GAAIA,CAC7C,IAwGUvlB,EAAiB,CAAC,EAKxB,OAHI2mB,EAAOv9B,OAAS,IAAK4W,EAAO2mB,OAASA,GACrCxtB,GAAuB,MAAZA,IAAmB6G,EAAO7G,QAAUA,GAE5C6G,CACX,GAAC,CAAAvW,IAAA,WAAAC,MAED,WACI,OAAQO,KAAK+/B,IAAI/6B,QAAQ,MAAQ,GAAK66B,GAAe76B,QAAQhF,KAAK+/B,MAAQ,CAC9E,KAACD,CAAA,CArDa,GA4FZK,GAAgD,CAClD,EAAO,CAAEC,OAAQ,MAAQC,MAAO,EAAMC,KAAM,EAAMC,OAAQ,MAC1D,EAAO,CAAEH,OAAQ,MAAQC,MAAO,GAAMC,KAAM,GAAMC,OAAQ,OAC1D,EAAO,CAAEH,OAAQ,OAAQC,MAAO,GAAMC,KAAM,IAC5C,GAAO,CAAEF,OAAQ,MAAQI,IAAK,OAC9B,GAAO,CAAEJ,OAAQ,MAAQI,IAAK,OAC9B,IAAO,CAAEJ,OAAQ,OAAQI,IAAK,QAGlC,SAASC,GAAWhhC,GAChB,OAAOiU,EAAAA,EAAAA,IAAWL,EAAAA,GAAU3E,KAAKjP,GAAOkU,cAAe,GAC3D,CAGA,SAAS+sB,GAAal/B,GAClB,OAAO4zB,GAAO3uB,QAAOrB,EAAAA,EAAAA,IAAO,CAAE5D,GAAMswB,EAAAA,EAAAA,IAAa2J,GAAOA,GAAOj6B,IAAQ,EAAG,KAC9E,CAOA,IAAMm/B,GAAc,IAAIC,OAAO,kBAAoB,KAC7CC,GAAW,CACb,IAAID,OAAO,mBAAqB,KAChC,IAAIA,OAAO,gBAAiB,KAC5BD,GACA,IAAIC,OAAO,mCAAoC,MAGnD,SAASE,GAAa9/B,EAAgB41B,GAClC,IACI,OAAOmK,EAAAA,EAAAA,IAAaC,GAAYhgC,EAAQ41B,G,CAC1C,MAAMx1B,GAAQ,CAChB,OAAO,IACX,CAEA,SAAS4/B,GAAYhgC,EAAgB41B,GACjC,GAAe,OAAX51B,EAAmB,OAAO,KAE9B,IAAM0P,EAAS2C,EAAAA,GAAU3E,MAAKojB,EAAAA,EAAAA,IAAa9wB,EAAQ41B,EAAOA,EAAQ,KAAKxD,WACjEj0B,EAASkU,EAAAA,GAAU3E,MAAKojB,EAAAA,EAAAA,IAAa9wB,EAAQ0P,EAAQA,EAAS,KAAK0iB,WAEzE,OAAOtB,EAAAA,EAAAA,IAAa9wB,EAAQ0P,EAAS,GAAIA,EAAS,GAAKvR,EAC3D,CAGA,SAAS8hC,GAAYC,GASjB,OARIA,EAAKpuB,MAAM,qBACXouB,EAAOA,EAAKvvB,UAAU,IACfuvB,EAAKpuB,MAAM,eAClBouB,EAAOA,EAAKvvB,UAAU,GAEtB9K,GAAOmD,mBAAmB,0BAA2B,OAAQk3B,GAG1D,gCAAP97B,OAAyC87B,EAC7C,CAEA,SAASC,GAAO1hC,GACZ,IAAMuB,GAASwF,EAAAA,EAAAA,IAAS/G,GACxB,GAAIuB,EAAO7B,OAAS,GAAM,MAAM,IAAIkC,MAAM,+BAE1C,IAAM+/B,EAAS,IAAItvB,WAAW,IAE9B,OADAsvB,EAAO1O,IAAI1xB,EAAQ,GAAKA,EAAO7B,QACxBiiC,CACX,CAEA,SAASC,GAAS5hC,GACd,GAAKA,EAAMN,OAAS,KAAQ,EAAK,OAAOM,EAExC,IAAMuB,EAAS,IAAI8Q,WAA0C,GAA/BM,KAAKkO,KAAK7gB,EAAMN,OAAS,KAEvD,OADA6B,EAAO0xB,IAAIjzB,GACJuB,CACX,CAGA,SAASsgC,GAAYC,GAMjB,IALA,IAAMvgC,EAA4B,GAE9BwgC,EAAY,EAGPl7B,EAAI,EAAGA,EAAIi7B,EAAMpiC,OAAQmH,IAC9BtF,EAAOf,KAAK,MACZuhC,GAAa,GAGjB,IAAK,IAAIl7B,EAAI,EAAGA,EAAIi7B,EAAMpiC,OAAQmH,IAAK,CACnC,IAAM9E,GAAOgF,EAAAA,EAAAA,IAAS+6B,EAAMj7B,IAG5BtF,EAAOsF,GAAK66B,GAAOK,GAGnBxgC,EAAOf,KAAKkhC,GAAO3/B,EAAKrC,SACxB6B,EAAOf,KAAKohC,GAAS7/B,IACrBggC,GAAa,GAAmC,GAA9BpvB,KAAKkO,KAAK9e,EAAKrC,OAAS,G,CAG9C,OAAO6V,EAAAA,EAAAA,IAAUhU,EACrB,CAEO,IAAMygC,GAAQ,WAYjB,SAAAA,EAAY38B,EAAwBoK,EAAiBvH,EAAc+5B,IAAwBriC,EAAAA,EAAAA,GAAA,KAAAoiC,IACvFv3B,EAAAA,EAAAA,IAAelK,KAAM,WAAY8E,IACjCoF,EAAAA,EAAAA,IAAelK,KAAM,OAAQ2H,IAC7BuC,EAAAA,EAAAA,IAAelK,KAAM,UAAW8E,EAAS68B,UAAUzyB,QAAQA,KAC3DhF,EAAAA,EAAAA,IAAelK,KAAM,mBAAoB0hC,EAC7C,CAuVC,OAvVAniC,EAAAA,EAAAA,GAAAkiC,EAAA,EAAAjiC,IAAA,mBAAAC,MAED,WAAgB,IAAAY,EAAA,KAgBZ,OAfKL,KAAK4hC,mBAEN5hC,KAAK4hC,iBAAmB5hC,KAAK8E,SAASjC,KAAK,CACvCgM,GAAI7O,KAAKkP,QACT1N,KAAM,+EACPT,MAAK,SAACC,GACL,OAAOqS,EAAAA,GAAU3E,KAAK1N,GAAQwe,GAAG,EACrC,IAAGlQ,OAAM,SAAClO,GACN,GAAIA,EAAMG,OAASuF,EAAAA,GAAO0F,OAAOq1B,eAAkB,OAAO,EAG1D,MADAxhC,EAAKuhC,iBAAmB,KAClBxgC,CACV,KAGGpB,KAAK4hC,gBAChB,GAAC,CAAApiC,IAAA,SAAAC,MAEK,SAAOqiC,EAAkBC,G,0IAWvB,OARE10B,EAAK,CACPwB,GAAI7O,KAAKkP,QACT8yB,iBAAiB,EACjBxgC,MAAMwT,EAAAA,EAAAA,IAAU,CAAE8sB,EAAUtG,GAASx7B,KAAK2H,MAAQo6B,GAAc,QAIhExmB,GAAa,EAAKjb,EAAAoD,KAAA,EACZ1D,KAAKiiC,mBAAkB,WAAA3hC,EAAAuD,KAAE,CAAFvD,EAAAoD,KAAA,QAC7B6X,GAAa,EAGblO,EAAG7L,MAAOwT,EAAAA,EAAAA,IAAU,CAAE,aAAcssB,GAAY,EL9TlC35B,EK8T8C3H,KAAK2H,ML7TlEoJ,EAAAA,EAAAA,KAAQ3L,EAAAA,EAAAA,IAAOi2B,GAAa1zB,GAAM/G,KAAI,SAACw6B,GAE1C,GAAIA,EAAKj8B,OAAS,GACd,MAAM,IAAIkC,MAAM,sDAGpB,IAAMkQ,EAAQ,IAAIO,WAAWspB,EAAKj8B,OAAS,GAG3C,OAFAoS,EAAMmhB,IAAI0I,EAAM,GAChB7pB,EAAM,GAAKA,EAAMpS,OAAS,EACnBoS,CAEX,MAAO,MKkTyElE,EAAG7L,SAAW,OAIzE,OAJyElB,EAAA+O,KAAA,EAAA/O,EAAAoD,KAAA,GAInE1D,KAAK8E,SAASjC,KAAKwK,GAAG,QAMW,OANhDrM,EAAMV,EAAAuD,MACL2C,EAAAA,EAAAA,IAASxF,GAAQ7B,OAAS,KAAQ,GACnC0H,GAAO+I,WAAW,uBAAwB9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CACpE10B,YAAaE,EAAI7L,KAAMR,IAG3Bua,IAAcva,EAASggC,GAAYhgC,EAAQ,IAAKV,EAAAC,OAAA,SAC7CS,GAAM,WAAAV,EAAA+O,KAAA,GAAA/O,EAAAwX,GAAAxX,EAAA,SAETA,EAAAwX,GAAMvW,OAASuF,EAAAA,GAAO0F,OAAOq1B,eAAc,CAAAvhC,EAAAoD,KAAA,gBAAApD,EAAAC,OAAA,SAAW,MAAI,cAAAD,EAAAwX,GAAA,yBAAAxX,EAAAE,OL3UpE,IAAoBmH,CK2UgD,GAAAlH,EAAA,kB,GAGrE,CAAAjB,IAAA,cAAAC,MAEK,SAAYqiC,EAAkBC,G,sIACjB,O,SAAM/hC,KAAKkiC,OAAOJ,EAAUC,GAAW,OAA1C,GACE,OADR/gC,EAAMF,EAAA+C,MACM,CAAA/C,EAAA4C,KAAA,eAAA5C,EAAAP,OAAA,SAAWygC,GAAYhgC,EAAQ,IAAE,cAAAF,EAAAP,OAAA,SAC5C,MAAI,wBAAAO,EAAAN,OAAA,GAAAiB,EAAA,S,GACd,CAAAjC,IAAA,cAAAC,MAED,SAAY0iC,EAAkBC,GAC1B,IAAMC,EAAWlC,GAAUz5B,OAAOy7B,IAQlC,GANgB,MAAZE,GACAx7B,GAAO+I,WAAW,0BAADxK,OAA4B+8B,GAAar7B,EAAAA,GAAO0F,OAAOqD,sBAAuB,CAC3FC,UAAW,cAAF1K,OAAiB+8B,EAAS,OAItB,QAAjBE,EAAS7B,IACT,OAAOxgC,KAAK8E,SAAS68B,UAAUzyB,QAAQkzB,GAG3C,IAAM7wB,GAAQ/K,EAAAA,EAAAA,IAAS47B,GAGvB,GAAsB,MAAlBC,EAAShC,MAAe,CACxB,IAAMA,EAAQ+B,EAAStvB,MAAM,6CAC7B,GAAIutB,EAAO,CACP,IAAMlhC,EAASyT,SAASytB,EAAM,GAAI,IAClC,GAAIA,EAAM,GAAGlhC,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC3D,OAAOuhC,IAAat7B,EAAAA,EAAAA,IAAO,CAAE,CAAEi9B,EAAShC,OAAU,KAAOA,EAAM,K,EAM3E,GAAqB,MAAjBgC,EAAS/B,KAAc,CACvB,IAAMA,EAAO8B,EAAStvB,MAAM,yCAC5B,GAAIwtB,EAAM,CACN,IAAMnhC,EAASyT,SAAS0tB,EAAK,GAAI,IACjC,GAAIA,EAAK,GAAGnhC,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC1D,OAAOuhC,IAAat7B,EAAAA,EAAAA,IAAO,CAAE,CAAEi9B,EAAS/B,MAAS,KAAOA,EAAK,K,EAMzE,GAAuB,MAAnB+B,EAAS9B,OAAgB,CACzB,IAAMphC,EAASoS,EAAM,GAGjBlF,EAAUkF,EAAM,GASpB,GARgB,IAAZlF,EACe,KAAXlN,GAA4B,KAAXA,IACjBkN,GAAW,GAGfA,GAAW,EAGXA,GAAW,GAAKkF,EAAMpS,SAAW,EAAIA,GAAUA,GAAU,GAAKA,GAAU,GAAI,CAC5E,IAAMmjC,EAAQC,KAAAA,QAAehxB,EAAMT,MAAM,IAEzC,OADAwxB,EAAM9xB,QAAQnE,GACPk2B,KAAAA,OAAcF,EAAS9B,OAAQ+B,E,EAI9C,OAAO,IACX,GAAC,CAAA9iC,IAAA,aAAAC,MAGK,SAAW0iC,G,0IAGb,GAFgB,MAAZA,IAAoBA,EAAW,IAGlB,KAAbA,EAAe,CAAA1+B,EAAAC,KAAA,SAGI,OAHJD,EAAA4L,KAAA,EAAA5L,EAAAC,KAAA,EAGU1D,KAAKkiC,OAAO,cAAa,OAAlC,GAGG,QAHTlhC,EAAMyC,EAAAI,OCheJ,uEDmee7C,EAAmB,CAAAyC,EAAAC,KAAA,eAAAD,EAAAlD,OAAA,SAAW,MAAI,cAAAkD,EAAAlD,OAAA,SAElDP,KAAK8E,SAAS68B,UAAUa,YAAYxhC,IAAO,WAAAyC,EAAA4L,KAAA,GAAA5L,EAAAqU,GAAArU,EAAA,SAE9CA,EAAAqU,GAAMvW,OAASuF,EAAAA,GAAO0F,OAAOq1B,eAAc,CAAAp+B,EAAAC,KAAA,gBAAAD,EAAAlD,OAAA,SAAW,MAAI,cAAAkD,EAAAqU,GAAA,QAMrD,OANqDrU,EAAAC,KAAA,GAM/C1D,KAAKyiC,YAAY,aAAchC,GAAW0B,IAAU,QAA7D,GAGE,OAHVC,EAAQ3+B,EAAAI,OAGuB,OAAbu+B,EAAiB,CAAA3+B,EAAAC,KAAA,gBAAAD,EAAAlD,OAAA,SAAW,MAAI,QAWvD,OANc,OAFT2O,EAAUlP,KAAK0iC,YAAYP,EAAUC,KAGvCv7B,GAAO+I,WAAW,mCAAoC9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACvFC,UAAW,cAAF1K,OAAiB+8B,EAAS,KACnCA,SAAUA,EACV3gC,KAAM4gC,IAEb3+B,EAAAlD,OAAA,SAEM2O,GAAO,yBAAAzL,EAAAjD,OAAA,GAAAsD,EAAA,kB,GACjB,CAAAtE,IAAA,YAAAC,MAEK,W,oKAKiB,OAJbkjC,EAAoD,CAAE,CAAE/8B,KAAM,OAAQg9B,QAAS5iC,KAAK2H,OAAQ4F,EAAA8B,KAAA,EAAA9B,EAAA7J,KAAA,EAIzE1D,KAAK6iC,QAAQ,UAAS,OAA/B,GACE,OADRC,EAAMv1B,EAAA1J,MACM,CAAA0J,EAAA7J,KAAA,eAAA6J,EAAAhN,OAAA,SAAW,MAAI,OAExB+F,EAAI,EAAC,YAAEA,EAAIu6B,GAAS1hC,QAAM,CAAAoO,EAAA7J,KAAA,SACQ,GAC1B,OADPoP,EAAQgwB,EAAOhwB,MAAM+tB,GAASv6B,KACnB,CAAAiH,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,uBAEXwiC,EAASjwB,EAAM,GAAGnE,cAAapB,EAAAuK,GAE7BirB,EAAMx1B,EAAA7J,KACL,UADK6J,EAAAuK,GACE,GAIP,SAJOvK,EAAAuK,GAID,GAIN,SAJMvK,EAAAuK,GAIA,GAIN,WAJMvK,EAAAuK,IAKN,YADQvK,EAAAuK,GAAA,GACC,iBAZqC,OAA/C6qB,EAAQ1iC,KAAK,CAAE2F,KAAM,MAAOg9B,QAASE,IAAUv1B,EAAAhN,OAAA,SACxC,CAAEoiC,QAAAA,EAASngC,IAAKsgC,IAAQ,QAGiB,OAAhDH,EAAQ1iC,KAAK,CAAE2F,KAAM,OAAQg9B,QAASE,IAAUv1B,EAAAhN,OAAA,SACzC,CAAEoiC,QAAAA,EAASngC,IAAKsgC,IAAQ,QAGiB,OAAhDH,EAAQ1iC,KAAK,CAAE2F,KAAM,OAAQg9B,QAASE,IAAUv1B,EAAAhN,OAAA,SACzC,CAAEoiC,QAAAA,EAASngC,IAAKy+B,GAAY6B,KAAS,QASR,GAJ9BhB,EAAuB,WAAXiB,EAAuB,aAAc,aACvDJ,EAAQ1iC,KAAK,CAAE2F,KAAMm9B,EAAQH,QAASE,IAEtCv1B,EAAAwK,GACe/X,KAAKgjC,iBAAgBz1B,EAAAwK,GAAA,CAAAxK,EAAA7J,KAAA,SAAI,OAAJ6J,EAAA7J,KAAA,GAAU1D,KAAKiN,aAAY,QAAAM,EAAAwK,GAAAxK,EAAA1J,KAAA,QAEtB,GAFnCo/B,EAAK11B,EAAAwK,GAGU,KADfujB,GAASxoB,EAAM,IAAM,IAAIlB,MAAM,MAC3BzS,OAAY,CAAAoO,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QAExB,OAFwBgN,EAAA7J,KAAA,GAElB1D,KAAK8E,SAAS68B,UAAUzyB,QAAQosB,EAAM,IAAG,QAG5D,GAHMhJ,EAAI/kB,EAAA1J,KACJq/B,GAAUxvB,EAAAA,EAAAA,IAAWL,EAAAA,GAAU3E,KAAK4sB,EAAM,IAAI3nB,cAAe,IAGpD,WAAXovB,EAAmB,CAAAx1B,EAAA7J,KAAA,SAEoC,OAFpC6J,EAAAma,GAEA1nB,KAAK8E,SAAS68B,UAASp0B,EAAA7J,KAAA,GAAmB1D,KAAK8E,SAASjC,KAAK,CAC5EgM,GAAIyjB,EAAM9wB,MAAMwT,EAAAA,EAAAA,IAAU,CAAE,aAAckuB,MAC5C,QAFoD,GAEpD31B,EAAA41B,GAAA51B,EAAA1J,KAFIu/B,EAAU71B,EAAAma,GAA2B8a,YAAW3/B,KAAA0K,EAAAma,GAAAna,EAAA41B,IAGlDF,IAAUG,EAAU,CAAA71B,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QACvCoiC,EAAQ1iC,KAAK,CAAE2F,KAAM,QAASg9B,QAASQ,IAAc71B,EAAA7J,KAAA,oBAEnC,YAAXq/B,EAAoB,CAAAx1B,EAAA7J,KAAA,SAEI,OAFJ6J,EAAA81B,GAEXhwB,EAAAA,GAAS9F,EAAA7J,KAAA,GAAY1D,KAAK8E,SAASjC,KAAK,CACpDgM,GAAIyjB,EAAM9wB,MAAMwT,EAAAA,EAAAA,IAAU,CAAE,cAActB,EAAAA,EAAAA,IAAWuvB,EAAO,IAAKC,MACnE,QAF4B,GAE5B31B,EAAA+1B,GAAA/1B,EAAA1J,OAFI0/B,EAAOh2B,EAAA81B,GAAa30B,KAAI7L,KAAA0K,EAAA81B,GAAA91B,EAAA+1B,KAGlBhQ,SAAU,CAAF/lB,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QACnCoiC,EAAQ1iC,KAAK,CAAE2F,KAAM,UAAWg9B,QAASW,EAAQpvB,aAAc,QASpC,OALzB9G,EAAK,CACPwB,GAAI7O,KAAK8E,SAAS68B,UAAUzyB,QAAQosB,EAAM,IAC1C95B,MAAMwT,EAAAA,EAAAA,IAAU,CAAE8sB,EAAUoB,KAC/B31B,EAAAi2B,GAEiB1C,GAAYvzB,EAAA7J,KAAA,GAAO1D,KAAK8E,SAASjC,KAAKwK,GAAG,QAAG,GAAHE,EAAAk2B,GAAAl2B,EAAA1J,KACxC,OADf6/B,GAAc,EAAHn2B,EAAAi2B,IAAAj2B,EAAAk2B,GAA8C,IACtC,CAAAl2B,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QAiBrB,OAhBjBoiC,EAAQ1iC,KAAK,CAAE2F,KAAM,oBAAqBg9B,QAASc,IAGpC,YAAXX,IACAW,EAAcA,EAAYvqB,QAAQ,OAAQ+pB,EAAQvxB,UAAU,IAC5DgxB,EAAQ1iC,KAAK,CAAE2F,KAAM,wBAAyBg9B,QAASc,KAIvDA,EAAY5wB,MAAM,aAClB4wB,EAAczC,GAAYyC,IAG9Bf,EAAQ1iC,KAAK,CAAE2F,KAAM,eAAgBg9B,QAASc,IAE9Cn2B,EAAA7J,KAAA,IACuBL,EAAAA,GAAAA,IAAUqgC,GAAY,QAA/B,GAARC,EAAQp2B,EAAA1J,KACC,CAAF0J,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QAIC,GAH7BoiC,EAAQ1iC,KAAK,CAAE2F,KAAM,WAAYg9B,QAASt/B,KAAKC,UAAUogC,KAIhC,kBADrBC,EAAWD,EAASE,OACS,CAAAt2B,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,YAE5CqjC,EAAS9wB,MAAM,wBAAyB,CAAFvF,EAAA7J,KAAA,SAAA6J,EAAA7J,KAAA,iBAIE,GAC5B,MADCkgC,EAAS9wB,MAAM6tB,IACZ,CAAApzB,EAAA7J,KAAA,gBAAA6J,EAAAhN,OAAA,SAAW,MAAI,QAE/BoiC,EAAQ1iC,KAAK,CAAE2F,KAAM,WAAYg9B,QAASgB,IAC1CA,EAAW3C,GAAY2C,GAAU,QAGY,OAAjDjB,EAAQ1iC,KAAK,CAAE2F,KAAM,MAAOg9B,QAASgB,IAAYr2B,EAAAhN,OAAA,SAE1C,CAAEoiC,QAAAA,EAASngC,IAAKohC,IAAU,QAjGRt9B,IAAGiH,EAAA7J,KAAA,gBAAA6J,EAAA7J,KAAA,iBAAA6J,EAAA8B,KAAA,GAAA9B,EAAAu2B,GAAAv2B,EAAA,wBAAAA,EAAAhN,OAAA,SAuGrC,MAAI,yBAAAgN,EAAA/M,OAAA,GAAAgN,EAAA,kB,GACd,CAAAhO,IAAA,iBAAAC,MAEK,W,sJAGe,O,SAAMO,KAAKyiC,YAAY,cAAa,OAAvC,GAGE,OAHVL,EAAQ30B,EAAA5J,OAGuB,OAAbu+B,EAAiB,CAAA30B,EAAA/J,KAAA,eAAA+J,EAAAlN,OAAA,SAAW,MAAI,OAGoC,KAAtFwjC,EAAO3B,EAAStvB,MAAM,kEAClB,CAAFrF,EAAA/J,KAAA,SACgC,GAA9BvE,EAASyT,SAASmxB,EAAK,GAAI,IAC7BA,EAAK,GAAG5kC,SAAoB,EAATA,EAAU,CAAAsO,EAAA/J,KAAA,gBAAA+J,EAAAlN,OAAA,SACtB,UAAa60B,GAAO3uB,OAAO,KAAOs9B,EAAK,KAAG,QAKmC,KAAtFC,EAAO5B,EAAStvB,MAAM,kEAClB,CAAFrF,EAAA/J,KAAA,SACgC,GAA9BvE,EAASyT,SAASoxB,EAAK,GAAI,IAC7BA,EAAK,GAAG7kC,SAAoB,EAATA,EAAU,CAAAsO,EAAA/J,KAAA,gBAAA+J,EAAAlN,OAAA,SACtB,UAAa60B,GAAO3uB,OAAO,KAAOu9B,EAAK,KAAG,QAKI,KAAvDC,EAAQ7B,EAAStvB,MAAM,kCAClB,CAAFrF,EAAA/J,KAAA,YACoB,KAArBugC,EAAM,GAAG9kC,OAAmB,CAAAsO,EAAA/J,KAAA,gBAAA+J,EAAAlN,OAAA,SACrB,SAAY0jC,EAAM,IAAE,QAIqB,KAAlDC,EAAS9B,EAAStvB,MAAM,4BAClB,CAAFrF,EAAA/J,KAAA,YACoB,KAAtBwgC,EAAO,GAAG/kC,OAAmB,CAAAsO,EAAA/J,KAAA,SAGsD,OAD7EygC,EAAkC,CAAE,IAAK,GAAI,IAAK,IAAK,IAAK,KAC5DxsB,GAAOysB,EAAAA,GAAAA,GAAa,KAAOF,EAAO,IAAI/qB,QAAQ,WAAW,SAAC5B,GAAC,OAAM4sB,EAAQ5sB,EAAE,IAAE9J,EAAAlN,OAAA,SAC5E,SAAYoX,GAAI,eAAAlK,EAAAlN,OAAA,SAIxBsG,GAAO+I,WAAW,2CAA4C9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACtGC,UAAW,mBACXtO,KAAM4gC,KACR,yBAAA30B,EAAAjN,OAAA,GAAAsN,EAAA,S,GACL,CAAAtO,IAAA,UAAAC,MAEK,SAAQD,G,wIAcO,OAXb6kC,GAAWpxB,EAAAA,EAAAA,IAAYzT,IAI3B6kC,GAAWj/B,EAAAA,EAAAA,IAAO,CAAEq7B,GAAW,IAAKA,GAAW4D,EAASllC,QAASklC,KAGnDllC,OAAS,KAAQ,IAC3BklC,GAAWj/B,EAAAA,EAAAA,IAAO,CAAEi/B,GAAU3wB,EAAAA,EAAAA,IAAW,KAAM,GAAMlU,EAAIL,OAAS,OACrE4O,EAAArK,KAAA,EAEsB1D,KAAKyiC,YAAY,cAAc1xB,EAAAA,EAAAA,IAAQszB,IAAU,OAA1D,GACE,OADVjC,EAAQr0B,EAAAlK,OACuB,OAAbu+B,EAAiB,CAAAr0B,EAAArK,KAAA,eAAAqK,EAAAxN,OAAA,SAAW,MAAI,cAAAwN,EAAAxN,OAAA,UAEjDwgC,EAAAA,EAAAA,IAAaqB,IAAS,wBAAAr0B,EAAAvN,OAAA,GAAAwN,EAAA,S,KAChCyzB,CAAA,CAxWgB,GA2WjB6C,GAA8B,KAE9BC,GAAa,EAEJC,GAAa,SAAAC,IAAA7iC,EAAAA,EAAAA,GAAA4iC,EAAAC,GAAA,IAAA9gC,GAAA7B,EAAAA,EAAAA,GAAA0iC,GAiDtB,SAAAA,EAAYniC,GAAsC,IAAAL,EAkB9C,IAlB8C3C,EAAAA,EAAAA,GAAA,KAAAmlC,IAC9CxiC,EAAA2B,EAAAd,KAAA,OAGK6hC,QAAU,GAEf1iC,EAAK2iC,SAAW,CAAEhyB,OAAQ,GAE1B3Q,EAAK4iC,iBAAkB,EAEvB5iC,EAAK2/B,WAAY,gBAAA6C,EAAA,KAAA75B,iBAAA,GAAWk6B,gBAK5B36B,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAA9iC,GAAO,aAA2B,QAAZK,GAChCL,EAAK+iC,aAAc1iC,EAAUL,EAAK4B,iBAElCvB,aAAmBtC,QACnBiC,EAAKgjC,gBAAkB3iC,EAGvBA,EAAQiN,OAAM,SAAClO,GAAY,IAG3BY,EAAKijC,SAAS31B,OAAM,SAAClO,GAAY,QAE9B,CACH,IAAM8jC,GAAe36B,EAAAA,EAAAA,IAAS,gBAAAi6B,EAAA,KAAA75B,iBAAA,EAA+C,aAAxDJ,CAAsElI,GACvF6iC,IACAh7B,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAA9iC,GAAO,WAAYkjC,GACjCljC,EAAK2C,KAAK,UAAWugC,EAAc,OAGnCr+B,GAAOmD,mBAAmB,kBAAmB,UAAW3H,E,CAWxC,OAPxBL,EAAKmjC,yBAA2B,KAEhCnjC,EAAKi+B,kBAAoB,EACzBj+B,EAAKojC,qBAAuB,GAE5BpjC,EAAKqjC,iBAAmB,IAExBrjC,EAAKsjC,eAAiB,EAAEtjC,CAC5B,CAgEC,OAhEAzC,EAAAA,EAAAA,GAAAilC,EAAA,EAAAhlC,IAAA,SAAAC,MAEK,W,yIACmB,MAAjBO,KAAKulC,SAAgB,CAAAt3B,EAAAvK,KAAA,SACM,GAAvBrB,EAAmB,MACnBrC,KAAKglC,gBAAiB,CAAF/2B,EAAAvK,KAAA,SAEN,OAFMuK,EAAAoB,KAAA,EAAApB,EAAAvK,KAAA,EAEA1D,KAAKglC,gBAAe,OAApC3iC,EAAO4L,EAAApK,KAAAoK,EAAAvK,KAAG,GAAH,aAAAuK,EAAAoB,KAAG,EAAHpB,EAAA6J,GAAA7J,EAAA,oBAKA,MAAX5L,EAAe,CAAA4L,EAAAvK,KAAA,SACL,OADKuK,EAAAvK,KAAA,GACC1D,KAAK4D,gBAAe,QAApCvB,EAAO4L,EAAApK,KAAA,QAKNxB,GACDwE,GAAO+I,WAAW,sBAAuB9I,EAAAA,GAAO0F,OAAOg5B,cAAe,CAAC,GAItD,MAAjBxlC,KAAKulC,WACDvlC,KAAK+kC,WACL/kC,KAAKulC,SAAWljC,GAEhB6H,EAAAA,EAAAA,IAAelK,KAAM,WAAYqC,GAErCrC,KAAK2E,KAAK,UAAWtC,EAAS,OACjC,eAAA4L,EAAA1N,OAAA,SAGEP,KAAKulC,UAAQ,yBAAAt3B,EAAAzN,OAAA,GAAA2N,EAAA,iB,GAKxB,CAAA3O,IAAA,QAAA6qB,IACA,WAAS,IAAA7mB,EAAA,KACL,OAAOiiC,EAAAA,GAAAA,KAAK,WACR,OAAOjiC,EAAKyhC,SAASlkC,MAAK,SAACsB,GACvB,OAAOA,CACX,IAAG,SAACjB,GAEA,GAAIA,EAAMG,OAASuF,EAAAA,GAAO0F,OAAOk5B,eAAiC,cAAhBtkC,EAAMukC,MAGxD,MAAMvkC,CACV,GACJ,GACJ,GAEA,CAAA5B,IAAA,gBAAAC,MAaM,SAAc4N,EAAiBu4B,EAAkBC,G,0JAC/C7lC,KAAK4kC,iBAAmC,IAAhBiB,EAAK1mC,OAAY,CAAAiP,EAAA1K,KAAA,eAAA0K,EAAA7N,OAAA,SAAW,MAAI,OAEtDulC,EAASz4B,EAAGwB,GAAGF,cACfnN,EAAOokC,EAASj3B,cAEhBo3B,EAA+B,GAE5Bz/B,EAAI,EAAC,YAAEA,EAAIu/B,EAAK1mC,QAAM,CAAAiP,EAAA1K,KAAA,SASZ,OARTlB,EAAMqjC,EAAKv/B,GAGX0/B,EAAOxjC,EAAI2W,QAAQ,WAAY2sB,GAAQ3sB,QAAQ,SAAU3X,GAGzDykC,EAAuBzjC,EAAIwC,QAAQ,WAAa,EAAK,KAAM1B,KAAKC,UAAU,CAAE/B,KAAAA,EAAMskC,OAAAA,IAAS13B,EAAA1K,KAAA,IAE5EL,EAAAA,GAAAA,IAAU,CAAEb,IAAKwjC,EAAME,kBAAkB,GAAQD,GAAM,SAACxmC,EAAO0F,GAEhF,OADA1F,EAAM49B,OAASl4B,EAASghC,WACjB1mC,CACX,IAAE,QAHU,KAANuB,EAAMoN,EAAAvK,MAKDrC,KAAM,CAAF4M,EAAA1K,KAAA,gBAAA0K,EAAA7N,OAAA,SAAWS,EAAOQ,MAAI,QAIrC,GAFM4kC,EAAgBplC,EAAOM,SAAW,kBAGpCN,EAAOq8B,QAAU,KAAOr8B,EAAOq8B,OAAS,KAAG,CAAAjvB,EAAA1K,KAAA,gBAAA0K,EAAA7N,OAAA,SACpCsG,GAAO+I,WAAW,yCAADxK,OAA2CghC,GAAiBt/B,EAAAA,GAAO0F,OAAO65B,aAAc,CAAE7jC,IAAAA,EAAK4jC,aAAAA,KAAe,QAI1IL,EAAc9lC,KAAKmmC,GAAc,QAxBJ9/B,IAAG8H,EAAA1K,KAAA,uBAAA0K,EAAA7N,OAAA,SA2B7BsG,GAAO+I,WAAW,wCAADxK,OAA0C2gC,EAAcnlC,KAAI,SAACsnB,GAAC,OAAK5kB,KAAKC,UAAU2kB,EAAE,IAAEviB,KAAK,OAAUmB,EAAAA,GAAO0F,OAAO65B,aAAc,CACrJR,KAAAA,EAAME,cAAAA,KACR,yBAAA33B,EAAA5N,OAAA,GAAA8N,EAAA,S,GAIN,CAAA9O,IAAA,0BAAAC,MACM,SAAwB6mC,G,mJAC1B,O,SAAMtmC,KAAKilC,SAAQ,YAGfqB,EAAS,GAAC,CAAA/3B,EAAA7K,KAAA,oBAGH1D,KAAKumC,qBAAsB,CAAFh4B,EAAA7K,KAAA,SAOT,OAJb8iC,EAAsBxmC,KAAKumC,qBAAoBh4B,EAAAc,KAAA,EAAAd,EAAA7K,KAAA,EAI5B8iC,EAAmB,OAA5B,GAANxlC,EAAMuN,EAAA1K,OACP47B,KAAYz+B,EAAOylC,UAAaH,GAAM,CAAA/3B,EAAA7K,KAAA,gBAAA6K,EAAAhO,OAAA,SAChCS,EAAOk7B,aAAW,eAAA3tB,EAAAhO,OAAA,uBAAAgO,EAAAc,KAAA,GAAAd,EAAAuJ,GAAAvJ,EAAA,SAYzBvO,KAAKumC,uBAAyBC,EAAmB,CAAAj4B,EAAA7K,KAAA,gBAAA6K,EAAAhO,OAAA,oBAAAgO,EAAA7K,KAAA,gBAyCzD,OAlCFgjC,EAAUjH,KAEVkH,GAA2B/7B,EAAAA,EAAAA,IAAkB,CAC/CsxB,YAAal8B,KAAK4mC,QAAQ,iBAAkB,CAAC,GAC7CC,aAAc7mC,KAAKsF,aAAavE,MAAK,SAACsB,GAAO,OAAM,IAAI,IAAG,SAACjB,GAAK,OAAMA,CAAK,MAC5EL,MAAK,SAAAqU,GAAkC,IAA/B8mB,EAAW9mB,EAAX8mB,YAAa2K,EAAYzxB,EAAZyxB,aACpB,GAAIA,EAKA,MAHIxiC,EAAKkiC,uBAAyBI,IAC9BtiC,EAAKkiC,qBAAuB,MAE1BM,EAGV,IAAMJ,EAAWhH,KAOjB,OALAvD,EAAc7oB,EAAAA,GAAU3E,KAAKwtB,GAAa9I,YACxB/uB,EAAK8gC,0BAA2BjJ,EAAc73B,EAAK8gC,yBAErE9gC,EAAK8gC,wBAA0BjJ,EAC/B73B,EAAKyiC,oBAAoB5K,GAClB,CAAEA,YAAAA,EAAawK,QAAAA,EAASD,SAAAA,EACnC,IAEAzmC,KAAKumC,qBAAuBI,EAG5BA,EAAyBr3B,OAAM,SAAClO,GAExBiD,EAAKkiC,uBAAyBI,IAC9BtiC,EAAKkiC,qBAAuB,KAEpC,IAAGh4B,EAAA7K,KAAA,GAEWijC,EAAwB,eAAAp4B,EAAAhO,OAAA,SAAAgO,EAAA1K,KAAEq4B,aAAW,yBAAA3tB,EAAA/N,OAAA,GAAAiO,EAAA,kB,GACtD,CAAAjP,IAAA,OAAAC,MAEK,W,mJAQgB,OAPZsnC,EAASxC,KAGTyC,EAAgC,GAElC9K,EAAsB,KAAI9sB,EAAAC,KAAA,EAAAD,EAAA1L,KAAA,EAEN1D,KAAKinC,wBAAwB,IAAMjnC,KAAKknC,gBAAkB,GAAE,OAAhFhL,EAAW9sB,EAAAvL,KAAAuL,EAAA1L,KAAG,GAAH,aAEe,OAFf0L,EAAAC,KAAG,EAAHD,EAAA0I,GAAA1I,EAAA,SAEXpP,KAAK2E,KAAK,QAAOyK,EAAA0I,IAAS1I,EAAA7O,OAAA,kBAQ9B,GALAP,KAAK8mC,oBAAoB5K,GAGzBl8B,KAAK2E,KAAK,OAAQoiC,EAAQ7K,GAGtBA,IAAgBl8B,KAAKigC,iBAAgB,CAAA7wB,EAAA1L,KAAA,SACR,OAA7B1D,KAAK2E,KAAK,UAAWoiC,GAAQ33B,EAAA7O,OAAA,kBASjC,IAJ6B,IAAzBP,KAAK2kC,SAAShyB,QACd3S,KAAK2kC,SAAShyB,MAAQupB,EAAc,GAGpC9pB,KAAK+0B,IAAcnnC,KAAK2kC,SAAShyB,MAAUupB,GAAe,IAC1Dr1B,GAAO24B,KAAK,+DAADp6B,OAAiEpF,KAAK2kC,SAAShyB,MAAM,gBAAAvN,OAAgB82B,EAAY,MAC5Hl8B,KAAK2E,KAAK,QAASkC,GAAOugC,UAAU,8BAA+BtgC,EAAAA,GAAO0F,OAAOk5B,cAAe,CAC5FxJ,YAAaA,EACbyJ,MAAO,YACP0B,oBAAqBrnC,KAAK2kC,SAAShyB,SAEvC3S,KAAK2E,KAAK,QAASu3B,QAInB,IAAS51B,EAAatG,KAAK2kC,SAAShyB,MAAS,EAAGrM,GAAK41B,EAAa51B,IAC9DtG,KAAK2E,KAAK,QAAS2B,GAiHyB,OA5GvCtG,KAAK2kC,SAAShyB,QAAWupB,IAClCl8B,KAAK2kC,SAAShyB,MAAQupB,EAEtBl5B,OAAO8H,KAAK9K,KAAK2kC,UAAU1jC,SAAQ,SAACzB,GAEhC,GAAY,UAARA,EAAJ,CAGA,IAAM8nC,EAAmBC,EAAK5C,SAASnlC,GAKd,YAArB8nC,GAIApL,EAAcoL,EAAmB,WAC1BC,EAAK5C,SAASnlC,E,CAE7B,MAI2B,IAA3BQ,KAAKigC,mBACLjgC,KAAKigC,iBAAmB/D,EAAc,GAG1Cl8B,KAAK0kC,QAAQzjC,SAAQ,SAAC0kC,GAClB,OAAQA,EAAM//B,MACV,IAAK,KACD,IAAM+R,EAAOguB,EAAMhuB,KACf6vB,EAASD,EAAKE,sBAAsB9vB,GAAM5W,MAAK,SAAC87B,GAChD,OAAKA,GAAkC,MAAvBA,EAAQX,aACxBqL,EAAK5C,SAAS,KAAOhtB,GAAQklB,EAAQX,YACrCqL,EAAK5iC,KAAKgT,EAAMklB,GACT,MAH+C,IAI1D,IAAGvtB,OAAM,SAAClO,GAAmBmmC,EAAK5iC,KAAK,QAASvD,EAAQ,IAExD4lC,EAAQ/mC,KAAKunC,GAEb,MAGJ,IAAK,SAED,IAAK7B,EAAMzF,UAAW,CAClByF,EAAMzF,WAAY,GAIc,IAA5ByF,EAAM1F,mBACN0F,EAAM1F,iBAAmB/D,EAAc,GAO3C,IAAMnmB,EAAS4vB,EAAM5vB,OACrBA,EAAO+nB,UAAY6H,EAAM1F,iBAAmB,EAC5ClqB,EAAOgoB,QAAU7B,EAIjB,IAAMwL,EAAe3xB,EAAOgoB,QAAUwJ,EAAKnC,qBACvCsC,EAAe3xB,EAAO+nB,YAAa/nB,EAAO+nB,UAAY4J,GAEtD3xB,EAAO+nB,UAAY,IAAK/nB,EAAO+nB,UAAY,GAE/C,IAAM0J,EAASD,EAAKI,QAAQ5xB,GAAQhV,MAAK,SAACm8B,GAEtCyI,EAAMzF,WAAY,EAEE,IAAhBhD,EAAK/9B,QAET+9B,EAAKj8B,SAAQ,SAACsR,GAGNA,EAAI2pB,YAAcyJ,EAAM1F,mBACxB0F,EAAM1F,iBAAmB1tB,EAAI2pB,aAIjCqL,EAAK5C,SAAS,KAAOpyB,EAAI0pB,WAAa1pB,EAAI2pB,YAC1CqL,EAAK5C,SAAS,KAAOpyB,EAAIkqB,iBAAmBlqB,EAAI2pB,YAEhDqL,EAAK5iC,KAAKoR,EAAQxD,EACtB,GACJ,IAAGjD,OAAM,SAAClO,GACNmmC,EAAK5iC,KAAK,QAASvD,GAGnBukC,EAAMzF,WAAY,CACtB,IACA8G,EAAQ/mC,KAAKunC,E,EAM7B,IAEAxnC,KAAKigC,iBAAmB/D,EAGxBn8B,QAAQiL,IAAIg8B,GAASjmC,MAAK,WACtBwmC,EAAK5iC,KAAK,UAAWoiC,EACzB,IAAGz3B,OAAM,SAAClO,GAAYmmC,EAAK5iC,KAAK,QAASvD,EAAQ,IAAGgO,EAAA7O,OAAA,mCAAA6O,EAAA5O,OAAA,GAAAyO,EAAA,iB,GAKxD,CAAAzP,IAAA,mBAAAC,MACA,SAAiBy8B,GACbl8B,KAAKigC,iBAAmB/D,EAAc,EAClCl8B,KAAK4nC,SAAW5nC,KAAKylC,MAC7B,GAAC,CAAAjmC,IAAA,UAAA6qB,IAED,WACI,OAAOrqB,KAAKulC,QAChB,GAGA,CAAA/lC,IAAA,gBAAAC,MACM,W,yJACKoH,GAAO+I,WAAW,8CAA+C9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACzGC,UAAW,4BACb,wBAAAlB,EAAApO,OAAA,GAAA2P,EAAA,I,GACL,CAAA3Q,IAAA,aAAAC,MAEK,W,0IACc,O,SAAMO,KAAKilC,SAAQ,OAKZ,OALjB5iC,EAAOwlC,EAAAhkC,KAAAgkC,EAAAnkC,KAAG,EAKa1D,KAAK4D,gBAAe,OAA7B,GAAdkkC,EAAcD,EAAAhkC,KAChBxB,EAAQgG,UAAYy/B,EAAez/B,QAAO,CAAAw/B,EAAAnkC,KAAA,aAItC1D,KAAK+kC,WAAY,CAAF8C,EAAAnkC,KAAA,SAgBf,OAfA1D,KAAKulC,SAAWuC,EAGhB9nC,KAAKigC,kBAAoB,EACzBjgC,KAAK+nC,iBAAmB,KACxB/nC,KAAKgoC,wBAA0B,KAC/BhoC,KAAKslC,eAAiB,EACtBtlC,KAAK2kC,SAAShyB,OAAS,EACvB3S,KAAKmlC,yBAA2B,KAChCnlC,KAAKumC,qBAAuB,KAK5BvmC,KAAK2E,KAAK,UAAWmjC,EAAgBzlC,GAASwlC,EAAAnkC,KAAA,GACxCi8B,GAAM,GAAE,eAAAkI,EAAAtnC,OAAA,SAEPP,KAAKulC,UAAQ,QASE,MANpBnkC,EAAQyF,GAAOugC,UAAU,6BAA8BtgC,EAAAA,GAAO0F,OAAOk5B,cAAe,CACtFC,MAAO,UACPtjC,QAASA,EACT4lC,gBAAiBH,IAGrB9nC,KAAK2E,KAAK,QAASvD,GACbA,EAAK,eAAAymC,EAAAtnC,OAAA,SAGR8B,GAAO,yBAAAwlC,EAAArnC,OAAA,GAAA0nC,EAAA,S,GACjB,CAAA1oC,IAAA,cAAA6qB,IAED,WAAe,IAAA8d,EAAA,KAKX,OAJAnoC,KAAKinC,wBAAwB,IAAMjnC,KAAKknC,gBAAkB,GAAGnmC,MAAK,SAACm7B,GAC/DiM,EAAKrB,oBAAoB5K,EAC7B,IAAG,SAAC96B,GAAY,IAEiB,MAAzBpB,KAAK+nC,iBAA4B/nC,KAAK+nC,kBAAmB,CACrE,GAAC,CAAAvoC,IAAA,UAAA6qB,IAED,WACI,OAAwB,MAAhBrqB,KAAKooC,OACjB,EAAC1V,IAED,SAAYjzB,GAAc,IAAA4oC,EAAA,KAClB5oC,IAAUO,KAAKooC,SACfpoC,KAAKooC,QAAUE,aAAY,WAAQD,EAAK5C,MAAQ,GAAGzlC,KAAKknC,iBAEnDlnC,KAAKuoC,iBACNvoC,KAAKuoC,eAAiBnoC,YAAW,WAC7BioC,EAAK5C,OAIL4C,EAAKE,eAAiBnoC,YAAW,WAGxBioC,EAAKD,SAAWC,EAAK5C,OAG1B4C,EAAKE,eAAiB,IAC1B,GAAGF,EAAKnB,gBACZ,GAAG,MAGCznC,GAASO,KAAKooC,UACtBI,cAAcxoC,KAAKooC,SACnBpoC,KAAKooC,QAAU,KAEvB,GAAC,CAAA5oC,IAAA,kBAAA6qB,IAED,WACI,OAAOrqB,KAAKqlC,gBAChB,EAAC3S,IAED,SAAoBjzB,GAAa,IAAAgpC,EAAA,KAC7B,GAAsB,kBAAXhpC,GAAuBA,GAAS,GAAKmT,SAASlM,OAAOjH,KAAWA,EACvE,MAAM,IAAI4B,MAAM,4BAGpBrB,KAAKqlC,iBAAmB5lC,EAEpBO,KAAKooC,UACLI,cAAcxoC,KAAKooC,SACnBpoC,KAAKooC,QAAUE,aAAY,WAAQG,EAAKhD,MAAQ,GAAGzlC,KAAKqlC,kBAEhE,GAAC,CAAA7lC,IAAA,sBAAAC,MAED,WAAmB,IAAAipC,EAAA,KACTC,EAAMlJ,KAaZ,OAVKkJ,EAAM3oC,KAAKslC,eAAkB,EAAItlC,KAAKqlC,mBACvCrlC,KAAKslC,eAAiBqD,EACtB3oC,KAAKgoC,wBAA0BhoC,KAAK4oC,iBAAiB7nC,MAAK,SAACm7B,GAIvD,OAH6B,MAAzBwM,EAAKX,kBAA4B7L,EAAcwM,EAAKX,oBACpDW,EAAKX,iBAAmB7L,GAErBwM,EAAKX,gBAChB,KAGG/nC,KAAKgoC,uBAChB,GAAC,CAAAxoC,IAAA,sBAAAC,MAED,SAAoBy8B,GAEa,MAAzBl8B,KAAK+nC,kBAA4B7L,EAAcl8B,KAAK+nC,mBAGxD/nC,KAAKslC,eAAiB7F,MAGO,MAAzBz/B,KAAK+nC,kBAA4B7L,EAAcl8B,KAAK+nC,oBACpD/nC,KAAK+nC,iBAAmB7L,EACxBl8B,KAAKgoC,wBAA0BjoC,QAAQH,QAAQs8B,IAEvD,GAAC,CAAA18B,IAAA,qBAAAC,MAEK,SAAmBg9B,EAAyBL,EAAwByM,G,yJAC/D7oC,KAAK8oC,oBAAoBrM,EAAmC,MAAjBL,EAAyB,EAAGA,EAAeyM,GAAW,EAAG,OAAK,wBAAAE,EAAAvoC,OAAA,GAAAwoC,EAAA,S,GACnH,CAAAxpC,IAAA,sBAAAC,MAEK,SAAoBg9B,EAAyBL,EAAuByM,EAAiBI,G,6IACvE,O,SAAMjpC,KAAKynC,sBAAsBhL,GAAgB,OAApD,OAAPI,EAAOqM,EAAArlC,MAGEg5B,EAAQT,cAAe,IAAMA,GAAa,CAAA8M,EAAAxlC,KAAA,eAAAwlC,EAAA3oC,OAAA,SAAWs8B,GAAO,cAAAqM,EAAA3oC,OAAA,SAGpE,IAAIR,SAAQ,SAACH,EAASC,GACzB,IAAMspC,EAAiC,GAEnCnxB,GAAO,EACLoxB,EAAc,WAChB,QAAIpxB,IACJA,GAAO,EACPmxB,EAAYloC,SAAQ,SAAC+F,GAAWA,GAAQ,KACjC,EACX,EAEMqiC,EAAe,SAACxM,GACdA,EAAQT,cAAgBA,GACxBgN,KACJxpC,EAAQi9B,EACZ,EAIA,GAHAyM,EAAK/U,GAAGkI,EAAiB4M,GACzBF,EAAYlpC,MAAK,WAAQqpC,EAAKC,eAAe9M,EAAiB4M,EAAe,IAEzEJ,EAAa,CACb,IAAIO,EAAkBP,EAAYQ,WAC9BC,EAAuB,KACrBC,EAAiB,SAAjBA,EAAwBzN,GAAmB,OAAIptB,GAAAw6B,OAAA,UAAAv6B,EAAAA,EAAAA,KAAAC,MAAA,SAAA46B,IAAA,IAAAC,EAAA,YAAA96B,EAAAA,EAAAA,KAAAI,MAAA,SAAA26B,GAAA,cAAAA,EAAAz6B,KAAAy6B,EAAApmC,MAAA,WAC7CsU,EAAM,CAAF8xB,EAAApmC,KAAA,eAAAomC,EAAAvpC,OAAA,iBAKR,OALQupC,EAAApmC,KAAA,EAKFi8B,GAAM,KAAK,OAEjB3/B,KAAKkN,oBAAoB+7B,EAAYv6B,MAAM3N,MAAK,SAAOgP,GAAK,OAAIjB,GAAA+6B,OAAA,UAAA96B,EAAAA,EAAAA,KAAAC,MAAA,SAAA+6B,IAAA,IAAAC,EAAAr3B,EAAAs3B,EAAA58B,EAAA68B,EAAApd,EAAA,OAAA/d,EAAAA,EAAAA,KAAAI,MAAA,SAAAg7B,GAAA,cAAAA,EAAA96B,KAAA86B,EAAAzmC,MAAA,WACxDsU,EAAM,CAAFmyB,EAAAzmC,KAAA,eAAAymC,EAAA5pC,OAAA,sBAEJwP,GAASk5B,EAAYl5B,OAAK,CAAAo6B,EAAAzmC,KAAA,QAC1B8lC,EAAkBtN,EAAYiO,EAAAzmC,KAAA,gBAKZ,OALYymC,EAAAzmC,KAAA,EAKN1D,KAAKoqC,eAAe3N,GAAgB,OAA7C,KAALuN,EAAKG,EAAAtmC,OACuB,MAArBmmC,EAAM9N,YAAmB,CAAAiO,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,kBAOtB,MAAhBmpC,IACAA,EAAeF,EAAkB,GACdP,EAAYQ,aAC3BC,EAAeT,EAAYQ,YAElC,aAEMC,GAAgBxN,GAAW,CAAAiO,EAAAzmC,KAAA,aAC1BsU,EAAM,CAAFmyB,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,kBAEM,OAFN4pC,EAAAzmC,KAAA,GAEY1D,KAAKqqC,yBAAyBX,GAAa,QAAzD/2B,EAAKw3B,EAAAtmC,KACFomC,EAAK,EAAC,aAAEA,EAAKt3B,EAAMgrB,aAAax+B,QAAM,CAAAgrC,EAAAzmC,KAAA,SAG3C,IAFM2J,EAAKsF,EAAMgrB,aAAasM,IAGvBtyB,OAAS8kB,EAAe,CAAA0N,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,qBAG3B8M,EAAGqB,OAASu6B,EAAYv6B,MAAQrB,EAAG0C,QAAUk5B,EAAYl5B,MAAK,CAAAo6B,EAAAzmC,KAAA,aAC1DsU,EAAM,CAAFmyB,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,kBAGQ,OAHR4pC,EAAAzmC,KAAA,GAGc1D,KAAKsqC,mBAAmBj9B,EAAGsK,KAAMykB,GAAc,QAAxD,GAAPS,EAAOsN,EAAAtmC,MAGTulC,IAAe,CAAFe,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,kBAiBb,OAdAusB,EAAS,WACTzf,EAAG7L,OAASynC,EAAYznC,MAAQ6L,EAAGwB,KAAOo6B,EAAYp6B,IAAMxB,EAAG5N,MAAM+f,GAAGypB,EAAYxpC,OACpFqtB,EAAS,WACW,OAAZzf,EAAG7L,MAAiB6L,EAAGqB,OAASrB,EAAGwB,IAAMxB,EAAG5N,MAAM6zB,WAC1DxG,EAAS,aAIbjtB,EAAOgH,GAAOugC,UAAU,2BAA4BtgC,EAAAA,GAAO0F,OAAO+9B,qBAAsB,CACpFC,UAAuB,aAAX1d,GAAoC,cAAXA,EACrCA,OAAAA,EACA2d,YAAazqC,KAAK0qC,iBAAiBr9B,GACnCsK,KAAM8kB,EACNI,QAAAA,KACAsN,EAAA5pC,OAAA,kBA/BqC0pC,IAAIE,EAAAzmC,KAAA,iBAoCrDgmC,IAAeS,EAAAzmC,KAAA,qBAInBsU,EAAM,CAAFmyB,EAAAzmC,KAAA,gBAAAymC,EAAA5pC,OAAA,kBACRP,KAAKggC,KAAK,QAAS2J,GAAgB,yBAAAQ,EAAA3pC,OAAA,GAAAupC,EAAA,SAEtC,IAAE,SAAC3oC,GACI4W,GACJ6xB,EAAK7J,KAAK,QAAS2J,EACvB,IAAG,wBAAAG,EAAAtpC,OAAA,GAAAopC,EAAA,SACN,EAED,GAAI5xB,EAAQ,OACZsxB,EAAKtJ,KAAK,QAAS2J,GAEnBR,EAAYlpC,MAAK,WACbqpC,EAAKC,eAAe,QAASI,EACjC,G,CAGJ,GAAwB,kBAAbd,GAAyBA,EAAU,EAAG,CAC7C,IAAM8B,EAAQvqC,YAAW,WACjBgpC,KACJvpC,EAAOgH,GAAOugC,UAAU,mBAAoBtgC,EAAAA,GAAO0F,OAAOo+B,QAAS,CAAE/B,QAASA,IAClF,GAAGA,GACC8B,EAAME,OAASF,EAAME,QAEzB1B,EAAYlpC,MAAK,WAAQU,aAAagqC,EAAQ,G,CAEtD,KAAE,wBAAAzB,EAAA1oC,OAAA,GAAAsqC,EAAA,S,GACL,CAAAtrC,IAAA,iBAAAC,MAEK,W,yJACKO,KAAKinC,wBAAwB,IAAE,wBAAA8D,EAAAvqC,OAAA,GAAAwqC,EAAA,S,GACzC,CAAAxrC,IAAA,cAAAC,MAEK,W,sIACF,O,SAAMO,KAAKsF,aAAY,OAER,OAFQ2lC,EAAAvnC,KAAA,EAEF1D,KAAK4mC,QAAQ,cAAe,CAAC,GAAG,OAAzC,OAAN5lC,EAAMiqC,EAAApnC,KAAAonC,EAAA57B,KAAG,EAAH47B,EAAA1qC,OAAA,SAED8S,EAAAA,GAAU3E,KAAK1N,IAAO,cAAAiqC,EAAA57B,KAAA,EAAA47B,EAAAnzB,GAAAmzB,EAAA,SAAAA,EAAA1qC,OAAA,SAEtBsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,cACRjD,OAAAA,EAAQI,MAAK6pC,EAAAnzB,MACf,yBAAAmzB,EAAAzqC,OAAA,GAAA0qC,EAAA,iB,GAET,CAAA1rC,IAAA,aAAAC,MAEK,SAAW0rC,EAAyCr+B,G,wIACtD,O,SAAM9M,KAAKsF,aAAY,OACR,OADQ8lC,EAAA1nC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CACnCsE,QAASlP,KAAK0iC,YAAYyI,GAC1Br+B,SAAU9M,KAAKqrC,aAAav+B,KAC9B,OAEa,OALT5I,EAAMknC,EAAAvnC,KAAAunC,EAAA1nC,KAAG,EAKM1D,KAAK4mC,QAAQ,aAAc1iC,GAAO,OAA3C,OAANlD,EAAMoqC,EAAAvnC,KAAAunC,EAAA/7B,KAAG,EAAH+7B,EAAA7qC,OAAA,SAED8S,EAAAA,GAAU3E,KAAK1N,IAAO,eAAAoqC,EAAA/7B,KAAA,GAAA+7B,EAAAtzB,GAAAszB,EAAA,SAAAA,EAAA7qC,OAAA,SAEtBsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,aACRC,OAAAA,EAAQlD,OAAAA,EAAQI,MAAKgqC,EAAAtzB,MACvB,yBAAAszB,EAAA5qC,OAAA,GAAA8qC,EAAA,kB,GAET,CAAA9rC,IAAA,sBAAAC,MAEK,SAAoB0rC,EAAyCr+B,G,wIAC/D,O,SAAM9M,KAAKsF,aAAY,OACR,OADQimC,EAAA7nC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CACnCsE,QAASlP,KAAK0iC,YAAYyI,GAC1Br+B,SAAU9M,KAAKqrC,aAAav+B,KAC9B,OAEa,OALT5I,EAAMqnC,EAAA1nC,KAAA0nC,EAAA7nC,KAAG,EAKM1D,KAAK4mC,QAAQ,sBAAuB1iC,GAAO,OAApD,OAANlD,EAAMuqC,EAAA1nC,KAAA0nC,EAAAl8B,KAAG,EAAHk8B,EAAAhrC,OAAA,SAED8S,EAAAA,GAAU3E,KAAK1N,GAAQoyB,YAAU,eAAAmY,EAAAl8B,KAAA,GAAAk8B,EAAAzzB,GAAAyzB,EAAA,SAAAA,EAAAhrC,OAAA,SAEjCsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,sBACRC,OAAAA,EAAQlD,OAAAA,EAAQI,MAAKmqC,EAAAzzB,MACvB,yBAAAyzB,EAAA/qC,OAAA,GAAAgrC,EAAA,kB,GAET,CAAAhsC,IAAA,UAAAC,MAEK,SAAQ0rC,EAAyCr+B,G,wIACnD,O,SAAM9M,KAAKsF,aAAY,OACR,OADQmmC,EAAA/nC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CACnCsE,QAASlP,KAAK0iC,YAAYyI,GAC1Br+B,SAAU9M,KAAKqrC,aAAav+B,KAC9B,OAEa,OALT5I,EAAMunC,EAAA5nC,KAAA4nC,EAAA/nC,KAAG,EAKM1D,KAAK4mC,QAAQ,UAAW1iC,GAAO,OAAxC,OAANlD,EAAMyqC,EAAA5nC,KAAA4nC,EAAAp8B,KAAG,EAAHo8B,EAAAlrC,OAAA,UAEDwQ,EAAAA,EAAAA,IAAQ/P,IAAO,eAAAyqC,EAAAp8B,KAAA,GAAAo8B,EAAA3zB,GAAA2zB,EAAA,SAAAA,EAAAlrC,OAAA,SAEfsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,UACRC,OAAAA,EAAQlD,OAAAA,EAAQI,MAAKqqC,EAAA3zB,MACvB,yBAAA2zB,EAAAjrC,OAAA,GAAAkrC,EAAA,kB,GAET,CAAAlsC,IAAA,eAAAC,MAEK,SAAa0rC,EAAyCQ,EAAgD7+B,G,wIACxG,O,SAAM9M,KAAKsF,aAAY,OACR,OADQsmC,EAAAloC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CACnCsE,QAASlP,KAAK0iC,YAAYyI,GAC1Br+B,SAAU9M,KAAKqrC,aAAav+B,GAC5B6+B,SAAU5rC,QAAQH,QAAQ+rC,GAAU5qC,MAAK,SAAC+a,GAAC,OAAKuiB,EAAAA,EAAAA,IAASviB,EAAE,MAC7D,OACa,OALT5X,EAAM0nC,EAAA/nC,KAAA+nC,EAAAloC,KAAG,EAKM1D,KAAK4mC,QAAQ,eAAgB1iC,GAAO,OAA7C,OAANlD,EAAM4qC,EAAA/nC,KAAA+nC,EAAAv8B,KAAG,EAAHu8B,EAAArrC,OAAA,UAEDwQ,EAAAA,EAAAA,IAAQ/P,IAAO,eAAA4qC,EAAAv8B,KAAA,GAAAu8B,EAAA9zB,GAAA8zB,EAAA,SAAAA,EAAArrC,OAAA,SAEfsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,eACRC,OAAAA,EAAQlD,OAAAA,EAAQI,MAAKwqC,EAAA9zB,MACvB,yBAAA8zB,EAAAprC,OAAA,GAAAqrC,EAAA,kB,GAIV,CAAArsC,IAAA,mBAAAC,MACA,SAAiB4N,EAAiBsK,EAAe8xB,GAAmB,IAAAqC,EAAA,KAChE,GAAY,MAARn0B,GAAwC,MAAxBmZ,EAAAA,EAAAA,IAAcnZ,GAAgB,MAAM,IAAItW,MAAM,sCAElE,IAAML,EAA8BqM,EAwCpC,OArCY,MAARsK,GAAgBtK,EAAGsK,OAASA,GAC5B9Q,GAAO+I,WAAW,2DAA4D9I,EAAAA,GAAO0F,OAAOg5B,cAAe,CAAEuG,aAAc1+B,EAAGsK,KAAMq0B,aAAcr0B,IAGtJ3W,EAAOirC,KAAO,SAAOC,EAAmBrD,GAAgB,OAAI/5B,GAAAg9B,OAAA,UAAA/8B,EAAAA,EAAAA,KAAAC,MAAA,SAAAm9B,IAAA,IAAA1B,EAAA5N,EAAA,OAAA9tB,EAAAA,EAAAA,KAAAI,MAAA,SAAAi9B,GAAA,cAAAA,EAAA/8B,KAAA+8B,EAAA1oC,MAAA,OAiBxC,OAhBA,MAAZwoC,IAAoBA,EAAW,GACpB,MAAXrD,IAAmBA,EAAU,GAG7B4B,OAAcrrC,EACD,IAAb8sC,GAAgC,MAAdzC,IAClBgB,EAAc,CACVjpC,KAAM6L,EAAG7L,KACTkN,KAAMrB,EAAGqB,KACTqB,MAAO1C,EAAG0C,MACVlB,GAAIxB,EAAGwB,GACPpP,MAAO4N,EAAG5N,MACVgqC,WAAAA,IAEP2C,EAAA1oC,KAAA,EAEqB1D,KAAK8oC,oBAAoBz7B,EAAGsK,KAAMu0B,EAAUrD,EAAS4B,GAAY,OAA1E,GACE,OADT5N,EAAOuP,EAAAvoC,OACuB,IAAbqoC,EAAc,CAAAE,EAAA1oC,KAAA,eAAA0oC,EAAA7rC,OAAA,SAAW,MAAI,OAWnD,OARDP,KAAK2kC,SAAS,KAAOt3B,EAAGsK,MAAQklB,EAAQX,YAEjB,IAAnBW,EAAQQ,QACRx2B,GAAO+I,WAAW,qBAAsB9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CAClEpF,gBAAiBpvB,EAAGsK,KACpBxK,YAAaE,EACbwvB,QAASA,IAEhBuP,EAAA7rC,OAAA,SACMs8B,GAAO,yBAAAuP,EAAA5rC,OAAA,GAAA2rC,EAAA,SACjB,EAEMnrC,CACX,GAAC,CAAAxB,IAAA,kBAAAC,MAEK,SAAgB4sC,G,4IAClB,O,SAAMrsC,KAAKsF,aAAY,OACT,OADSgnC,EAAA5oC,KAAA,EACH3D,QAAQH,QAAQysC,GAAmBtrC,MAAK,SAAAkV,GAAC,OAAIlF,EAAAA,EAAAA,IAAQkF,EAAE,IAAC,OAGxD,OAHds2B,EAAKD,EAAAzoC,KAEa,OADlBwJ,EAAKrN,KAAK2hC,UAAUx0B,YAAYk/B,IAC/BjQ,gBAAyB/uB,EAAG+uB,cAAgB,GAAIkQ,EAAA5oC,KAAA,EAC7B1D,KAAKinC,wBAAwB,IAAM,EAAIjnC,KAAKknC,iBAAgB,OAErE,OAFXhL,EAAWoQ,EAAAzoC,KAAAyoC,EAAAj9B,KAAG,GAAHi9B,EAAA5oC,KAAG,GAEG1D,KAAK4mC,QAAQ,kBAAmB,CAAEyF,kBAAmBE,IAAQ,QAAtE,OAAJ50B,EAAI20B,EAAAzoC,KAAAyoC,EAAA/rC,OAAA,SACHP,KAAK0qC,iBAAiBr9B,EAAIsK,EAAMukB,IAAY,QAGZ,MAHYoQ,EAAAj9B,KAAA,GAAAi9B,EAAAx0B,GAAAw0B,EAAA,UAE7CA,EAAAx0B,GAAO3K,YAAcE,EACrBi/B,EAAAx0B,GAAO2kB,gBAAkBpvB,EAAGsK,KAAK20B,EAAAx0B,GAAA,yBAAAw0B,EAAA9rC,OAAA,GAAAgsC,EAAA,mB,GAG9C,CAAAhtC,IAAA,yBAAAC,MAEK,SAAuB0N,G,+IACL,O,SAAMA,EAAW,OA4BI,OA5BnC3H,EAAMinC,EAAA5oC,KAENwJ,EAAU,CAAC,EAEjB,CAAC,OAAQ,MAAMpM,SAAQ,SAACzB,GACD,MAAfgG,EAAOhG,KACX6N,EAAG7N,GAAOO,QAAQH,QAAQ4F,EAAOhG,IAAMuB,MAAK,SAACgK,GAAC,OAAMA,EAAI2hC,EAAKhK,YAAY33B,GAAI,IAAI,IACrF,IAEA,CAAC,WAAY,WAAY,eAAgB,uBAAwB,SAAS9J,SAAQ,SAACzB,GAC5D,MAAfgG,EAAOhG,KACX6N,EAAG7N,GAAOO,QAAQH,QAAQ4F,EAAOhG,IAAMuB,MAAK,SAACgK,GAAC,OAAMA,EAAIsI,EAAAA,GAAU3E,KAAK3D,GAAI,IAAI,IACnF,IAEA,CAAC,QAAQ9J,SAAQ,SAACzB,GACK,MAAfgG,EAAOhG,KACX6N,EAAG7N,GAAOO,QAAQH,QAAQ4F,EAAOhG,IAAMuB,MAAK,SAACgK,GAAC,OAAY,MAALA,EAAaA,EAAG,IAAI,IAC7E,IAEIvF,EAAOstB,aACPzlB,EAAGylB,WAAa9yB,KAAK2hC,UAAU7O,WAAWttB,EAAOstB,aAGrD,CAAC,QAAQ7xB,SAAQ,SAACzB,GACK,MAAfgG,EAAOhG,KACX6N,EAAG7N,GAAOO,QAAQH,QAAQ4F,EAAOhG,IAAMuB,MAAK,SAACgK,GAAC,OAAMA,GAAIgG,EAAAA,EAAAA,IAAQhG,GAAI,IAAI,IAC5E,IAAG0hC,EAAA30B,GAEI9X,KAAK2hC,UAAS8K,EAAA/oC,KAAA,IAA0BkH,EAAAA,EAAAA,IAAkByC,GAAG,eAAAo/B,EAAA10B,GAAA00B,EAAA5oC,KAAA4oC,EAAAlsC,OAAA,SAAAksC,EAAA30B,GAA9CykB,mBAAkB15B,KAAA4pC,EAAA30B,GAAA20B,EAAA10B,KAAA,yBAAA00B,EAAAjsC,OAAA,GAAAmsC,EAAA,S,GAC3C,CAAAntC,IAAA,aAAAC,MAEK,SAAWsW,G,6IACJ,O,SAAMA,EAAM,OAkBQ,OAlB7BA,EAAM62B,EAAA/oC,KAEA7C,EAAc,CAAC,EAEC,MAAlB+U,EAAO7G,UACPlO,EAAOkO,QAAUlP,KAAK0iC,YAAY3sB,EAAO7G,UAG7C,CAAC,YAAa,UAAUjO,SAAQ,SAACzB,GACH,MAAhBuW,EAAQvW,KAClBwB,EAAOxB,GAAauW,EAAQvW,GAChC,IAEA,CAAC,YAAa,WAAWyB,SAAQ,SAACzB,GACJ,MAAhBuW,EAAQvW,KAClBwB,EAAOxB,GAAOqtC,EAAKxB,aAAmBt1B,EAAQvW,IAClD,IAAGotC,EAAA90B,GAEI9X,KAAK2hC,UAASiL,EAAAlpC,KAAA,IAAckH,EAAAA,EAAAA,IAAkB5J,GAAO,eAAA4rC,EAAA70B,GAAA60B,EAAA/oC,KAAA+oC,EAAArsC,OAAA,SAAAqsC,EAAA90B,GAAtC/B,OAAMlT,KAAA+pC,EAAA90B,GAAA80B,EAAA70B,KAAA,yBAAA60B,EAAApsC,OAAA,GAAAssC,EAAA,S,GAC/B,CAAAttC,IAAA,QAAAC,MAEK,SAAM0N,EAAiCL,EAAoBigC,G,kKAS9C,OARXA,GApkDe,IAqkDflmC,GAAO+I,WAAW,0CAA2C9I,EAAAA,GAAO0F,OAAO65B,aAAc,CACrF2G,UAAWD,EAAS5/B,YAAAA,IAItB8/B,EAAW9/B,EAAY0B,GAAEq+B,EAAAxpC,KAAA,EAEV1D,KAAK4mC,QAAQ,OAAQ,CAAEz5B,YAAAA,EAAaL,SAAAA,IAAW,OAAxD,GAAN9L,EAAMksC,EAAArpC,OAGRkpC,GAAW,GAAkB,WAAbjgC,GAAqC,MAAZmgC,GAAgD,eAA5BjsC,EAAO2Q,UAAU,EAAG,MAAyBmf,EAAAA,EAAAA,IAAc9vB,GAAU,KAAO,GAAE,CAAAksC,EAAAxpC,KAAA,SAmBvI,IAnBuIwpC,EAAA79B,KAAA,EAEjI7N,GAAOswB,EAAAA,EAAAA,IAAa9wB,EAAQ,GAG5B8kC,GAAShU,EAAAA,EAAAA,IAAatwB,EAAM,EAAG,IAChC6R,EAAAA,GAAU3E,KAAKo3B,GAAQtmB,GAAGytB,IAC3BpmC,GAAO+I,WAAW,iCAAkC9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CAC9El6B,KAAM,iBACNylB,UAAW,sDACXjgB,YAAAA,EAAa3L,KAAMR,IAKrB6kC,EAAsB,GACtBsH,EAAa95B,EAAAA,GAAU3E,MAAKojB,EAAAA,EAAAA,IAAatwB,EAAM,GAAI,KAAK4xB,WACxDga,EAAa/5B,EAAAA,GAAU3E,MAAKojB,EAAAA,EAAAA,IAAatwB,EAAM2rC,EAAYA,EAAa,KAAK/Z,WAC7Eia,GAAWvb,EAAAA,EAAAA,IAAatwB,EAAM2rC,EAAa,IACxC1pB,EAAI,EAAGA,EAAI2pB,EAAY3pB,IAEjB,OADLjhB,EAAMs+B,GAAauM,EAAc,GAAJ5pB,KAE/B5c,GAAO+I,WAAW,yCAA0C9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CACtFl6B,KAAM,iBACNylB,UAAW,sDACXjgB,YAAAA,EAAa3L,KAAMR,IAG3B6kC,EAAK5lC,KAAKuC,GAmBK,OAfbojC,EAAW5E,GAAYx/B,EAAM,IAG9B6R,EAAAA,GAAU3E,MAAKojB,EAAAA,EAAAA,IAAatwB,EAAM,IAAK,MAAM8xB,UAC9CzsB,GAAO+I,WAAW,4CAA6C9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CACzFl6B,KAAM,iBACNylB,UAAW,sDACXjgB,YAAAA,EAAa3L,KAAMR,IAGrBssC,GAAmBxb,EAAAA,EAAAA,IAAatwB,EAAM,GAAI,KAG1Ck8B,EAAYsD,GAAYx/B,EAAM,KAAI0rC,EAAAxpC,KAAA,GAEf1D,KAAKutC,cAA2BpgC,EAAay4B,EAAUC,GAAK,QAYpF,OAXiB,OADZ2H,EAAUN,EAAArpC,OAEZgD,GAAO+I,WAAW,yCAA0C9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CACtFl6B,KAAM,iBACNylB,UAAW,sDACXjgB,YAAAA,EAAa3L,KAAMR,IAIrBqM,EAAK,CACPwB,GAAIo+B,EACJzrC,MAAMwT,EAAAA,EAAAA,IAAU,CAAEs4B,EAAkBhM,GAAY,CAAEkM,EAAY9P,OACjEwP,EAAA3sC,OAAA,SAEMP,KAAKytC,MAAMpgC,EAAIP,EAAUigC,EAAU,IAAE,WAAAG,EAAA79B,KAAA,GAAA69B,EAAAp1B,GAAAo1B,EAAA,SAGxCA,EAAAp1B,GAAMvW,OAASuF,EAAAA,GAAO0F,OAAO65B,aAAY,CAAA6G,EAAAxpC,KAAA,eAAAwpC,EAAAp1B,GAAA,eAAAo1B,EAAA79B,KAAA,GAAA69B,EAAA3sC,OAAA,UAK1CwQ,EAAAA,EAAAA,IAAQ/P,IAAO,eAAAksC,EAAA79B,KAAA,GAAA69B,EAAAn1B,GAAAm1B,EAAA,UAAAA,EAAA3sC,OAAA,SAEfsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,OACRC,OAAQ,CAAEiJ,YAAAA,EAAaL,SAAAA,GAAY9L,OAAAA,EAAQI,MAAK8rC,EAAAn1B,MAClD,yBAAAm1B,EAAA1sC,OAAA,GAAAktC,EAAA,0B,GAGT,CAAAluC,IAAA,OAAAC,MAEK,SAAK0N,EAA6CL,G,sIACpD,O,SAAM9M,KAAKsF,aAAY,OACN,OADMqoC,EAAAjqC,KAAA,GACAkH,EAAAA,EAAAA,IAAkB,CACrCuC,YAAanN,KAAK4tC,uBAAuBzgC,GACzCL,SAAU9M,KAAKqrC,aAAav+B,GAC5Bk1B,gBAAiBjiC,QAAQH,QAAQuN,EAAY60B,mBAC/C,OAJY,OAAR6L,EAAQF,EAAA9pC,KAAA8pC,EAAAptC,OAAA,SAKPP,KAAKytC,MAAMI,EAAS1gC,YAAa0gC,EAAS/gC,SAAU+gC,EAAS7L,gBAAkB,GAAI,IAAE,wBAAA2L,EAAAntC,OAAA,GAAAstC,EAAA,S,GAC/F,CAAAtuC,IAAA,cAAAC,MAEK,SAAY0N,G,wIACd,O,SAAMnN,KAAKsF,aAAY,OACR,OADQyoC,EAAArqC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CACnCuC,YAAanN,KAAK4tC,uBAAuBzgC,KAC3C,OAEa,OAJTjJ,EAAM6pC,EAAAlqC,KAAAkqC,EAAArqC,KAAG,EAIM1D,KAAK4mC,QAAQ,cAAe1iC,GAAO,OAA5C,OAANlD,EAAM+sC,EAAAlqC,KAAAkqC,EAAA1+B,KAAG,EAAH0+B,EAAAxtC,OAAA,SAED8S,EAAAA,GAAU3E,KAAK1N,IAAO,eAAA+sC,EAAA1+B,KAAA,GAAA0+B,EAAAj2B,GAAAi2B,EAAA,SAAAA,EAAAxtC,OAAA,SAEtBsG,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC5EpiC,OAAQ,cACRC,OAAAA,EAAQlD,OAAAA,EAAQI,MAAK2sC,EAAAj2B,MACvB,yBAAAi2B,EAAAvtC,OAAA,GAAAwtC,EAAA,kB,GAET,CAAAxuC,IAAA,cAAAC,MAEK,SAAY0rC,G,sIACE,O,SAAMA,EAAa,OAKnB,MAJc,kBAD9BA,EAAa8C,EAAApqC,OAETgD,GAAOmD,mBAAmB,8BAA+B,OAAQmhC,GACpE8C,EAAAvqC,KAAA,EAEqB1D,KAAKwO,YAAY28B,GAAc,OAKpD,OAJc,OADTj8B,EAAO++B,EAAApqC,OAETgD,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CAC9EC,UAAW,eAAF1K,OAAkB9B,KAAKC,UAAU4nC,GAAe,OAEhE8C,EAAA1tC,OAAA,SACM2O,GAAO,wBAAA++B,EAAAztC,OAAA,GAAA0tC,EAAA,S,GACjB,CAAA1uC,IAAA,YAAAC,MAEK,SAAU0uC,EAAqEC,G,+IACjF,O,SAAMpuC,KAAKsF,aAAY,OAED,OAFC+oC,EAAA3qC,KAAA,EAEKyqC,EAAmB,OAO9C,GAPDA,EAAmBE,EAAAxqC,KAGfq4B,GAAe,IAEbh4B,EAAiC,CACnCkqC,sBAAuBA,KAGvB38B,EAAAA,EAAAA,IAAY08B,EAAqB,IAAK,CAAFE,EAAA3qC,KAAA,SACpCQ,EAAO+3B,UAAYkS,EAAoBE,EAAA3qC,KAAA,iBAGjB,OAHiB2qC,EAAAh/B,KAAA,GAAAg/B,EAAA3qC,KAAA,GAGX1D,KAAKqrC,aAAa8C,GAAoB,QAA9DjqC,EAAO4I,SAAQuhC,EAAAxqC,MACX4N,EAAAA,EAAAA,IAAYvN,EAAO4I,YACnBovB,EAActpB,SAAS1O,EAAO4I,SAAS6E,UAAU,GAAI,KACxD08B,EAAA3qC,KAAA,iBAAA2qC,EAAAh/B,KAAA,GAAAg/B,EAAAv2B,GAAAu2B,EAAA,UAEDxnC,GAAOmD,mBAAmB,kCAAmC,sBAAuBmkC,GAAqB,eAAAE,EAAA9tC,OAAA,UAI1GklC,EAAAA,GAAAA,KAAK,kBAAW32B,GAAAw/B,OAAA,UAAAv/B,EAAAA,EAAAA,KAAAC,MAAA,SAAAu/B,IAAA,IAAA57B,EAAA67B,EAAAloC,EAAA+G,EAAA+uB,EAAAqS,EAAAC,EAAA,YAAA3/B,EAAAA,EAAAA,KAAAI,MAAA,SAAAw/B,GAAA,cAAAA,EAAAt/B,KAAAs/B,EAAAjrC,MAAA,OACL,OADKirC,EAAAjrC,KAAA,EACC1D,KAAK4mC,QAAQ,WAAY1iC,GAAO,OAAzC,GAGE,OAHPyO,EAAKg8B,EAAA9qC,MAGM,CAAA8qC,EAAAjrC,KAAA,YAKW,MAApBQ,EAAO+3B,UAAiB,CAAA0S,EAAAjrC,KAAA,WACsB,MAA1C1D,KAAK2kC,SAAS,KAAOzgC,EAAO+3B,WAAkB,CAAA0S,EAAAjrC,KAAA,eAAAirC,EAAApuC,OAAA,SAAW,MAAI,UAI9C,MAAnB2D,EAAO4I,SAAgB,CAAA6hC,EAAAjrC,KAAA,cACnBw4B,EAAcl8B,KAAK2kC,SAAShyB,OAAK,CAAAg8B,EAAAjrC,KAAA,gBAAAirC,EAAApuC,OAAA,SAAW,MAAI,eAAAouC,EAAApuC,OAAA,cAIjDnB,GAAS,YAIhBgvC,EAAqB,CAAFO,EAAAjrC,KAAA,SACfw4B,EAAsB,KACjB51B,EAAI,EAAC,aAAEA,EAAIqM,EAAMgrB,aAAax+B,QAAM,CAAAwvC,EAAAjrC,KAAA,SACT,GACV,OADhB2J,EAAKsF,EAAMgrB,aAAar3B,IACvB41B,YAAmB,CAAAyS,EAAAjrC,KAAA,SACtB2J,EAAG+uB,cAAgB,EAAEuS,EAAAjrC,KAAA,oBAEM,MAApB2J,EAAG+uB,cAAqB,CAAAuS,EAAAjrC,KAAA,YACZ,MAAfw4B,EAAmB,CAAAyS,EAAAjrC,KAAA,SACL,OADKirC,EAAAjrC,KAAA,GACC1D,KAAKinC,wBAAwB,IAAM,EAAIjnC,KAAKknC,iBAAgB,QAAhFhL,EAAWyS,EAAA9qC,KAAA,SAIXu4B,EAAiBF,EAAc7uB,EAAG6uB,YAAe,IAChC,IAAKE,EAAgB,GAC1C/uB,EAAG+uB,cAAgBA,EAAc,QAbM91B,IAAGqoC,EAAAjrC,KAAA,iBAkBgE,OAD5G+qC,EAAoBzuC,KAAK2hC,UAAU/D,sBAAsBjrB,IAClDgrB,aAAe8Q,EAAa9Q,aAAa/8B,KAAI,SAACyM,GAAuB,OAAKqhC,EAAKhE,iBAAiBr9B,EAAG,IAAEshC,EAAApuC,OAAA,SAC3GkuC,GAAY,eAAAE,EAAApuC,OAAA,SAGhBP,KAAK2hC,UAAUhvB,MAAMA,IAAM,yBAAAg8B,EAAAnuC,OAAA,GAAA+tC,EAAA,SAErC,GAAE,CAAEK,SAAU5uC,QAAO,yBAAAquC,EAAA7tC,OAAA,GAAAquC,EAAA,mB,GACzB,CAAArvC,IAAA,WAAAC,MAED,SAAS0uC,GACL,OAAwBnuC,KAAK8uC,UAAUX,GAAqB,EAChE,GAAC,CAAA3uC,IAAA,2BAAAC,MAED,SAAyB0uC,GACrB,OAAwCnuC,KAAK8uC,UAAUX,GAAqB,EAChF,GAAC,CAAA3uC,IAAA,iBAAAC,MAEK,SAAeg9B,G,6IACjB,O,SAAMz8B,KAAKsF,aAAY,OACL,OADKypC,EAAArrC,KAAA,EACC+4B,EAAe,OAEuC,OAF9EA,EAAesS,EAAAlrC,KAETK,EAAS,CAAEu4B,gBAAiBz8B,KAAK2hC,UAAUhqB,KAAK8kB,GAAiB,IAAOsS,EAAAxuC,OAAA,UAEvEklC,EAAAA,GAAAA,KAAK,kBAAW32B,GAAAkgC,OAAA,UAAAjgC,EAAAA,EAAAA,KAAAC,MAAA,SAAAigC,IAAA,IAAAjuC,EAAAqM,EAAA6uB,EAAAE,EAAA,OAAArtB,EAAAA,EAAAA,KAAAI,MAAA,SAAA+/B,GAAA,cAAAA,EAAA7/B,KAAA6/B,EAAAxrC,MAAA,OACJ,OADIwrC,EAAAxrC,KAAA,EACE1D,KAAK4mC,QAAQ,iBAAkB1iC,GAAO,OAA/C,GAEE,OAFRlD,EAAMkuC,EAAArrC,MAEM,CAAAqrC,EAAAxrC,KAAA,WAC+B,MAAzC1D,KAAK2kC,SAAS,KAAOlI,GAAwB,CAAAyS,EAAAxrC,KAAA,eAAAwrC,EAAA3uC,OAAA,SACtC,MAAI,cAAA2uC,EAAA3uC,OAAA,cAERnB,GAAS,OAGiC,GAE/B,OAFhBiO,EAAKrN,KAAK2hC,UAAU9D,oBAAoB78B,IAEvCk7B,YAAmB,CAAAgT,EAAAxrC,KAAA,SACtB2J,EAAG+uB,cAAgB,EAAE8S,EAAAxrC,KAAA,oBAEM,MAApB2J,EAAG+uB,cAAqB,CAAA8S,EAAAxrC,KAAA,SACX,OADWwrC,EAAAxrC,KAAA,GACL1D,KAAKinC,wBAAwB,IAAM,EAAIjnC,KAAKknC,iBAAgB,QAAhFhL,EAAWgT,EAAArrC,MAGbu4B,EAAiBF,EAAc7uB,EAAG6uB,YAAe,IAChC,IAAKE,EAAgB,GAC1C/uB,EAAG+uB,cAAgBA,EAAc,eAAA8S,EAAA3uC,OAAA,SAG9BP,KAAK0qC,iBAAiBr9B,IAAG,yBAAA6hC,EAAA1uC,OAAA,GAAAyuC,EAAA,SACnC,GAAE,CAAEL,SAAU5uC,QAAO,wBAAA+uC,EAAAvuC,OAAA,GAAA2uC,EAAA,S,GACzB,CAAA3vC,IAAA,wBAAAC,MAEK,SAAsBg9B,G,6IACxB,O,SAAMz8B,KAAKsF,aAAY,OAEL,OAFK8pC,EAAA1rC,KAAA,EAEC+4B,EAAe,OAEuC,OAF9EA,EAAe2S,EAAAvrC,KAETK,EAAS,CAAEu4B,gBAAiBz8B,KAAK2hC,UAAUhqB,KAAK8kB,GAAiB,IAAO2S,EAAA7uC,OAAA,UAEvEklC,EAAAA,GAAAA,KAAK,kBAAW32B,GAAAugC,OAAA,UAAAtgC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsgC,IAAA,IAAAtuC,EAAA67B,EAAAX,EAAAE,EAAA,OAAArtB,EAAAA,EAAAA,KAAAI,MAAA,SAAAogC,GAAA,cAAAA,EAAAlgC,KAAAkgC,EAAA7rC,MAAA,OACJ,OADI6rC,EAAA7rC,KAAA,EACE1D,KAAK4mC,QAAQ,wBAAyB1iC,GAAO,OAAtD,GAEE,OAFRlD,EAAMuuC,EAAA1rC,MAEM,CAAA0rC,EAAA7rC,KAAA,WAC+B,MAAzC1D,KAAK2kC,SAAS,KAAOlI,GAAwB,CAAA8S,EAAA7rC,KAAA,eAAA6rC,EAAAhvC,OAAA,SACtC,MAAI,cAAAgvC,EAAAhvC,OAAA,cAERnB,GAAS,UAII,MAApB4B,EAAOi7B,UAAiB,CAAAsT,EAAA7rC,KAAA,eAAA6rC,EAAAhvC,OAAA,cAAWnB,GAAS,OAEF,GAEnB,OAFrBy9B,EAAU78B,KAAK2hC,UAAU9E,QAAQ77B,IAE3Bk7B,YAAmB,CAAAqT,EAAA7rC,KAAA,SAC3Bm5B,EAAQT,cAAgB,EAAEmT,EAAA7rC,KAAA,oBAEM,MAAzBm5B,EAAQT,cAAqB,CAAAmT,EAAA7rC,KAAA,SAChB,OADgB6rC,EAAA7rC,KAAA,GACV1D,KAAKinC,wBAAwB,IAAM,EAAIjnC,KAAKknC,iBAAgB,QAAhFhL,EAAWqT,EAAA1rC,MAGbu4B,EAAiBF,EAAcW,EAAQX,YAAe,IACrC,IAAKE,EAAgB,GAC1CS,EAAQT,cAAgBA,EAAc,eAAAmT,EAAAhvC,OAAA,SAGnCs8B,GAAO,yBAAA0S,EAAA/uC,OAAA,GAAA8uC,EAAA,SACjB,GAAE,CAAEV,SAAU5uC,QAAO,wBAAAovC,EAAA5uC,OAAA,GAAAgvC,EAAA,S,GACzB,CAAAhwC,IAAA,UAAAC,MAEK,SAAQsW,G,wIACV,O,SAAM/V,KAAKsF,aAAY,OACR,OADQmqC,EAAA/rC,KAAA,GACFkH,EAAAA,EAAAA,IAAkB,CAAEmL,OAAQ/V,KAAK0vC,WAAW35B,KAAU,OAClD,OADnB7R,EAAMurC,EAAA5rC,KAAA4rC,EAAA/rC,KAAG,EACgB1D,KAAK4mC,QAAQ,UAAW1iC,GAAO,OAG3D,OAHGg5B,EAAIuS,EAAA5rC,MACL5C,SAAQ,SAACsR,GACS,MAAfA,EAAI0rB,UAAmB1rB,EAAI0rB,SAAU,EAC7C,IAAGwR,EAAAlvC,OAAA,SACIm7B,GAAUiB,QAAQ38B,KAAK2hC,UAAU3D,UAAUnC,KAAK77B,KAAK2hC,WAArDjG,CAAiEwB,IAAK,yBAAAuS,EAAAjvC,OAAA,GAAAmvC,EAAA,S,GAChF,CAAAnwC,IAAA,gBAAAC,MAEK,W,gIACF,O,SAAMO,KAAKsF,aAAY,cAAAsqC,EAAArvC,OAAA,SAChBP,KAAK4mC,QAAQ,gBAAiB,CAAC,IAAG,wBAAAgJ,EAAApvC,OAAA,GAAAqvC,EAAA,S,GAC5C,CAAArwC,IAAA,eAAAC,MAEK,SAAaqN,G,sIACJ,O,SAAMA,EAAQ,OAAjB,KAEiB,kBAFzBA,EAAQgjC,EAAAjsC,OAE6BiJ,EAAW,GAAC,CAAAgjC,EAAApsC,KAAA,SAK3B,OAJdoJ,EAAW,GACXjG,GAAOmD,mBAAmB,mBAAoB,WAAY8C,GAC7DgjC,EAAApsC,KAAA,EAEuB1D,KAAKinC,wBAAwB,IAAM,EAAIjnC,KAAKknC,iBAAgB,OAE3C,OAFrChL,EAAW4T,EAAAjsC,MACfq4B,GAAepvB,GACG,IAAKovB,EAAc,GAAI4T,EAAAvvC,OAAA,SAClCP,KAAK2hC,UAAU70B,SAASovB,IAAY,eAAA4T,EAAAvvC,OAAA,SAGxCP,KAAK2hC,UAAU70B,SAASA,IAAS,yBAAAgjC,EAAAtvC,OAAA,GAAAuvC,EAAA,S,GAC3C,CAAAvwC,IAAA,cAAAC,MAGK,SAAYkI,G,0IACVqoC,EAAcroC,EAAI,OACX,GACa,KAAhBqoC,GAAsC,MAAhBA,EAAmB,CAAAC,EAAAvsC,KAAA,eAAAusC,EAAA1vC,OAAA,SAAW,MAAI,UAI/C,QAAToH,GAAkC,QAAhBqoC,EAAqB,CAAAC,EAAAvsC,KAAA,eAAAusC,EAAA1vC,OAAA,SAAW,MAAI,OAG7C,OAH6C0vC,EAAAvsC,KAAA,EAGvC1D,KAAKkwC,aAAaF,EAAa,eAAc,OAAtD,GAGE,OAHN1d,EAAI2d,EAAApsC,MAGM,CAAAosC,EAAAvsC,KAAA,SAIY,GAHlBysC,EAAW,IAAI1O,GAASzhC,KAAMsyB,EAAM3qB,GAE1CsoC,EAAAn4B,GACIk4B,IAAgBroC,GAAIsoC,EAAAn4B,GAAA,CAAAm4B,EAAAvsC,KAAA,SAAM,OAANusC,EAAAvsC,KAAA,GAAYysC,EAASlO,mBAAkB,QAAAgO,EAAAn4B,IAAAm4B,EAAApsC,KAAA,YAAAosC,EAAAn4B,GAAA,CAAAm4B,EAAAvsC,KAAA,gBAAAusC,EAAA1vC,OAAA,SAAY,MAAI,eAAA0vC,EAAA1vC,OAAA,SAExE4vC,GAAQ,QAInBH,EAAcA,EAAYp+B,MAAM,KAAKd,MAAM,GAAGnL,KAAK,KAAKsqC,EAAAvsC,KAAA,iCAAAusC,EAAAzvC,OAAA,GAAA4vC,EAAA,S,GAG/D,CAAA5wC,IAAA,eAAAC,MAEK,SAAakI,EAAcmI,G,wIAGb,OAFC,MAAbA,IAAqBA,EAAY,OAAQugC,EAAA3sC,KAAA,EAEvB1D,KAAKsF,aAAY,OAalB,OAbfjD,EAAOguC,EAAAxsC,MAGAyE,YACTzB,GAAO+I,WACH,+BACA9I,EAAAA,GAAO0F,OAAOqD,sBACd,CAAEC,UAAAA,EAAWzN,QAASA,EAAQsF,OAErC0oC,EAAAhhC,KAAA,EAAAghC,EAAA3sC,KAAA,EAI0B1D,KAAK6C,KAAK,CAC7BgM,GAAIxM,EAAQiG,WACZ9G,KAAO,aAAeg6B,GAAS7zB,GAAMgK,UAAU,KACjD,OAHY,OAAR2+B,EAAQD,EAAAxsC,KAAAwsC,EAAA9vC,OAAA,SAIPP,KAAK2hC,UAAUa,YAAY8N,IAAS,QAAAD,EAAAhhC,KAAA,GAAAghC,EAAAv4B,GAAAu4B,EAAA,wBAAAA,EAAA9vC,OAAA,SAKxC,MAAI,yBAAA8vC,EAAA7vC,OAAA,GAAA+vC,EAAA,kB,GACd,CAAA/wC,IAAA,cAAAC,MAEK,SAAYkI,G,sIACP,O,SAAMA,EAAI,OAAb,OAAJA,EAAI6oC,EAAA3sC,KAAA2sC,EAAAnhC,KAAG,EAAHmhC,EAAAjwC,OAAA,SAIOR,QAAQH,QAAQI,KAAK2hC,UAAUzyB,QAAQvH,KAAM,UAAA6oC,EAAAnhC,KAAA,EAAAmhC,EAAA14B,GAAA04B,EAAA,WAGhD/+B,EAAAA,EAAAA,IAAY9J,GAAO,CAAF6oC,EAAA9sC,KAAA,eAAA8sC,EAAA14B,GAAA,QAQR,MALI,kBAAVnQ,GACPd,GAAOmD,mBAAmB,mBAAoB,OAAQrC,GAG1D6oC,EAAA9sC,KAAA,GACuB1D,KAAKywC,YAAY9oC,GAAK,QAA/B,GAARwoC,EAAQK,EAAA3sC,KACC,CAAF2sC,EAAA9sC,KAAA,gBAAA8sC,EAAAjwC,OAAA,SAAW,MAAI,QAErB,OAFqBiwC,EAAA9sC,KAAA,GAEfysC,EAASljC,aAAY,eAAAujC,EAAAjwC,OAAA,SAAAiwC,EAAA3sC,MAAA,yBAAA2sC,EAAAhwC,OAAA,GAAAkwC,EAAA,iB,GACrC,CAAAlxC,IAAA,gBAAAC,MAEK,SAAcyP,G,0IACN,O,SAAMA,EAAO,OAKF,OALrBA,EAAOyhC,EAAA9sC,KACPqL,EAAUlP,KAAK2hC,UAAUzyB,QAAQA,GAE3BypB,EAAOzpB,EAAQyC,UAAU,GAAGhD,cAAgB,gBAAegiC,EAAAjtC,KAAA,EAEtC1D,KAAKkwC,aAAavX,EAAM,iBAAgB,OAAjD,GACE,OADdiY,EAAYD,EAAA9sC,MACM,CAAA8sC,EAAAjtC,KAAA,gBAAAitC,EAAApwC,OAAA,SAAW,MAAI,QAGb,OAHaowC,EAAA74B,GAG1BgpB,GAAY6P,EAAAjtC,KAAA,GAAO1D,KAAK6C,KAAK,CACtCgM,GAAI+hC,EACJpvC,KAAO,aAAeg6B,GAAS7C,GAAMhnB,UAAU,KACjD,QAEW,OAFXg/B,EAAA54B,GAAA44B,EAAA9sC,KAHI8D,GAAO,EAAHgpC,EAAA74B,IAAA64B,EAAA54B,GAGN,GAAC44B,EAAAjtC,KAAA,GAEc1D,KAAKwO,YAAY7G,GAAK,QAA/B,GAAAgpC,EAAA9sC,MACEqL,EAAO,CAAAyhC,EAAAjtC,KAAA,gBAAAitC,EAAApwC,OAAA,SAAW,MAAI,eAAAowC,EAAApwC,OAAA,SAE3BoH,GAAI,yBAAAgpC,EAAAnwC,OAAA,GAAAqwC,EAAA,S,GACd,CAAArxC,IAAA,YAAAC,MAEK,SAAUqxC,G,kJACiB,GAAzBX,EAAqB,OACrB1+B,EAAAA,EAAAA,IAAYq/B,GAAgB,CAAFC,EAAArtC,KAAA,SAMF,OAJlBwL,EAAUlP,KAAK2hC,UAAUzyB,QAAQ4hC,GAEjCnY,EAAOzpB,EAAQyC,UAAU,GAAGhD,cAAgB,gBAAeoiC,EAAArtC,KAAA,EAEnC1D,KAAKkwC,aAAavX,EAAM,aAAY,OAA7C,GAAfqY,EAAeD,EAAAltC,KACC,CAAFktC,EAAArtC,KAAA,eAAAqtC,EAAAxwC,OAAA,SAAW,MAAI,OAKhB,OAFnB4vC,EAAW,IAAI1O,GAASzhC,KAAMgxC,EAAiBrY,GAAMoY,EAAA1hC,KAAA,GAAA0hC,EAAArtC,KAAA,GAE5BysC,EAASc,YAAW,QAA7B,KAANnO,EAAMiO,EAAAltC,MACA,CAAFktC,EAAArtC,KAAA,gBAAAqtC,EAAAxwC,OAAA,SAAWuiC,EAAOtgC,KAAG,QAAAuuC,EAAArtC,KAAA,oBAAAqtC,EAAA1hC,KAAA,GAAA0hC,EAAAj5B,GAAAi5B,EAAA,UAE3BA,EAAAj5B,GAAMvW,OAASuF,EAAAA,GAAO0F,OAAOq1B,eAAc,CAAAkP,EAAArtC,KAAA,eAAAqtC,EAAAj5B,GAAA,QAMrB,OANqBi5B,EAAA1hC,KAAA,GAAA0hC,EAAAh5B,GAMlC+oB,GAAYiQ,EAAArtC,KAAA,GAAO1D,KAAK6C,KAAK,CACtCgM,GAAImiC,EACJxvC,KAAO,aAAeg6B,GAAS7C,GAAMhnB,UAAU,KACjD,QACS,OADTo/B,EAAArpB,GAAAqpB,EAAAltC,KAHI8D,GAAO,EAAHopC,EAAAh5B,IAAAg5B,EAAArpB,GAGN,GAACqpB,EAAArtC,KAAA,GACY1D,KAAKywC,YAAY9oC,GAAK,QAAvCwoC,EAAQY,EAAAltC,KAAAktC,EAAArtC,KAAG,GAAH,iBAAAqtC,EAAA1hC,KAAG,GAAH0hC,EAAA5N,GAAA4N,EAAA,UAEJA,EAAA5N,GAAM5hC,OAASuF,EAAAA,GAAO0F,OAAOq1B,eAAc,CAAAkP,EAAArtC,KAAA,eAAAqtC,EAAA5N,GAAA,eAAA4N,EAAAxwC,OAAA,SACxC,MAAI,QAAAwwC,EAAArtC,KAAA,iBAKJ,OALIqtC,EAAArtC,KAAA,GAKE1D,KAAKywC,YAAYK,GAAc,QAAxC,GAARX,EAAQY,EAAAltC,KACO,CAAFktC,EAAArtC,KAAA,gBAAAqtC,EAAAxwC,OAAA,SAAW,MAAI,QAGjB,OAHiBwwC,EAAArtC,KAAA,GAGXysC,EAASc,YAAW,QAA7B,GACE,OADRnO,EAAMiO,EAAAltC,MACM,CAAAktC,EAAArtC,KAAA,gBAAAqtC,EAAAxwC,OAAA,SAAW,MAAI,eAAAwwC,EAAAxwC,OAAA,SAE1BuiC,EAAOtgC,KAAG,yBAAAuuC,EAAAvwC,OAAA,GAAA0wC,EAAA,2B,GACpB,CAAA1xC,IAAA,UAAAC,MAED,SAAQwE,EAAgBC,GACpB,OAAO2C,GAAO+I,WAAW3L,EAAS,mBAAoB6C,EAAAA,GAAO0F,OAAO2kC,gBAAiB,CAAErhC,UAAW7L,GACtG,GAAC,CAAAzE,IAAA,cAAAC,MAED,SAAYkmC,GACR3lC,KAAK4nC,QAAW5nC,KAAK0kC,QAAQ3uB,QAAO,SAACsS,GAAC,OAAKA,EAAE+oB,UAAU,IAAEjyC,OAAS,CACtE,GAAC,CAAAK,IAAA,aAAAC,MAED,SAAWkmC,GACP3lC,KAAK4nC,QAAW5nC,KAAK0kC,QAAQ3uB,QAAO,SAACsS,GAAC,OAAKA,EAAE+oB,UAAU,IAAEjyC,OAAS,CACtE,GAAC,CAAAK,IAAA,oBAAAC,MAED,SAAkB40B,EAAsBC,EAAoB0L,GACxD,IAAM2F,EAAQ,IAAI7F,GAAMR,GAAYjL,GAAYC,EAAU0L,GAI1D,OAHAhgC,KAAK0kC,QAAQzkC,KAAK0lC,GAClB3lC,KAAKqxC,YAAY1L,GAEV3lC,IACX,GAAC,CAAAR,IAAA,KAAAC,MAED,SAAG40B,EAAsBC,GACrB,OAAOt0B,KAAKsxC,kBAAkBjd,EAAWC,GAAU,EACvD,GAAC,CAAA90B,IAAA,OAAAC,MAED,SAAK40B,EAAsBC,GACvB,OAAOt0B,KAAKsxC,kBAAkBjd,EAAWC,GAAU,EACvD,GAAC,CAAA90B,IAAA,OAAAC,MAGD,SAAK40B,GAAyC,QAAAkd,EAAA,KAAAC,EAAAtyC,UAAAC,OAAhBsyC,EAAgB,IAAA5lC,MAAA2lC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAhBD,EAAgBC,EAAA,GAAAxyC,UAAAwyC,GAC1C,IAAI1wC,GAAS,EAET2wC,EAAwB,GAExBC,EAAWtS,GAAYjL,GAoB3B,OAnBAr0B,KAAK0kC,QAAU1kC,KAAK0kC,QAAQ3uB,QAAO,SAAC4vB,GAChC,OAAIA,EAAM5F,MAAQ6R,IAElBxxC,YAAW,WACPulC,EAAMrR,SAASR,MAAMyd,EAAME,EAC/B,GAAG,GAEHzwC,GAAS,GAEL2kC,EAAM3F,OACN2R,EAAQ1xC,KAAK0lC,IACN,GAIf,IAEAgM,EAAQ1wC,SAAQ,SAAC0kC,GAAY4L,EAAKM,WAAWlM,EAAQ,IAE9C3kC,CACX,GAAC,CAAAxB,IAAA,gBAAAC,MAED,SAAc40B,GACV,IAAKA,EAAa,OAAOr0B,KAAK0kC,QAAQvlC,OAEtC,IAAIyyC,EAAWtS,GAAYjL,GAC3B,OAAOr0B,KAAK0kC,QAAQ3uB,QAAO,SAAC4vB,GACxB,OAAQA,EAAM5F,MAAQ6R,CAC1B,IAAGzyC,MACP,GAAC,CAAAK,IAAA,YAAAC,MAED,SAAU40B,GACN,GAAiB,MAAbA,EACA,OAAOr0B,KAAK0kC,QAAQ9jC,KAAI,SAAC+kC,GAAK,OAAKA,EAAMrR,QAAQ,IAGrD,IAAIsd,EAAWtS,GAAYjL,GAC3B,OAAOr0B,KAAK0kC,QACP3uB,QAAO,SAAC4vB,GAAK,OAAMA,EAAM5F,MAAQ6R,CAAQ,IACzChxC,KAAI,SAAC+kC,GAAK,OAAKA,EAAMrR,QAAQ,GACtC,GAAC,CAAA90B,IAAA,MAAAC,MAED,SAAI40B,EAAsBC,GAAmB,IAAAwd,EAAA,KACzC,GAAgB,MAAZxd,EACA,OAAOt0B,KAAK+xC,mBAAmB1d,GAGnC,IAAMsd,EAAwB,GAE1Bx7B,GAAQ,EAERy7B,EAAWtS,GAAYjL,GAW3B,OAVAr0B,KAAK0kC,QAAU1kC,KAAK0kC,QAAQ3uB,QAAO,SAAC4vB,GAChC,OAAIA,EAAM5F,MAAQ6R,GAAYjM,EAAMrR,UAAYA,MAC5Cne,IACJA,GAAQ,EACRw7B,EAAQ1xC,KAAK0lC,IACN,GACX,IAEAgM,EAAQ1wC,SAAQ,SAAC0kC,GAAYmM,EAAKD,WAAWlM,EAAQ,IAE9C3lC,IACX,GAAC,CAAAR,IAAA,qBAAAC,MAED,SAAmB40B,GAAqB,IAAA2d,EAAA,KAChCL,EAAwB,GAC5B,GAAiB,MAAbtd,EACAsd,EAAU3xC,KAAK0kC,QAEf1kC,KAAK0kC,QAAU,OACZ,CACH,IAAMkN,EAAWtS,GAAYjL,GAC7Br0B,KAAK0kC,QAAU1kC,KAAK0kC,QAAQ3uB,QAAO,SAAC4vB,GAChC,OAAIA,EAAM5F,MAAQ6R,IAClBD,EAAQ1xC,KAAK0lC,IACN,EACX,G,CAKJ,OAFAgM,EAAQ1wC,SAAQ,SAAC0kC,GAAYqM,EAAKH,WAAWlM,EAAQ,IAE9C3lC,IACX,IAAC,EAAAR,IAAA,eAAAC,MAr1CD,WAII,OAHwB,MAApB6kC,KACAA,GAAmB,IAAI5I,IAEpB4I,EACX,GAEA,CAAA9kC,IAAA,aAAAC,MACA,SAAkB4C,GACd,OAAOiD,EAAAA,GAAAA,GAAuB,MAAXjD,EAAmB,YAAaA,EACvD,KAACmiC,CAAA,CA/JqB,CAAQxQ,I,uSE5qB5BntB,GAAS,IAAIC,EAAAA,GAAOuF,GAAAA,GAKpB4lC,GAAW,CAAE,OAAQ,eAE3B,SAASC,GAAQzyC,EAAY0yC,GACzB,GAAa,MAAT1yC,EAAiB,OAAO,KAG5B,GAA8B,kBAAnBA,EAAM6B,SAAyB7B,EAAM6B,QAAQwR,MAAM,YAAa,CACvE,IAAMtR,GAAOiQ,EAAAA,EAAAA,IAAYhS,EAAM+B,MAAQ/B,EAAM+B,KAAM,KACnD,IAAK2wC,GAAe3wC,EAChB,MAAO,CAAEF,QAAS7B,EAAM6B,QAASE,KAAAA,E,CAKzC,GAAsB,kBAAX/B,EAAqB,CAC5B,IAAK,IAAMD,KAAOC,EAAO,CACrB,IAAMuB,EAASkxC,GAAQzyC,EAAMD,GAAM2yC,GACnC,GAAInxC,EAAU,OAAOA,C,CAEzB,OAAO,I,CAIX,GAAsB,kBAAXvB,EACP,IACI,OAAOyyC,GAAQ5uC,KAAKoiB,MAAMjmB,GAAQ0yC,E,CACpC,MAAO/wC,GAAQ,CAGrB,OAAO,IACX,CAEA,SAASgxC,GAAWnuC,EAAgB7C,EAAY8C,GAE5C,IAAMiJ,EAAcjJ,EAAOiJ,aAAejJ,EAAOmoC,kBAIjD,GAAe,SAAXpoC,EAAmB,CACnB,IAAMjD,EAASkxC,GAAQ9wC,GAAO,GAC9B,GAAIJ,EAAU,OAAOA,EAAOQ,KAG5BqF,GAAO+I,WAAW,sFAAuF9I,EAAAA,GAAO0F,OAAOq1B,eAAgB,CACnIrgC,KAAM,KAAM2L,YAAAA,EAAa/L,MAAAA,G,CAIjC,GAAe,gBAAX6C,EAA0B,CAE1B,IAAIjD,EAASkxC,GAAQ9wC,EAAMixC,MAAM,GACnB,MAAVrxC,IAAkBA,EAASkxC,GAAQ9wC,GAAO,IAG1CJ,GACA6F,GAAO+I,WAAW,4EAA6E9I,EAAAA,GAAO0F,OAAOyD,wBAAyB,CAClI6c,OAAQ9rB,EAAOM,QAAS2C,OAAAA,EAAQkJ,YAAAA,EAAa/L,MAAAA,G,CAOzD,IAAIE,EAAUF,EAAME,QA4CpB,MA3CIF,EAAMG,OAASuF,EAAAA,GAAO0F,OAAO65B,cAAgBjlC,EAAMA,OAAyC,kBAAzBA,EAAMA,MAAME,QAC/EA,EAAUF,EAAMA,MAAME,QACQ,kBAAhBF,EAAMixC,KACpB/wC,EAAUF,EAAMixC,KACsB,kBAAxBjxC,EAAMkxC,eACpBhxC,EAAUF,EAAMkxC,eAEpBhxC,GAAWA,GAAW,IAAIqN,eAGdmE,MAAM,qEACdjM,GAAO+I,WAAW,oDAAqD9I,EAAAA,GAAO0F,OAAOC,mBAAoB,CACrGrL,MAAAA,EAAO6C,OAAAA,EAAQkJ,YAAAA,IAKnB7L,EAAQwR,MAAM,yBACdjM,GAAO+I,WAAW,8BAA+B9I,EAAAA,GAAO0F,OAAOE,cAAe,CAC1EtL,MAAAA,EAAO6C,OAAAA,EAAQkJ,YAAAA,IAKnB7L,EAAQwR,MAAM,wEACdjM,GAAO+I,WAAW,0BAA2B9I,EAAAA,GAAO0F,OAAOG,wBAAyB,CAChFvL,MAAAA,EAAO6C,OAAAA,EAAQkJ,YAAAA,IAKnB7L,EAAQwR,MAAM,2BACdjM,GAAO+I,WAAW,gDAAiD9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACpGzO,MAAAA,EAAO6C,OAAAA,EAAQkJ,YAAAA,IAInB8kC,GAASjtC,QAAQf,IAAW,GAAK3C,EAAQwR,MAAM,wFAC/CjM,GAAO+I,WAAW,4EAA6E9I,EAAAA,GAAO0F,OAAOyD,wBAAyB,CAClI7O,MAAAA,EAAO6C,OAAAA,EAAQkJ,YAAAA,IAIjB/L,CACV,CAEA,SAASupC,GAAM9B,GACX,OAAO,IAAI9oC,SAAQ,SAASH,GACxBQ,WAAWR,EAASipC,EACxB,GACJ,CAEA,SAAS3jC,GAAU/D,GACf,GAAIA,EAAQC,MAAO,CAEf,IAAMA,EAAa,IAAIC,MAAMF,EAAQC,MAAME,SAG3C,MAFAF,EAAMG,KAAOJ,EAAQC,MAAMG,KAC3BH,EAAMI,KAAOL,EAAQC,MAAMI,KACrBJ,C,CAGV,OAAOD,EAAQH,MACnB,CAEA,SAASuxC,GAAa9yC,GAClB,OAAIA,EAAgBA,EAAMkP,cACnBlP,CACX,CAEA,IAAM+yC,GAAoB,CAAC,EAEdC,GAAc,SAAAC,IAAA9wC,EAAAA,EAAAA,GAAA6wC,EAAAC,GAAA,IAAA/uC,GAAA7B,EAAAA,EAAAA,GAAA2wC,GAKvB,SAAAA,EAAYE,EAAuB7tC,EAA2B8tC,GAAgC,IAAAvyC,EAG1F,IAH0FhB,EAAAA,EAAAA,GAAA,KAAAozC,GAC1FpyC,EAAAsD,EAAAd,KAAA,MAEI8vC,IAAqBH,GACrB,MAAM,IAAInxC,MAAM,8EAiBnB,OAdD6I,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAzkC,GAAO,WAAYyE,GAEX,MAAlB8tC,IAA0BA,EAAiB,GAEhB,kBAApBA,IACP1oC,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAzkC,GAAO,WAAYA,EAAKyE,SAAS68B,UAAUzyB,QAAQ0jC,KACjE1oC,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAzkC,GAAO,SAAU,OAEG,kBAApBuyC,IACd1oC,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAzkC,GAAO,SAAUuyC,IAC/B1oC,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAzkC,GAAO,WAAY,OAGjCwG,GAAOmD,mBAAmB,2BAA4B,iBAAkB4oC,GAC3EvyC,CACL,CAoLC,OApLAd,EAAAA,EAAAA,GAAAkzC,EAAA,EAAAjzC,IAAA,UAAAC,MAED,SAAQqF,GACJ,OAAO+B,GAAO+I,WAAW,0CAA2C9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACrGC,UAAW,WAEnB,GAAC,CAAAtQ,IAAA,mBAAAC,MAED,WACI,OAAO,IAAIozC,GAAuBL,GAAmBxyC,KAAK8E,SAAU9E,KAAK8yC,UAAY9yC,KAAK+yC,OAC9F,GAAC,CAAAvzC,IAAA,aAAAC,MAED,WAAU,IAAAuC,EAAA,KACN,OAAIhC,KAAK8yC,SACE/yC,QAAQH,QAAQI,KAAK8yC,UAGzB9yC,KAAK8E,SAASkuC,KAAK,eAAgB,IAAIjyC,MAAK,SAACkyC,GAMhD,OALIA,EAAS9zC,QAAU6C,EAAK+wC,QACxBlsC,GAAO+I,WAAW,oBAAsB5N,EAAK+wC,OAAQjsC,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACtFC,UAAW,eAGZ9N,EAAK8C,SAAS68B,UAAUzyB,QAAQ+jC,EAASjxC,EAAK+wC,QACzD,GACJ,GAAC,CAAAvzC,IAAA,2BAAAC,MAED,SAAyB0N,GAA2C,IAAA3J,EAAA,KAChE2J,GAAc7B,EAAAA,EAAAA,IAAY6B,GAE1B,IAAM+lC,EAAclzC,KAAKiN,aAAalM,MAAK,SAACmO,GAExC,OADIA,IAAWA,EAAUA,EAAQP,eAC1BO,CACX,IAKA,GAA4B,MAAxB/B,EAAY6C,SAAkB,CAC9B,IAAMmjC,GAAW7nC,EAAAA,EAAAA,IAAY6B,GAC7BgmC,EAASzkC,KAAOwkC,EAChB/lC,EAAY6C,SAAWhQ,KAAK8E,SAASwI,YAAY6lC,E,CAcrD,OAXsB,MAAlBhmC,EAAY0B,KACZ1B,EAAY0B,GAAK9O,QAAQH,QAAQuN,EAAY0B,IAAI9N,MAAK,SAAO8N,GAAE,OAAIC,GAAAtL,OAAA,UAAAuL,EAAAA,EAAAA,KAAAC,MAAA,SAAAvO,IAAA,IAAAyO,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA7O,GAAA,cAAAA,EAAA+O,KAAA/O,EAAAoD,MAAA,UACrD,MAANmL,EAAU,CAAAvO,EAAAoD,KAAA,eAAApD,EAAAC,OAAA,SAAW,MAAI,OACb,OADaD,EAAAoD,KAAA,EACP1D,KAAK8E,SAAS0J,YAAYK,GAAG,OAGlD,OAFc,OADTK,EAAO5O,EAAAuD,OAETgD,GAAOmD,mBAAmB,qCAAsC,QAAS6E,GAC5EvO,EAAAC,OAAA,SACM2O,GAAO,wBAAA5O,EAAAE,OAAA,GAAAC,EAAA,SACjB,MAGEmK,EAAAA,EAAAA,IAAkB,CACrByC,IAAIzC,EAAAA,EAAAA,IAAkBuC,GACtB24B,OAAQoN,IACTnyC,MAAK,SAAAqU,GAAmB,IAAhB/H,EAAE+H,EAAF/H,GAAIy4B,EAAM1wB,EAAN0wB,OAEI,MAAXz4B,EAAGqB,KACCrB,EAAGqB,KAAKC,gBAAkBm3B,GAC1Bj/B,GAAOmD,mBAAmB,wBAAyB,cAAemD,GAGtEE,EAAGqB,KAAOo3B,EAGd,IAAMyG,EAAc/oC,EAAKsB,SAAS6F,YAAayoC,mBAAmB/lC,EAAI,CAAEqB,MAAM,IAE9E,OAAOlL,EAAKsB,SAASkuC,KAAK,sBAAuB,CAAEzG,IAASxrC,MAAK,SAAC4W,GAC9D,OAAOA,CACX,IAAG,SAACvW,GAQA,MAP8B,kBAAnBA,EAAME,SAAyBF,EAAME,QAAQwR,MAAM,iBAC1DjM,GAAO+I,WAAW,4BAA6B9I,EAAAA,GAAO0F,OAAO6mC,gBAAiB,CAC1EzuC,OAAQ,kBACRuI,YAAaE,IAId+kC,GAAW,kBAAmBhxC,EAAOmrC,EAChD,GACJ,GACJ,GAAC,CAAA/sC,IAAA,kBAAAC,MAED,SAAgB0N,GACZ,OAAOtG,GAAO+I,WAAW,sCAAuC9I,EAAAA,GAAO0F,OAAOqD,sBAAuB,CACjGC,UAAW,mBAEnB,GAAC,CAAAtQ,IAAA,kBAAAC,MAEK,SAAgB0N,G,+IAEE,O,SAAMnN,KAAK8E,SAASmiC,wBAAwB,IAAM,EAAIjnC,KAAK8E,SAASoiC,iBAAgB,OAG3F,OAHPhL,EAAWz4B,EAAAI,KAAAJ,EAAAC,KAAG,EAGD1D,KAAKszC,yBAAyBnmC,GAAY,OAMlD,OANLwK,EAAIlU,EAAAI,KAAAJ,EAAA4L,KAAG,EAAH5L,EAAAC,KAAG,GAMI+hC,EAAAA,GAAAA,KAAK,kBAAW32B,GAAAzK,OAAA,UAAA0K,EAAAA,EAAAA,KAAAC,MAAA,SAAAvN,IAAA,IAAA4L,EAAA,OAAA0B,EAAAA,EAAAA,KAAAI,MAAA,SAAArO,GAAA,cAAAA,EAAAuO,KAAAvO,EAAA4C,MAAA,OACd,OADc5C,EAAA4C,KAAA,EACR1D,KAAK8E,SAASslC,eAAezyB,GAAK,OAA3C,GACG,QADLtK,EAAEvM,EAAA+C,MACO,CAAA/C,EAAA4C,KAAA,eAAA5C,EAAAP,OAAA,cAAWnB,GAAS,cAAA0B,EAAAP,OAAA,SAC5BP,KAAK8E,SAAS4lC,iBAAiBr9B,EAAIsK,EAAMukB,IAAY,wBAAAp7B,EAAAN,OAAA,GAAAiB,EAAA,SAC/D,GAAE,CAAEmtC,SAAU5uC,KAAK8E,WAAW,cAAArB,EAAAlD,OAAA,SAAAkD,EAAAI,MAAA,QAEK,MAFLJ,EAAA4L,KAAA,GAAA5L,EAAAqU,GAAArU,EAAA,SAEzBA,EAAAqU,GAAO2kB,gBAAkB9kB,EAAKlU,EAAAqU,GAAA,yBAAArU,EAAAjD,OAAA,GAAAsD,EAAA,kB,GAG3C,CAAAtE,IAAA,cAAAC,MAEK,SAAY6B,G,wIAEE,OADVE,EAA6B,kBAAbF,GAAyB2R,EAAAA,EAAAA,IAAY3R,GAAUA,EAAOiM,EAAA7J,KAAA,EACtD1D,KAAKiN,aAAY,OAE5B,OAFLiC,EAAO3B,EAAA1J,KAAA0J,EAAA8B,KAAG,EAAH9B,EAAA7J,KAAG,EAEC1D,KAAK8E,SAASkuC,KAAK,gBAAiB,EAAEjiC,EAAAA,EAAAA,IAAQvP,GAAO0N,EAAQP,gBAAgB,cAAApB,EAAAhN,OAAA,SAAAgN,EAAA1J,MAAA,QAQzF,MARyF0J,EAAA8B,KAAA,GAAA9B,EAAAuK,GAAAvK,EAAA,SAE5D,kBAAnBA,EAAAuK,GAAMxW,SAAyBiM,EAAAuK,GAAMxW,QAAQwR,MAAM,iBAC1DjM,GAAO+I,WAAW,wBAAyB9I,EAAAA,GAAO0F,OAAO6mC,gBAAiB,CACtEzuC,OAAQ,cACR8J,KAAMQ,EACNqkC,YAAajyC,IAEpBiM,EAAAuK,GAAA,yBAAAvK,EAAA/M,OAAA,GAAAgN,EAAA,kB,GAGR,CAAAhO,IAAA,qBAAAC,MAEK,SAAmB6B,G,wIAEL,OADVE,EAA6B,kBAAbF,GAAyB2R,EAAAA,EAAAA,IAAY3R,GAAUA,EAAOmM,EAAA/J,KAAA,EACtD1D,KAAKiN,aAAY,OAI5B,OAJLiC,EAAOzB,EAAA5J,KAAA4J,EAAA4B,KAAG,EAAH5B,EAAA/J,KAAG,EAIC1D,KAAK8E,SAASkuC,KAAK,WAAY,CAAE9jC,EAAQP,eAAeoC,EAAAA,EAAAA,IAAQvP,KAAQ,cAAAiM,EAAAlN,OAAA,SAAAkN,EAAA5J,MAAA,QAQpF,MARoF4J,EAAA4B,KAAA,GAAA5B,EAAAqK,GAAArK,EAAA,SAEvD,kBAAnBA,EAAAqK,GAAMxW,SAAyBmM,EAAAqK,GAAMxW,QAAQwR,MAAM,iBAC1DjM,GAAO+I,WAAW,wBAAyB9I,EAAAA,GAAO0F,OAAO6mC,gBAAiB,CACtEzuC,OAAQ,qBACR8J,KAAMQ,EACNqkC,YAAajyC,IAEpBmM,EAAAqK,GAAA,yBAAArK,EAAAjN,OAAA,GAAAsN,EAAA,kB,GAGR,CAAAtO,IAAA,iBAAAC,MAEK,SAAe4X,EAAyB/B,EAA8C7V,G,+IAEtE,O,SAAM+zC,GAAkBC,aAAap8B,EAAQ/B,EAAO7V,GAAO,SAACkI,GAC1E,OAAO4/B,EAAKziC,SAAS0J,YAAY7G,EACrC,IAAE,OAEc,OAJV+rC,EAAS3lC,EAAAlK,KAAAkK,EAAArK,KAAG,EAII1D,KAAKiN,aAAY,OAG5B,OAHLiC,EAAOnB,EAAAlK,KAAAkK,EAAAsB,KAAG,EAAHtB,EAAArK,KAAG,EAGC1D,KAAK8E,SAASkuC,KAAK,uBAAwB,CACpD9jC,EAAQP,cACRrL,KAAKC,UAAUiwC,GAAkBG,WAAWD,EAAUr8B,OAAQ/B,EAAOo+B,EAAUj0C,UACjF,cAAAsO,EAAAxN,OAAA,SAAAwN,EAAAlK,MAAA,QAQD,MARCkK,EAAAsB,KAAA,GAAAtB,EAAA+J,GAAA/J,EAAA,SAE4B,kBAAnBA,EAAA+J,GAAMxW,SAAyByM,EAAA+J,GAAMxW,QAAQwR,MAAM,iBAC1DjM,GAAO+I,WAAW,wBAAyB9I,EAAAA,GAAO0F,OAAO6mC,gBAAiB,CACtEzuC,OAAQ,iBACR8J,KAAMQ,EACNqkC,YAAa,CAAEl8B,OAAQq8B,EAAUr8B,OAAQ/B,MAAAA,EAAO7V,MAAOi0C,EAAUj0C,SAExEsO,EAAA+J,GAAA,yBAAA/J,EAAAvN,OAAA,GAAAwN,EAAA,kB,GAGR,CAAAxO,IAAA,SAAAC,MAEK,SAAOm0C,G,wIAGO,OAFV9uC,EAAW9E,KAAK8E,SAAQmJ,EAAAvK,KAAA,EAER1D,KAAKiN,aAAY,OAA1B,OAAPiC,EAAOjB,EAAApK,KAAAoK,EAAA1N,OAAA,SAENuE,EAASkuC,KAAK,yBAA0B,CAAE9jC,EAAQP,cAAeilC,EAAU,QAAO,wBAAA3lC,EAAAzN,OAAA,GAAA2N,EAAA,S,KAC5FskC,CAAA,CA/MsB,CAAQ7lC,GAkN7BimC,GAAuB,SAAAgB,IAAAjyC,EAAAA,EAAAA,GAAAixC,EAAAgB,GAAA,IAAAhyC,GAAAC,EAAAA,EAAAA,GAAA+wC,GAAA,SAAAA,IAAA,OAAAxzC,EAAAA,EAAAA,GAAA,KAAAwzC,GAAAhxC,EAAAiyB,MAAA,KAAA50B,UAAA,CAgBxB,OAhBwBK,EAAAA,EAAAA,GAAAszC,EAAA,EAAArzC,IAAA,kBAAAC,MACzB,SAAgB0N,GAA2C,IAAAg7B,EAAA,KACvD,OAAOnoC,KAAKszC,yBAAyBnmC,GAAapM,MAAK,SAAC4W,GACpD,MAA4B,CACxBA,KAAMA,EACN5H,MAAO,KACPC,SAAU,KACVN,SAAU,KACVlO,KAAM,KACN/B,MAAO,KACP4I,QAAS,KACT+zB,cAAe,EACf1tB,KAAM,KACNu9B,KAAM,SAAC7P,GAA6B,OAAO+L,EAAKrjC,SAASwlC,mBAAmB3yB,EAAMykB,EAAgB,EAE1G,GACJ,KAACyW,CAAA,CAhBwB,CAAQJ,IAmB/BnmC,GAAuD,CACzDjE,SAAS,EAAM7G,MAAM,EAAMwO,UAAU,EAAMN,UAAS,EAAMK,OAAO,EAAMlB,IAAI,EAAMpP,OAAO,EACxFmG,MAAM,EAAMktB,YAAY,EACxBtjB,cAAc,EAAMC,sBAAsB,GAGjCvJ,GAAgB,SAAA4tC,IAAAlyC,EAAAA,EAAAA,GAAAsE,EAAA4tC,GAAA,IAAAC,GAAAjyC,EAAAA,EAAAA,GAAAoE,GAiBzB,SAAAA,EAAY1D,EAA+BH,GAAoB,IAAAgmC,GAAAhpC,EAAAA,EAAAA,GAAA,KAAA6G,GAC3D,IAAI8tC,EAAgD3xC,EA4BlC,OAzBI,MAAlB2xC,IACAA,EAAiB,IAAIj0C,SAAQ,SAACH,EAASC,GACnCO,YAAW,WACPioC,EAAKzkC,gBAAgB7C,MAAK,SAACsB,GACvBzC,EAAQyC,EACZ,IAAG,SAACjB,GACAvB,EAAOuB,EACX,GACJ,GAAG,EACP,KAGJinC,EAAA0L,EAAAlxC,KAAA,KAAMmxC,GAGDxxC,IAAOA,GAAM+H,EAAAA,EAAAA,IAAwB89B,EAAK19B,YAAa,aAA1CJ,IAEE,kBAAT/H,GACP0H,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAuD,GAAO,aAAarlC,OAAOiJ,OAAO,CAC5CzJ,IAAKA,MAGT0H,EAAAA,EAAAA,KAAc46B,EAAAA,EAAAA,GAAAuD,GAAO,aAAcrlC,OAAOiJ,QAAOX,EAAAA,EAAAA,IAAY9I,KAGjE6lC,EAAK7jC,QAAU,GAAG6jC,CACtB,CA6SC,OA7SA9oC,EAAAA,EAAAA,GAAA2G,EAAA,EAAA1G,IAAA,SAAA6qB,IArCD,WAII,OAH4B,MAAxBrqB,KAAKi0C,kBACLj0C,KAAKi0C,gBAAkB,CAAC,GAErBj0C,KAAKi0C,eAChB,GAAC,CAAAz0C,IAAA,gBAAAC,MAsCD,WAAa,IAAAgpC,EAAA,KAST,OARKzoC,KAAKiF,OAAsB,gBAC5BjF,KAAKiF,OAAsB,cAAIjF,KAAKk0C,yBAGpC9zC,YAAW,WACPqoC,EAAKxjC,OAAsB,cAAI,IACnC,GAAG,IAEAjF,KAAKiF,OAAsB,aACtC,GAAC,CAAAzF,IAAA,yBAAAC,MAEK,W,wIACF,O,SAAMkrC,GAAM,GAAE,OAIA,OAFVtiC,EAAU,KAAI+F,EAAAiB,KAAA,EAAAjB,EAAA1K,KAAA,EAEE1D,KAAKgzC,KAAK,cAAe,IAAI,OAA7C3qC,EAAO+F,EAAAvK,KAAAuK,EAAA1K,KAAG,GAAH,aAGO,OAHP0K,EAAAiB,KAAG,EAAHjB,EAAA0J,GAAA1J,EAAA,SAAAA,EAAAiB,KAAG,GAAHjB,EAAA1K,KAAG,GAGU1D,KAAKgzC,KAAK,cAAe,IAAI,QAA7C3qC,EAAO+F,EAAAvK,KAAAuK,EAAA1K,KAAG,GAAH,cAAA0K,EAAAiB,KAAG,GAAHjB,EAAA2J,GAAA3J,EAAA,qBAIA,MAAX/F,EAAe,CAAA+F,EAAA1K,KAAA,SAC+E,OAAxF4B,GAAaiF,EAAAA,EAAAA,IAA4CvK,KAAK2K,YAAa,cAAayD,EAAAiB,KAAA,GAAAjB,EAAA7N,OAAA,SAEnF+E,EAAW+N,EAAAA,GAAU3E,KAAKrG,GAAS+qB,aAAW,eAAAhlB,EAAAiB,KAAA,GAAAjB,EAAAsZ,GAAAtZ,EAAA,UAAAA,EAAA7N,OAAA,SAE9CsG,GAAO+I,WAAW,2BAA4B9I,EAAAA,GAAO0F,OAAOk5B,cAAe,CAC9Er9B,QAASA,EACTs9B,MAAO,iBACPwO,YAAW/lC,EAAAsZ,MACb,eAAAtZ,EAAA7N,OAAA,SAIHsG,GAAO+I,WAAW,2BAA4B9I,EAAAA,GAAO0F,OAAOk5B,cAAe,CAC9EC,MAAO,eACT,yBAAAv3B,EAAA5N,OAAA,GAAA8N,EAAA,iC,GACL,CAAA9O,IAAA,YAAAC,MAED,SAAUmzC,GACN,OAAO,IAAIH,GAAcD,GAAmBxyC,KAAM4yC,EACtD,GAAC,CAAApzC,IAAA,qBAAAC,MAED,SAAmBmzC,GACf,OAAO5yC,KAAKo0C,UAAUxB,GAAgByB,kBAC1C,GAAC,CAAA70C,IAAA,eAAAC,MAED,WAAY,IAAAipC,EAAA,KACR,OAAO1oC,KAAKgzC,KAAK,eAAgB,IAAIjyC,MAAK,SAACkyC,GACvC,OAAOA,EAASryC,KAAI,SAAC2W,GAAC,OAAKmxB,EAAK/G,UAAUzyB,QAAQqI,EAAE,GACxD,GACJ,GAAC,CAAA/X,IAAA,OAAAC,MAED,SAAKwE,EAAgBC,GAAkB,IAAAolC,EAAA,KAC7B5pC,EAAU,CACZuE,OAAQA,EACRC,OAAQA,EACRK,GAAKvE,KAAKwE,UACVC,QAAS,OAGbzE,KAAK2E,KAAK,QAAS,CACfC,OAAQ,UACRlF,SAASmF,EAAAA,EAAAA,IAASnF,GAClBoF,SAAU9E,OAKd,IAAM+E,EAAS,CAAE,cAAe,mBAAoBC,QAAQf,IAAW,EACvE,GAAIc,GAAS/E,KAAKiF,OAAOhB,GACrB,OAAOjE,KAAKiF,OAAOhB,GAGvB,IAAMjD,GAASqC,EAAAA,GAAAA,IAAUrD,KAAKsC,WAAYgB,KAAKC,UAAU7D,GAAUwF,IAAWnE,MAAK,SAACC,GAQhF,OAPAsoC,EAAK3kC,KAAK,QAAS,CACfC,OAAQ,WACRlF,QAASA,EACTyF,SAAUnE,EACV8D,SAAUwkC,IAGPtoC,CAEX,IAAG,SAACI,GAQA,MAPAkoC,EAAK3kC,KAAK,QAAS,CACfC,OAAQ,WACRxD,MAAOA,EACP1B,QAASA,EACToF,SAAUwkC,IAGRloC,CACV,IAUA,OAPI2D,IACA/E,KAAKiF,OAAOhB,GAAUjD,EACtBZ,YAAW,WACPkpC,EAAKrkC,OAAOhB,GAAU,IAC1B,GAAG,IAGAjD,CACX,GAAC,CAAAxB,IAAA,iBAAAC,MAED,SAAewE,EAAgBC,GAC3B,OAAQD,GACJ,IAAK,iBACD,MAAO,CAAE,kBAAmB,IAEhC,IAAK,cACD,MAAO,CAAE,eAAgB,IAE7B,IAAK,aACD,MAAO,CAAE,iBAAkB,CAAEsuC,GAAaruC,EAAOgL,SAAUhL,EAAO4I,WAEtE,IAAK,sBACD,MAAO,CAAE,0BAA2B,CAAEylC,GAAaruC,EAAOgL,SAAUhL,EAAO4I,WAE/E,IAAK,UACD,MAAO,CAAE,cAAe,CAAEylC,GAAaruC,EAAOgL,SAAUhL,EAAO4I,WAEnE,IAAK,eACD,MAAO,CAAE,mBAAoB,CAAEylC,GAAaruC,EAAOgL,UAAUwE,EAAAA,EAAAA,IAAWxP,EAAOynC,SAAU,IAAKznC,EAAO4I,WAEzG,IAAK,kBACD,MAAO,CAAE,yBAA0B,CAAE5I,EAAOmoC,oBAEhD,IAAK,WACD,OAAInoC,EAAO4I,SACA,CAAE,uBAAwB,CAAE5I,EAAO4I,WAAY5I,EAAOkqC,sBACtDlqC,EAAO+3B,UACP,CAAE,qBAAsB,CAAE/3B,EAAO+3B,YAAa/3B,EAAOkqC,sBAEzD,KAEX,IAAK,iBACD,MAAO,CAAE,2BAA4B,CAAElqC,EAAOu4B,kBAElD,IAAK,wBACD,MAAO,CAAE,4BAA6B,CAAEv4B,EAAOu4B,kBAEnD,IAAK,OAED,MAAO,CAAE,WAAY,EADMlyB,EAAAA,EAAAA,IAAgGvK,KAAK2K,YAAa,qBACtHyoC,CAAmBlvC,EAAOiJ,YAAa,CAAEuB,MAAM,IAASxK,EAAO4I,WAG1F,IAAK,cAED,MAAO,CAAE,kBAAmB,EADDvC,EAAAA,EAAAA,IAAgGvK,KAAK2K,YAAa,qBAC/GyoC,CAAmBlvC,EAAOiJ,YAAa,CAAEuB,MAAM,MAGjF,IAAK,UAID,OAHIxK,EAAO6R,QAAmC,MAAzB7R,EAAO6R,OAAO7G,UAC/BhL,EAAO6R,OAAO7G,QAAUqjC,GAAaruC,EAAO6R,OAAO7G,UAEhD,CAAE,cAAe,CAAEhL,EAAO6R,SAMzC,OAAO,IACX,GAAC,CAAAvW,IAAA,UAAAC,MAEK,SAAQwE,EAAgBC,G,6IAGX,SAAXD,GAAgC,gBAAXA,EAAwB,CAAAsK,EAAA7K,KAAA,QAChB,KAAvB2J,EAAKnJ,EAAOiJ,cACG,MAAXE,EAAGzH,OAAgByN,EAAAA,GAAU3E,KAAKrB,EAAGzH,MAAM0tB,SAAQ,CAAA/kB,EAAA7K,KAAA,WAElC,MAAnB2J,EAAGmC,cAAmD,MAA3BnC,EAAGoC,qBAA4B,CAAAlB,EAAA7K,KAAA,QAC1C,OAD0C6K,EAAA7K,KAAA,EACpC1D,KAAKqO,aAAY,OACX,OADtBsB,EAAOpB,EAAA1K,MACD2L,cAAwD,MAAhCG,EAAQF,wBAExCvL,GAASoH,EAAAA,EAAAA,IAAYpH,IACdiJ,aAAc7B,EAAAA,EAAAA,IAAY+B,UAC1BnJ,EAAOiJ,YAAYvH,MAC7B,OAWF,OAJC,OAFN6rC,EAAOzxC,KAAKs0C,eAAerwC,EAASC,KAGtC2C,GAAO+I,WAAW3L,EAAS,mBAAoB6C,EAAAA,GAAO0F,OAAO2kC,gBAAiB,CAAErhC,UAAW7L,IAC9FsK,EAAAc,KAAA,GAAAd,EAAA7K,KAAA,GAEgB1D,KAAKgzC,KAAKvB,EAAK,GAAIA,EAAK,IAAG,eAAAljC,EAAAhO,OAAA,SAAAgO,EAAA1K,MAAA,eAAA0K,EAAAc,KAAA,GAAAd,EAAAuJ,GAAAvJ,EAAA,UAAAA,EAAAhO,OAAA,SAEjC6xC,GAAWnuC,EAAMsK,EAAAuJ,GAAS5T,IAAO,yBAAAqK,EAAA/N,OAAA,GAAAiO,EAAA,mB,GAE/C,CAAAjP,IAAA,cAAAC,MAED,SAAYkmC,GACU,YAAdA,EAAM5F,KAAqB//B,KAAKu0C,iBACpCC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAvuC,EAAAuE,WAAA,oBAAA5H,KAAA,KAAkB8iC,EACtB,GAAC,CAAAnmC,IAAA,gBAAAC,MAED,WACI,GAA2B,MAAvBO,KAAK00C,eAAT,CACA,IAAMC,EAAO30C,KAEP40C,EAAiC50C,KAAKgzC,KAAK,kCAAmC,IACpFhzC,KAAK00C,eAAiBE,EAEtBA,EAAc7zC,MAAK,SAAS8zC,GAgCxB,OA/BA,SAASpP,IACLkP,EAAK3B,KAAK,uBAAwB,CAAE6B,IAAY9zC,MAAK,SAAS+zC,GAC1D,GAAIH,EAAKD,gBAAkBE,EAAiB,OAAO,KAEnD,IAAIG,EAAMh1C,QAAQH,UAYlB,OAXAk1C,EAAO7zC,SAAQ,SAAS0W,GAEpBg9B,EAAKhQ,SAAS,KAAOhtB,EAAKhJ,eAAiB,UAC3ComC,EAAMA,EAAIh0C,MAAK,WACX,OAAO4zC,EAAKvK,eAAezyB,GAAM5W,MAAK,SAASsM,GAE3C,OADAsnC,EAAKhwC,KAAK,UAAW0I,GACd,IACX,GACJ,GACJ,IAEO0nC,EAAIh0C,MAAK,WACZ,OAAO4pC,GAAM,IACjB,GACJ,IAAG5pC,MAAK,WACJ,GAAI4zC,EAAKD,gBAAkBE,EAM3B,OAFAx0C,YAAW,WAAaqlC,GAAQ,GAAG,GAE5B,KALHkP,EAAK3B,KAAK,sBAAuB,CAAE6B,GAM3C,IAAGvlC,OAAM,SAAClO,GAAmB,GACjC,CACAqkC,GAEOoP,CACX,IAAGvlC,OAAM,SAAClO,GAAmB,G,CACjC,GAAC,CAAA5B,IAAA,aAAAC,MAED,SAAWkmC,GACW,YAAdA,EAAM5F,KAAuD,IAAlC//B,KAAKg1C,cAAc,aAC9Ch1C,KAAK00C,eAAiB,OAE1BF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAvuC,EAAAuE,WAAA,mBAAA5H,KAAA,KAAiB8iC,EACrB,IAUA,EAAAnmC,IAAA,aAAAC,MA3QA,WACI,MAAO,uBACX,GAAC,CAAAD,IAAA,qBAAAC,MA0QD,SAA0B0N,EAAiC8nC,GAEvD,IAAMC,GAAU5pC,EAAAA,EAAAA,IAAYgB,IAC5B,GAAI2oC,EACA,IAAK,IAAMz1C,KAAOy1C,EACVA,EAAWz1C,KAAQ01C,EAAQ11C,IAAO,IAI9C4L,EAAAA,EAAAA,IAAgB+B,EAAa+nC,GAE7B,IAAMl0C,EAAiD,CAAC,EAmBxD,MAhBA,CAAC,UAAW,WAAY,WAAY,OAAQ,eAAgB,uBAAwB,QAAS,SAASC,SAAQ,SAASzB,GACnH,GAA+B,MAArB2N,EAAa3N,GAAvB,CACA,IAAMC,GAAQ4+B,EAAAA,EAAAA,IAAShrB,EAAAA,GAAU3E,KAAWvB,EAAa3N,KAC7C,aAARA,IAAsBA,EAAM,OAChCwB,EAAOxB,GAAOC,C,CAClB,IAEA,CAAC,OAAQ,KAAM,QAAQwB,SAAQ,SAASzB,GACL,MAArB2N,EAAa3N,KACvBwB,EAAOxB,IAAOuR,EAAAA,EAAAA,IAAc5D,EAAa3N,IAC7C,IAEU2N,EAAa2lB,aACnB9xB,EAAmB,WAAIyxB,GAAoBtlB,EAAa2lB,aAGrD9xB,CACX,KAACkF,CAAA,CA5VwB,CAAQs+B,G,4GC9XzB2Q,EAQAC,E,WAZNvuC,EAAS,I,SAAIC,ICNI,iBD0DvB,SAASuuC,EAAWvoB,EAAyBpc,EAAgBa,EAA0B6oB,EAAuBkb,GAG1G,GAAIxoB,IAAWsoB,EAAgBG,YAAczoB,IAAWsoB,EAAgBI,oBAAqB,CAEzF,IADA,IAAIlvC,EAAI,EACCmvC,EAAI/kC,EAAS,EAAG+kC,EAAIlkC,EAAMpS,QAC3BoS,EAAMkkC,IAAM,IAAM,EADiBA,IAEvCnvC,IAEJ,OAAOA,C,CAKX,OAAIwmB,IAAWsoB,EAAgBM,QACpBnkC,EAAMpS,OAASuR,EAAS,EAI5B,CACX,EApEA,SAAYykC,GACRA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACH,CAND,CAAYA,IAAAA,EAAwB,KAQpC,SAAYC,GAGRA,EAAA,mDAIAA,EAAA,kCAIAA,EAAA,yBAIAA,EAAA,6CAKAA,EAAA,kCAKAA,EAAA,mCAKAA,EAAA,kCACH,CA/BD,CAAYA,IAAAA,EAAe,KA8EpB,IAAMO,EAAsD3yC,OAAOiJ,OAAO,CAC7E7K,MA3CJ,SAAmB0rB,EAAyBpc,EAAgBa,EAA0B6oB,EAAuBkb,GACzG,OAAOzuC,EAAOmD,mBAAmB,+BAAD5E,OAAiCsL,EAAO,MAAAtL,OAAM0nB,GAAW,QAASvb,EACtG,EA0CIqkC,OAAQP,EACRl8B,QAnBJ,SAAqB2T,EAAyBpc,EAAgBa,EAA0B6oB,EAAuBkb,GAG3G,OAAIxoB,IAAWsoB,EAAgBS,UAC3Bzb,EAAOn6B,KAAKq1C,GACL,IAIXlb,EAAOn6B,KAAK,OAGLo1C,EAAWvoB,EAAQpc,EAAQa,GACtC,IAUA,SAASukC,EAAkBvkC,EAAkBwkC,GAC1B,MAAXA,IAAmBA,EAAUJ,EAAev0C,OAEhDmQ,GAAQ/K,EAAAA,EAAAA,IAAS+K,GAMjB,IAJA,IAAMvQ,EAAwB,GAC1BsF,EAAI,EAGFA,EAAIiL,EAAMpS,QAAQ,CAEpB,IAAMuT,EAAInB,EAAMjL,KAGhB,GAAIoM,GAAK,IAAM,EAAf,CAMA,IAAIsjC,EAAc,KACdC,EAAe,KAGnB,GAAmB,OAAV,IAAJvjC,GACDsjC,EAAc,EACdC,EAAe,SAGZ,GAAmB,OAAV,IAAJvjC,GACRsjC,EAAc,EACdC,EAAe,SAGZ,IAAmB,OAAV,IAAJvjC,GAIL,CAECpM,GAAKyvC,EADU,OAAV,IAAJrjC,GACY0iC,EAAgBI,oBAEhBJ,EAAgBG,WAFqBjvC,EAAI,EAAGiL,EAAOvQ,GAIpE,Q,CATAg1C,EAAc,EACdC,EAAe,K,CAYnB,GAAI3vC,EAAI,EAAI0vC,GAAezkC,EAAMpS,OAC7BmH,GAAKyvC,EAAQX,EAAgBM,QAASpvC,EAAI,EAAGiL,EAAOvQ,OADxD,CAQA,IAFA,IAAIgY,EAAMtG,GAAM,GAAM,EAAIsjC,EAAc,GAAM,EAErCp4B,EAAI,EAAGA,EAAIo4B,EAAap4B,IAAK,CAClC,IAAIs4B,EAAW3kC,EAAMjL,GAGrB,GAAyB,MAAT,IAAX4vC,GAA0B,CAC3B5vC,GAAKyvC,EAAQX,EAAgBe,iBAAkB7vC,EAAGiL,EAAOvQ,GACzDgY,EAAM,KACN,K,CAGJA,EAAOA,GAAO,EAAiB,GAAXk9B,EACpB5vC,G,CAIQ,OAAR0S,IAGAA,EAAM,QACN1S,GAAKyvC,EAAQX,EAAgBgB,aAAc9vC,EAAI,EAAI0vC,EAAazkC,EAAOvQ,EAAQgY,GAK/EA,GAAO,OAAUA,GAAO,MACxB1S,GAAKyvC,EAAQX,EAAgBiB,gBAAiB/vC,EAAI,EAAI0vC,EAAazkC,EAAOvQ,EAAQgY,GAKlFA,GAAOi9B,EACP3vC,GAAKyvC,EAAQX,EAAgBS,SAAUvvC,EAAI,EAAI0vC,EAAazkC,EAAOvQ,EAAQgY,GAI/EhY,EAAOf,KAAK+Y,G,OA5ERhY,EAAOf,KAAKyS,E,CA+EpB,OAAO1R,CACX,CAGM,SAAUiS,EAAYqjC,GAA8E,IAAjEC,EAAAr3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiCi2C,EAAyBqB,QAE3FD,GAAQpB,EAAyBqB,UACjC3vC,EAAO4vC,iBACPH,EAAMA,EAAI3b,UAAU4b,IAIxB,IADA,IAAIv1C,EAAS,GACJsF,EAAI,EAAGA,EAAIgwC,EAAIn3C,OAAQmH,IAAK,CACjC,IAAMoM,EAAI4jC,EAAI/vC,WAAWD,GAEzB,GAAIoM,EAAI,IACJ1R,EAAOf,KAAKyS,QAET,GAAIA,EAAI,KACX1R,EAAOf,KAAMyS,GAAK,EAAK,KACvB1R,EAAOf,KAAU,GAAJyS,EAAY,UAEtB,GAAoB,QAAX,MAAJA,GAAuB,CAC/BpM,IACA,IAAMie,EAAK+xB,EAAI/vC,WAAWD,GAE1B,GAAIA,GAAKgwC,EAAIn3C,QAA4B,SAAZ,MAALolB,GACpB,MAAM,IAAIljB,MAAM,wBAIpB,IAAMq1C,EAAO,QAAgB,KAAJhkC,IAAe,KAAY,KAAL6R,GAC/CvjB,EAAOf,KAAMy2C,GAAQ,GAAM,KAC3B11C,EAAOf,KAAOy2C,GAAQ,GAAM,GAAQ,KACpC11C,EAAOf,KAAOy2C,GAAQ,EAAK,GAAQ,KACnC11C,EAAOf,KAAa,GAAPy2C,EAAe,I,MAG5B11C,EAAOf,KAAMyS,GAAK,GAAM,KACxB1R,EAAOf,KAAOyS,GAAK,EAAK,GAAQ,KAChC1R,EAAOf,KAAU,GAAJyS,EAAY,I,CAIjC,OAAOlM,EAAAA,EAAAA,IAASxF,EACpB,CA8CM,SAAU+/B,EAAaxvB,EAAkBwkC,GAC3C,OAAqBD,EAAkBvkC,EAAOwkC,GAb5Bn1C,KAAI,SAAC+1C,GACnB,OAAIA,GAAa,MACNjwC,OAAOC,aAAagwC,IAE/BA,GAAa,MACNjwC,OAAOC,aACqB,OAA5BgwC,GAAa,GAAM,MACC,OAAT,KAAZA,IAEV,IAAGhxC,KAAK,GAKZ,CAEM,SAAU0zB,EAAiBid,GAC7B,OAAOR,EAAkB7iC,EAAYqjC,EADKp3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiCi2C,EAAyBqB,SAExG,C,0bE9RM,SAAgBI,EAAO5Q,EAAc9+B,G,6IA0BtB,OAzBF,MAAXA,IAAmBA,EAAU,CAAC,GAE5BxH,EAAuB,CACzBuE,OAASiD,EAAQjD,QAAU,MAC3Bf,QAAUgE,EAAQhE,SAAW,CAAC,EAC9BmvC,KAAOnrC,EAAQmrC,WAAQjzC,IAGI,IAA3B8H,EAAQ2vC,iBACRn3C,EAAQo3C,KAAoB,OAC5Bp3C,EAAQqF,MAAsB,WAC9BrF,EAAQq3C,YAAkC,cAC1Cr3C,EAAQs3C,SAA4B,SACpCt3C,EAAQu3C,SAAW,UAGK,MAAxB/vC,EAAQgwC,gBACFC,EAAOjwC,EAAQgwC,cACZJ,OAAQp3C,EAAQo3C,KAAqBK,EAAKL,MAC/CK,EAAKpyC,QAASrF,EAAQqF,MAAuBoyC,EAAKpyC,OAClDoyC,EAAKJ,cAAer3C,EAAQq3C,YAAmCI,EAAKJ,aACpEI,EAAKH,WAAYt3C,EAAQs3C,SAA6BG,EAAKH,UAC3DG,EAAKF,WAAYv3C,EAAQu3C,SAAWE,EAAKF,WAChD32C,EAAAoD,KAAA,EAEsB0zC,MAAMpR,EAAMtmC,GAAQ,OAC9B,OADPyF,EAAQ7E,EAAAuD,KAAAvD,EAAAoD,KAAG,GACEyB,EAASkyC,cAAa,QAWxC,OAXKhF,EAAI/xC,EAAAuD,KAEJX,EAAwC,CAAC,EAC3CiC,EAASjC,QAAQjC,QACjBkE,EAASjC,QAAQjC,SAAQ,SAACxB,EAAOD,GAC7B0D,EAAQ1D,EAAImP,eAAiBlP,CACjC,IAE8B0F,EAASjC,QAAU4H,OAAS7J,SAAQ,SAACzB,GAC/D0D,EAAQ1D,EAAImP,eAAiBxJ,EAASjC,QAAQmnB,IAAI7qB,EACtD,IACHc,EAAAC,OAAA,SAEM,CACH2C,QAASA,EACTijC,WAAYhhC,EAASk4B,OACrBia,cAAenyC,EAASoyC,WACxBlF,MAAM7rC,EAAAA,EAAAA,IAAS,IAAIsL,WAAWugC,MACjC,yBAAA/xC,EAAAE,OAAA,GAAAC,EAAA,I,2SC5CCoG,EAAS,IAAIC,EAAAA,GCTI,aDavB,SAAS0wC,EAAQ5X,GACb,OAAO,IAAI7/B,SAAQ,SAACH,GAChBQ,WAAWR,EAASggC,EACxB,GACJ,CAEA,SAAS6X,EAAQh4C,EAAYmG,GACzB,GAAa,MAATnG,EAAiB,OAAO,KAE5B,GAAsB,kBAAXA,EAAuB,OAAOA,EAEzC,IAAIoR,EAAAA,EAAAA,IAAYpR,GAAQ,CACpB,GAAImG,IAAgC,SAAvBA,EAAKgM,MAAM,KAAK,IAA+C,qBAA9BhM,EAAKgM,MAAM,KAAK,GAAG8lC,QAC7D,IACI,OAAO3W,EAAAA,EAAAA,IAAathC,E,CACtB,MAAO2B,GAAQ,CAErB,OAAO2P,EAAAA,EAAAA,IAAQtR,E,CAGnB,OAAOA,CACX,CA6UM,SAAU4D,EAAUf,EAAqC2jC,EAAe0R,GAC1E,IAuBItF,EAAmB,KACvB,GAAY,MAARpM,EAAc,CACdoM,GAAOp/B,EAAAA,EAAAA,IAAYgzB,GAGnB,IAAM2R,EAAkD,kBAAhBt1C,EAA6B,CAAEE,IAAKF,IAAegJ,EAAAA,EAAAA,IAAYhJ,GACvG,GAAIs1C,EAAQ10C,QAC6G,IAA7FF,OAAO8H,KAAK8sC,EAAQ10C,SAAS6S,QAAO,SAACiE,GAAC,MAA0B,iBAApBA,EAAErL,aAAgC,IAAGxP,SAErGy4C,EAAQ10C,SAAUoI,EAAAA,EAAAA,IAAYssC,EAAQ10C,SACtC00C,EAAQ10C,QAAQ,gBAAkB,yBAGtC00C,EAAQ10C,QAAU,CAAE,eAAgB,oBAExCZ,EAAas1C,C,CAGjB,OAzTE,SAAqCt1C,EAAqC+vC,EAAmBsF,GAG/F,IAAME,EAAuC,kBAAhBv1C,GAAwD,MAA5BA,EAAWG,cAAyBH,EAAWG,cAAe,GACvHoE,EAAOixC,eAAgBD,EAAe,GAAMA,EAAe,IAAO,EAC9D,oCAAqC,2BAA4BA,GAErE,IAAME,EAA4C,kBAAhBz1C,EAA4BA,EAAWy1C,iBAAkB,KACrFC,EAAgD,kBAAhB11C,GAAwE,kBAArCA,EAAW01C,qBAAsC11C,EAAW01C,qBAAsB,IAC3JnxC,EAAOixC,eAAgBE,EAAuB,GAAMA,EAAuB,IAAO,EAC9E,4CAA6C,kCAAmCA,GAEpF,IAAM9R,EAA4C,kBAAhB5jC,KAA+BA,EAAW4jC,iBAEtEhjC,EAAqC,CAAC,EAExCV,EAAc,KAGZ0E,EAAmB,CACrBjD,OAAQ,OAGRg0C,GAAW,EAEXpP,EAAU,KAEd,GAA2B,kBAAhBvmC,EACPE,EAAMF,OAEH,GAA2B,kBAAhBA,EAA0B,CAWxC,GAVkB,MAAdA,GAAwC,MAAlBA,EAAWE,KACjCqE,EAAOmD,mBAAmB,cAAe,iBAAkB1H,GAG/DE,EAAMF,EAAWE,IAEkB,kBAAxBF,EAAWumC,SAAyBvmC,EAAWumC,QAAU,IAChEA,EAAUvmC,EAAWumC,SAGrBvmC,EAAWY,QACX,IAAK,IAAM1D,KAAO8C,EAAWY,QACzBA,EAAQ1D,EAAImP,eAAiB,CAAEnP,IAAKA,EAAKC,MAAOiH,OAAOpE,EAAWY,QAAQ1D,KACtE,CAAC,gBAAiB,qBAAqBwF,QAAQxF,EAAImP,gBAAkB,IACrEspC,GAAW,GAOvB,GAFA/wC,EAAQjB,YAAc3D,EAAW2D,UAEV,MAAnB3D,EAAW41C,MAAuC,MAAvB51C,EAAWsxC,SAAkB,CAC5B,WAAxBpxC,EAAImP,UAAU,EAAG,KAA8D,IAA3CrP,EAAW61C,6BAC/CtxC,EAAO+I,WACH,mDACA9I,EAAAA,GAAO0F,OAAO4rC,iBACd,CAAEC,SAAU,MAAO71C,IAAKA,EAAK01C,KAAM51C,EAAW41C,KAAMtE,SAAU,eAItE,IAAM0E,EAAgBh2C,EAAW41C,KAAO,IAAM51C,EAAWsxC,SACzD1wC,EAAuB,cAAI,CACvB1D,IAAK,gBACLC,MAAO,UAAW2kC,EAAAA,EAAAA,IAAanxB,EAAAA,EAAAA,IAAYqlC,I,CAIlB,MAA7Bh2C,EAAWu0C,iBACX3vC,EAAQ2vC,iBAAmBv0C,EAAWu0C,gBAGX,MAA3Bv0C,EAAW40C,eACXhwC,EAAQgwC,cAAe5rC,EAAAA,EAAAA,IAAYhJ,EAAW40C,c,CAItD,IAzFez3C,EAyFT84C,EAAS,IAAI3X,OAAO,kCAAmC,KACvD4X,EAAch2C,EAAOA,EAAIsQ,MAAMylC,GAAS,KAC9C,GAAIC,EACA,IACI,IAAMrzC,EAAW,CACbghC,WAAY,IACZmR,cAAe,KACfp0C,QAAS,CAAE,eAAiBs1C,EAAU,IAAM,cAC5CnG,KAAOmG,EAAU,IAAKC,EAAAA,EAAAA,GAAaD,EAAU,KAjG1C/4C,EAiGyD+4C,EAAU,IAhG3EvlC,EAAAA,EAAAA,IAAYxT,EAAM0Z,QAAQ,yBAAyB,SAACnO,EAAKzJ,GAC5D,OAAOmF,OAAOC,aAAaiM,SAASrR,EAAM,IAC9C,OAiGYP,EAAwBmE,EAASktC,KAIrC,OAHIsF,IACA32C,EAAS22C,EAAYxyC,EAASktC,KAAMltC,IAEjCpF,QAAQH,QAAoBoB,E,CAErC,MAAOI,GACLyF,EAAO+I,WAAW,4BAA6B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CACvEgM,KAAMoF,EAAQe,EAAU,GAAIA,EAAU,IACtCp3C,MAAOA,EACPs3C,YAAa,KACbC,cAAe,MACfn2C,IAAKA,G,CAKb6vC,IACAnrC,EAAQjD,OAAS,OACjBiD,EAAQmrC,KAAOA,EACgB,MAA3BnvC,EAAQ,kBACRA,EAAQ,gBAAkB,CAAE1D,IAAK,eAAgBC,MAAO,6BAE3B,MAA7ByD,EAAQ,oBACRA,EAAQ,kBAAoB,CAAE1D,IAAK,iBAAkBC,MAAOiH,OAAO2rC,EAAKlzC,WAIhF,IAAMy5C,EAA2C,CAAC,EAClD51C,OAAO8H,KAAK5H,GAASjC,SAAQ,SAACzB,GAC1B,IAAMq5C,EAAS31C,EAAQ1D,GACvBo5C,EAAYC,EAAOr5C,KAAOq5C,EAAOp5C,KACrC,IACAyH,EAAQhE,QAAU01C,EAElB,IAAME,EAAkB,WACpB,IAAInO,EAAsB,KAuB1B,MAAO,CAAE7qC,QAtBuB,IAAIC,SAAQ,SAASH,EAASC,GACtDgpC,IACA8B,EAAQvqC,YAAW,WACF,MAATuqC,IACJA,EAAQ,KAER9qC,EAAOgH,EAAOugC,UAAU,UAAWtgC,EAAAA,GAAO0F,OAAOo+B,QAAS,CACtD8N,YAAajB,EAAQvwC,EAAQmrC,KAAMuG,EAAY,iBAC/CD,cAAezxC,EAAQjD,OACvB4kC,QAASA,EACTrmC,IAAKA,KAEb,GAAGqmC,GAEX,IAQkBkQ,OANH,WACE,MAATpO,IACJhqC,aAAagqC,GACbA,EAAQ,KACZ,EAGJ,CAzBwB,GA2BlBqO,EAAgB,W,uJAETjM,EAAU,EAAC,YAAEA,EAAU8K,GAAY,CAAAv3C,EAAAoD,KAAA,SAIzB,OAHXyB,EAA2B,KAAI7E,EAAA+O,KAAA,EAAA/O,EAAAoD,KAAA,EAGdkzC,EAAOp0C,EAAK0E,GAAQ,OAA7B,GAAR/B,EAAQ7E,EAAAuD,OAEJkpC,EAAU8K,GAAY,CAAAv3C,EAAAoD,KAAA,YACM,MAAxByB,EAASghC,YAA8C,MAAxBhhC,EAASghC,WAAkB,CAAA7lC,EAAAoD,KAAA,SAEV,GAA1Cu1C,EAAW9zC,EAASjC,QAAQ+1C,UAAY,GACvB,QAAnB/xC,EAAQjD,SAAoBg1C,EAASnmC,MAAM,WAAU,CAAAxS,EAAAoD,KAAA,SACrB,OAAhClB,EAAM2C,EAASjC,QAAQ+1C,SAAS34C,EAAAC,OAAA,uBAAAD,EAAAoD,KAAA,oBAIL,MAAxByB,EAASghC,WAAkB,CAAA7lC,EAAAoD,KAAA,SAEf,GAAfw1C,GAAW,GACXnB,EAAkB,CAAFz3C,EAAAoD,KAAA,SACL,OADKpD,EAAAoD,KAAA,GACCq0C,EAAiBhL,EAASvqC,GAAI,QAA/C02C,EAAQ54C,EAAAuD,KAAA,YAGRq1C,EAAU,CAAF54C,EAAAoD,KAAA,SAWR,OAVIi8B,EAAQ,EAENwZ,EAAah0C,EAASjC,QAAQ,eAEhCy8B,EADuB,kBAAhBwZ,GAA4BA,EAAWrmC,MAAM,iBACrB,IAAvBF,SAASumC,GAETnB,EAAuBplC,SAASlM,OAAO0L,KAAKgnC,SAAWhnC,KAAK6U,IAAI,EAAG8lB,KAG/EzsC,EAAAoD,KAAA,GACM8zC,EAAQ7X,GAAM,eAAAr/B,EAAAC,OAAA,uBAAAD,EAAAoD,KAAA,iBAAApD,EAAA+O,KAAA,GAAA/O,EAAAwX,GAAAxX,EAAA,SAQhB,OADhB6E,EAAiB7E,EAAAwX,GAAO3S,YAEpB2zC,EAAeC,SACflyC,EAAO+I,WAAW,mBAAoB9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC9DqS,YAAajB,EAAQvwC,EAAQmrC,KAAMuG,EAAY,iBAC/CD,cAAezxC,EAAQjD,OACvBkwC,YAAW7zC,EAAAwX,GACXtV,IAAKA,KAEZ,QAkBJ,GAdG6vC,EAAOltC,EAASktC,KAEhB4F,GAAoC,MAAxB9yC,EAASghC,WACrBkM,EAAO,MACCnM,IAAqB/gC,EAASghC,WAAa,KAAOhhC,EAASghC,YAAc,OACjF2S,EAAeC,SACflyC,EAAO+I,WAAW,eAAgB9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC1DhJ,OAAQl4B,EAASghC,WACjBjjC,QAASiC,EAASjC,QAClBmvC,KAAMoF,EAAQpF,EAAQltC,EAASjC,QAAWiC,EAASjC,QAAQ,gBAAiB,MAC5Ew1C,YAAajB,EAAQvwC,EAAQmrC,KAAMuG,EAAY,iBAC/CD,cAAezxC,EAAQjD,OACvBzB,IAAKA,MAITm1C,EAAa,CAAFr3C,EAAAoD,KAAA,SAEQ,OAFRpD,EAAA+O,KAAA,GAAA/O,EAAAoD,KAAA,GAEci0C,EAAYtF,EAAMltC,GAAS,QACxB,OADlBnE,EAAMV,EAAAuD,KACZi1C,EAAeC,SAASz4C,EAAAC,OAAA,SACjBS,GAAM,WAAAV,EAAA+O,KAAA,GAAA/O,EAAAyX,GAAAzX,EAAA,YAITA,EAAAyX,GAAMshC,eAAiBtM,EAAU8K,GAAY,CAAAv3C,EAAAoD,KAAA,SAC1B,GAAfw1C,GAAW,GACXnB,EAAkB,CAAFz3C,EAAAoD,KAAA,SACL,OADKpD,EAAAoD,KAAA,GACCq0C,EAAiBhL,EAASvqC,GAAI,QAA/C02C,EAAQ54C,EAAAuD,KAAA,YAGRq1C,EAAU,CAAF54C,EAAAoD,KAAA,SAGR,OAFMmlC,EAAUmP,EAAuBplC,SAASlM,OAAO0L,KAAKgnC,SAAWhnC,KAAK6U,IAAI,EAAG8lB,KACnFzsC,EAAAoD,KAAA,GACM8zC,EAAQ3O,GAAQ,eAAAvoC,EAAAC,OAAA,uBAK9Bu4C,EAAeC,SACflyC,EAAO+I,WAAW,4BAA6B9I,EAAAA,GAAO0F,OAAO65B,aAAc,CACvEgM,KAAMoF,EAAQpF,EAAQltC,EAASjC,QAAWiC,EAASjC,QAAQ,gBAAiB,MAC5E9B,MAAKd,EAAAyX,GACL2gC,YAAajB,EAAQvwC,EAAQmrC,KAAMuG,EAAY,iBAC/CD,cAAezxC,EAAQjD,OACvBzB,IAAKA,IACN,QAOX,OAHAs2C,EAAeC,SAGfz4C,EAAAC,OAAA,SACoB8xC,GAAK,QA1GiBtF,IAASzsC,EAAAoD,KAAA,uBAAApD,EAAAC,OAAA,SA6GhDsG,EAAO+I,WAAW,kBAAmB9I,EAAAA,GAAO0F,OAAO65B,aAAc,CACpEqS,YAAajB,EAAQvwC,EAAQmrC,KAAMuG,EAAY,iBAC/CD,cAAezxC,EAAQjD,OACvBzB,IAAKA,KACP,yBAAAlC,EAAAE,OAAA,GAAAC,EAAA,0B,CAnHgB,GAsHtB,OAAOV,QAAQu5C,KAAK,CAAER,EAAeh5C,QAASk5C,GAClD,CA4CWO,CAAgBj3C,EAAY+vC,GAzCb,SAAC5yC,EAAmB0F,GACtC,IAAInE,EAAc,KAClB,GAAa,MAATvB,EACA,IACIuB,EAASsC,KAAKoiB,OAAMqb,EAAAA,EAAAA,IAAathC,G,CACnC,MAAO2B,GACLyF,EAAO+I,WAAW,eAAgB9I,EAAAA,GAAO0F,OAAO65B,aAAc,CAC1DgM,KAAM5yC,EACN2B,MAAOA,G,CASnB,OAJIu2C,IACA32C,EAAS22C,EAAY32C,EAAQmE,IAG1BnE,CACX,GAwBJ,CAEM,SAAUykC,EAAQz+B,EAAwBE,GAO5C,OANKA,IAAWA,EAAU,CAAC,GAEN,OADrBA,GAAUoE,EAAAA,EAAAA,IAAYpE,IACVmL,QAAiBnL,EAAQmL,MAAQ,GACtB,MAAnBnL,EAAQsyC,UAAmBtyC,EAAQsyC,QAAU,KACzB,MAApBtyC,EAAQuyC,WAAoBvyC,EAAQuyC,SAAW,KAE5C,IAAI15C,SAAQ,SAASH,EAASC,GAEjC,IAAI8qC,EAAsB,KACtB3yB,GAAgB,EAGd+gC,EAAS,WACX,OAAI/gC,IACJA,GAAO,EACH2yB,GAAShqC,aAAagqC,IACnB,EACX,EAEIzjC,EAAQ2hC,UACR8B,EAAQvqC,YAAW,WACX24C,KAAYl5C,EAAO,IAAIwB,MAAM,WACrC,GAAG6F,EAAQ2hC,UAGf,IAAM6Q,EAAaxyC,EAAQwyC,WAEvB3M,EAAU,GACd,SAAS/T,IACL,OAAOhyB,IAAOjG,MAAK,SAASC,GAGxB,QAAe5B,IAAX4B,EACI+3C,KAAYn5C,EAAQoB,QAErB,GAAIkG,EAAQ0nC,SACf1nC,EAAQ0nC,SAAS5O,KAAK,OAAQhH,QAE3B,GAAI9xB,EAAQyyC,UACfzyC,EAAQyyC,UAAU3Z,KAAK,QAAShH,QAG7B,IAAKhhB,EAAM,CAEd,KADA+0B,EACc2M,EAEV,YADIX,KAAYl5C,EAAO,IAAIwB,MAAM,yBAIrC,IAAIwnC,EAAU3hC,EAAQuyC,SAAW7mC,SAASlM,OAAO0L,KAAKgnC,SAAWhnC,KAAK6U,IAAI,EAAG8lB,KACzElE,EAAU3hC,EAAQmL,QAASw2B,EAAU3hC,EAAQmL,OAC7Cw2B,EAAU3hC,EAAQsyC,UAAW3Q,EAAU3hC,EAAQsyC,SAEnDp5C,WAAW44B,EAAO6P,E,CAGtB,OAAO,IACX,IAAG,SAASznC,GACJ23C,KAAYl5C,EAAOuB,EAC3B,GACJ,CACA43B,EACJ,GACJ,C","sources":["../node_modules/alchemy-sdk/src/internal/request-batcher.ts","../node_modules/alchemy-sdk/src/api/alchemy-provider.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/alchemy-sdk/node_modules/node_modules/minimalistic-assert/index.js","../node_modules/alchemy-sdk/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/alchemy-sdk/node_modules/node_modules/inherits/inherits_browser.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/alchemy-sdk/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/alchemy-sdk/node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/web/src.ts/_version.ts"],"sourcesContent":["import { JsonRpcRequest, JsonRpcResponse } from './internal-types';\n\n/** Maximum size of a batch on the rpc provider. */\nconst DEFAULT_MAX_REQUEST_BATCH_SIZE = 100;\n\n/** Timeout interval before the pending batch is sent. */\nconst DEFAULT_REQUEST_BATCH_DELAY_MS = 10;\n\n/**\n * Internal class to enqueue requests and automatically send/process batches.\n *\n * The underlying batching mechanism is loosely based on ethers.js's\n * `JsonRpcBatchProvider`.\n *\n * @internal\n */\nexport class RequestBatcher {\n  /** Timeout timer that periodically sends the pending batch. */\n  private pendingBatchTimer: NodeJS.Timer | undefined;\n\n  /**\n   * Array of enqueued requests along with the constructed promise handlers for\n   * each request.\n   */\n  private pendingBatch: Array<BatchRequest> = [];\n\n  constructor(\n    private readonly sendBatchFn: SendBatchFn,\n    private readonly maxBatchSize = DEFAULT_MAX_REQUEST_BATCH_SIZE\n  ) {}\n\n  /**\n   * Enqueues the provided request. The batch is immediately sent if the maximum\n   * batch size is reached. Otherwise, the request is enqueued onto a batch that\n   * is sent after 10ms.\n   *\n   * Returns a promise that resolves with the result of the request.\n   */\n  async enqueueRequest(request: JsonRpcRequest): Promise<any> {\n    const inflightRequest: BatchRequest = {\n      request,\n      resolve: undefined,\n      reject: undefined\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    this.pendingBatch.push(inflightRequest);\n\n    if (this.pendingBatch.length === this.maxBatchSize) {\n      // Send batch immediately if we are at the maximum batch size.\n      void this.sendBatchRequest();\n    } else if (!this.pendingBatchTimer) {\n      // Schedule batch for next event loop + short duration\n      this.pendingBatchTimer = setTimeout(\n        () => this.sendBatchRequest(),\n        DEFAULT_REQUEST_BATCH_DELAY_MS\n      );\n    }\n\n    return promise;\n  }\n\n  /**\n   * Sends the currently queued batches and resets the batch and timer. Processes\n   * the batched response results back to the original promises.\n   */\n  private async sendBatchRequest(): Promise<void> {\n    // Get the current batch and clear it, so new requests\n    // go into the next batch\n    const batch = this.pendingBatch;\n    this.pendingBatch = [];\n    if (this.pendingBatchTimer) {\n      clearTimeout(this.pendingBatchTimer);\n      this.pendingBatchTimer = undefined;\n    }\n\n    // Get the request as an array of requests\n    const request = batch.map(inflight => inflight.request);\n\n    return this.sendBatchFn(request).then(\n      result => {\n        // For each result, feed it to the correct Promise, depending\n        // on whether it was a success or error\n        batch.forEach((inflightRequest, index) => {\n          const payload = result[index];\n          if (payload.error) {\n            const error = new Error(payload.error.message);\n            (error as any).code = payload.error.code;\n            (error as any).data = payload.error.data;\n            inflightRequest.reject!(error);\n          } else {\n            inflightRequest.resolve!(payload.result);\n          }\n        });\n      },\n      error => {\n        batch.forEach(inflightRequest => {\n          inflightRequest.reject!(error);\n        });\n      }\n    );\n  }\n}\n\n/** Function type to match the `fetchJson` function in ethers. */\ntype SendBatchFn = (reqs: JsonRpcRequest[]) => Promise<JsonRpcResponse[]>;\n\n/**\n * Internal interface to represent a request on a batch along with the promises to resolve it.\n */\ninterface BatchRequest {\n  request: JsonRpcRequest;\n  resolve?: (result: any) => void;\n  reject?: (error: Error) => void;\n}\n","import {\n  Network as NetworkFromEthers,\n  Networkish,\n  getNetwork as getNetworkFromEthers\n} from '@ethersproject/networks';\nimport { deepCopy } from '@ethersproject/properties';\nimport {\n  CommunityResourcable,\n  JsonRpcProvider\n} from '@ethersproject/providers';\nimport { ConnectionInfo, fetchJson } from '@ethersproject/web';\n\nimport { JsonRpcRequest, JsonRpcResponse } from '../internal/internal-types';\nimport { RequestBatcher } from '../internal/request-batcher';\nimport { Network } from '../types/types';\nimport {\n  CustomNetworks,\n  DEFAULT_ALCHEMY_API_KEY,\n  DEFAULT_NETWORK,\n  EthersNetwork,\n  getAlchemyHttpUrl,\n  getAlchemyWsUrl\n} from '../util/const';\nimport { logWarn } from '../util/logger';\nimport { IS_BROWSER } from '../util/util';\nimport { VERSION } from '../version';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * SDK's custom implementation of ethers.js's 'AlchemyProvider'.\n *\n * Do not call this constructor directly. Instead, instantiate an instance of\n * {@link Alchemy} and call {@link Alchemy.config.getProvider()}.\n *\n * @public\n */\nexport class AlchemyProvider\n  extends JsonRpcProvider\n  implements CommunityResourcable\n{\n  readonly apiKey: string;\n  readonly maxRetries: number;\n  readonly batchRequests: boolean;\n\n  /**\n   * VISIBLE ONLY FOR TESTING\n   *@internal\n   */\n  readonly batcher: RequestBatcher;\n\n  /** @internal */\n  constructor(config: AlchemyConfig) {\n    // Normalize the API Key to a string.\n    const apiKey = AlchemyProvider.getApiKey(config.apiKey);\n\n    // Generate our own connection info with the correct endpoint URLs.\n    const alchemyNetwork = AlchemyProvider.getAlchemyNetwork(config.network);\n    const connection = AlchemyProvider.getAlchemyConnectionInfo(\n      alchemyNetwork,\n      apiKey,\n      'http'\n    );\n\n    // If a hardcoded url was specified in the config, use that instead of the\n    // provided apiKey or network.\n    if (config.url !== undefined) {\n      connection.url = config.url;\n    }\n\n    connection.throttleLimit = config.maxRetries;\n\n    // Normalize the Alchemy named network input to the network names used by\n    // ethers. This allows the parent super constructor in JsonRpcProvider to\n    // correctly set the network.\n    const ethersNetwork = EthersNetwork[alchemyNetwork];\n    super(connection, ethersNetwork);\n\n    this.apiKey = config.apiKey;\n    this.maxRetries = config.maxRetries;\n    this.batchRequests = config.batchRequests;\n\n    // TODO: support individual headers when calling batch\n    const batcherConnection = {\n      ...this.connection,\n      headers: {\n        ...this.connection.headers,\n        'Alchemy-Ethers-Sdk-Method': 'batchSend'\n      }\n    };\n    const sendBatchFn = (\n      requests: JsonRpcRequest[]\n    ): Promise<JsonRpcResponse[]> => {\n      return fetchJson(batcherConnection, JSON.stringify(requests));\n    };\n    this.batcher = new RequestBatcher(sendBatchFn);\n  }\n\n  /**\n   * Overrides the `UrlJsonRpcProvider.getApiKey` method as implemented by\n   * ethers.js. Returns the API key for an Alchemy provider.\n   *\n   * @internal\n   * @override\n   */\n  static getApiKey(apiKey: any): string {\n    if (apiKey == null) {\n      return DEFAULT_ALCHEMY_API_KEY;\n    }\n    if (apiKey && typeof apiKey !== 'string') {\n      throw new Error(\n        `Invalid apiKey '${apiKey}' provided. apiKey must be a string.`\n      );\n    }\n    return apiKey;\n  }\n\n  /**\n   * Overrides the `BaseProvider.getNetwork` method as implemented by ethers.js.\n   *\n   * This override allows the SDK to set the provider's network to values not\n   * yet supported by ethers.js.\n   *\n   * @internal\n   * @override\n   */\n  static getNetwork(network: Networkish): NetworkFromEthers {\n    if (typeof network === 'string' && network in CustomNetworks) {\n      return CustomNetworks[network];\n    }\n\n    // Call the standard ethers.js getNetwork method for other networks.\n    return getNetworkFromEthers(network);\n  }\n\n  /**\n   * Converts the `Networkish` input to the network enum used by Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyNetwork(network?: Networkish): Network {\n    if (network === undefined) {\n      return DEFAULT_NETWORK;\n    }\n\n    if (typeof network === 'number') {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be a string.`\n      );\n    }\n\n    // Guaranteed that `typeof network === 'string`.\n    const isValidNetwork = Object.values(Network).includes(network as Network);\n    if (!isValidNetwork) {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be one of: ` +\n          `${Object.values(Network).join(', ')}.`\n      );\n    }\n    return network as Network;\n  }\n\n  /**\n   * Returns a {@link ConnectionInfo} object compatible with ethers that contains\n   * the correct URLs for Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyConnectionInfo(\n    network: Network,\n    apiKey: string,\n    type: 'wss' | 'http'\n  ): ConnectionInfo {\n    const url =\n      type === 'http'\n        ? getAlchemyHttpUrl(network, apiKey)\n        : getAlchemyWsUrl(network, apiKey);\n    return {\n      headers: IS_BROWSER\n        ? {\n            'Alchemy-Ethers-Sdk-Version': VERSION\n          }\n        : {\n            'Alchemy-Ethers-Sdk-Version': VERSION,\n            'Accept-Encoding': 'gzip'\n          },\n      allowGzip: true,\n      url\n    };\n  }\n\n  /**\n   * Overrides the method in ethers.js's `StaticJsonRpcProvider` class. This\n   * method is called when calling methods on the parent class `BaseProvider`.\n   *\n   * @override\n   */\n  async detectNetwork(): Promise<NetworkFromEthers> {\n    let network = this.network;\n    if (network == null) {\n      network = await super.detectNetwork();\n\n      if (!network) {\n        throw new Error('No network detected');\n      }\n    }\n    return network;\n  }\n\n  _startPending(): void {\n    logWarn('WARNING: Alchemy Provider does not support pending filters');\n  }\n\n  /**\n   * Overrides the ether's `isCommunityResource()` method. Returns true if the\n   * current api key is the default key.\n   *\n   * @override\n   */\n  isCommunityResource(): boolean {\n    return this.apiKey === DEFAULT_ALCHEMY_API_KEY;\n  }\n\n  /**\n   * Overrides the base {@link JsonRpcProvider.send} method to implement custom\n   * logic for sending requests to Alchemy.\n   *\n   * @param method The method name to use for the request.\n   * @param params The parameters to use for the request.\n   * @override\n   * @public\n   */\n  // TODO: Add headers for `perform()` override.\n  send(method: string, params: Array<any>): Promise<any> {\n    return this._send(method, params, 'send');\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `JsonRpcProvider.send()`.\n   *\n   * This method is copied over directly in order to implement custom headers\n   *\n   * @internal\n   */\n  _send(\n    method: string,\n    params: Array<any>,\n    methodName: string,\n    forceBatch = false\n  ): Promise<any> {\n    const request = {\n      method,\n      params,\n      id: this._nextId++,\n      jsonrpc: '2.0'\n    };\n\n    // START MODIFIED CODE\n    const connection = { ...this.connection };\n    connection.headers!['Alchemy-Ethers-Sdk-Method'] = methodName;\n\n    if (this.batchRequests || forceBatch) {\n      return this.batcher.enqueueRequest(request as JsonRpcRequest);\n    }\n    // END MODIFIED CODE\n\n    this.emit('debug', {\n      action: 'request',\n      request: deepCopy(request),\n      provider: this\n    });\n\n    // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n    const cache = ['eth_chainId', 'eth_blockNumber'].indexOf(method) >= 0;\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(\n      this.connection,\n      JSON.stringify(request),\n      getResult\n    ).then(\n      result => {\n        this.emit('debug', {\n          action: 'response',\n          request,\n          response: result,\n          provider: this\n        });\n\n        return result;\n      },\n      error => {\n        this.emit('debug', {\n          action: 'response',\n          error,\n          request,\n          provider: this\n        });\n\n        throw error;\n      }\n    );\n\n    // Cache the fetch, but clear it on the next event loop\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        // @ts-ignore - This is done by ethers.\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n}\n\n/**\n * DO NOT MODIFY.\n *\n * Original code copied over from ether.js's\n * `@ethersproject/web/src.ts/index.ts`. Used to support\n * {@link AlchemyProvider._send}, which is also copied over.\n */\nfunction getResult(payload: {\n  error?: { code?: number; data?: any; message?: string };\n  result?: any;\n}): any {\n  if (payload.error) {\n    const error: any = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"properties/5.7.0\";\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"hash/5.7.0\";\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"web/5.7.1\";\n"],"names":["RequestBatcher","sendBatchFn","maxBatchSize","arguments","length","undefined","_classCallCheck","pendingBatch","_createClass","key","value","request","inflightRequest","resolve","reject","promise","Promise","this","push","sendBatchRequest","pendingBatchTimer","setTimeout","_this","_context","abrupt","stop","_callee","batch","clearTimeout","map","inflight","_context2","then","result","forEach","index","payload","error","Error","message","code","data","_callee2","AlchemyProvider","_JsonRpcProvider","_inherits","_super2","_createSuper","config","_this2","apiKey","getApiKey","alchemyNetwork","getAlchemyNetwork","network","connection","getAlchemyConnectionInfo","url","throttleLimit","maxRetries","ethersNetwork","EthersNetwork","call","batchRequests","batcherConnection","Object","assign","headers","batcher","requests","fetchJson","JSON","stringify","_this3","_context3","next","_super","detectNetwork","sent","_callee3","logWarn","DEFAULT_ALCHEMY_API_KEY","method","params","_send","methodName","_this4","forceBatch","id","_nextId","jsonrpc","enqueueRequest","emit","action","deepCopy","provider","cache","indexOf","_cache","getResult","response","concat","CustomNetworks","getNetwork","DEFAULT_NETWORK","values","Network","includes","join","type","getAlchemyHttpUrl","getAlchemyWsUrl","IS_BROWSER","VERSION","allowGzip","JsonRpcProvider","decode","textData","atob","i","charCodeAt","arrayify","encode","String","fromCharCode","btoa","logger","Logger","ethDefaultProvider","func","providers","options","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","alchemy","PocketProvider","pocket","name","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","sepolia","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","throwArgumentError","defaultProvider","defineReadOnly","object","defineProperty","enumerable","writable","getStatic","ctor","prototype","getPrototypeOf","constructor","resolveProperties","promises","keys","v","all","results","reduce","accum","checkProperties","properties","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","Array","isArray","isFrozen","_deepCopy","freeze","item","Description","info","version","allowedTransactionKeys","forwardErrors","errors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","checkAbstract","blockTag","_checkProvider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","tx","estimateGas","_context4","_callee4","_context5","populateTransaction","signTransaction","signedTx","sendTransaction","_callee5","_context6","_callee6","_context7","getGasPrice","_callee7","_context8","getFeeData","_callee8","_context9","resolveName","_callee9","from","toLowerCase","_context11","to","__awaiter","_regeneratorRuntime","mark","_callee10","address","wrap","_context10","prev","catch","hasEip1559","maxFeePerGas","maxPriorityFeePerGas","gasPrice","feeData","throwError","UNSUPPORTED_OPERATION","operation","nonce","gasLimit","UNPREDICTABLE_GAS_LIMIT","getChainId","_callee11","_isSigner","keccak256","sha3","arrayifyInteger","unshift","unarrayifyInteger","offset","_encode","child","isBytesLike","slice","hexlify","_decodeChildren","childOffset","decoded","_decode","consumed","BUFFER_OVERRUN","lengthLength","bytes","getChecksumAddress","isHexString","chars","substring","split","expanded","Uint8Array","hashed","toUpperCase","ibanLookup","x","safeDigits","Math","floor","log10","log","LN10","ibanChecksum","c","block","parseInt","checksum","match","_base36To16","text","toUtf8Bytes","padding","fill","NegativeOne","BigNumber","Zero","One","MaxUint256","hexTrue","hexZeroPad","toHexString","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","toString","getBaseEncoder","signed","width","boundsUpper","mask","boundsLower","add","mul","lt","gt","toTwos","padOffset","hexConcat","hexPadRight","encodeType","fields","_ref","TypedDataEncoder","types","links","parents","subtypes","_loop","uniqueNames","field","baseType","primaryTypes","filter","n","t","checkCircular","found","subtype","primaryType","st","sort","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","_ref2","encodeData","hashStruct","callback","_visit","_ref3","domain","domainFields","a","b","EIP712Domain","hashDomain","hash","ensCache","visit","t0","t1","done","domainValues","domainTypes","typesWithDomain","minimalisticAssert","assert","val","msg","equal","l","r","utils","exports","zero2","word","toHex","res","toArray","enc","replace","hi","lo","arr","utils_1","getNAF","num","w","bits","naf","max","bitLength","ws","k","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","BN","utils_1$1","assert$1","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","base","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","j","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","ja","jb","tmp","eq","decodePoint","byteLength","pointFromX","encodeCompressed","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","superCtor","super_","configurable","TempCtor","assert$2","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits_browser","short_1","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","s","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","short","mont","edwards","curves","PresetCurve","curve_1","defineCurve","get","crash","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","hmacDrbg","seed","_update","_hmac","kmac","update","digest","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","umod","derive","sign","verify","signature","assert$4","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","assert$5","EC","hasOwnProperty","curves_1","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","EC$1","elliptic","eddsa","_curve","getCurve","SigningKey","privateKey","hexDataLength","other","p0","publicKey","digestBytes","splitSignature","otherKey","otherKeyPair","computePublicKey","_isSigningKey","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","recoverAddress","hexDataSlice","computeAddress","sig","rs","recoverPublicKey","formatNumber","stripZeros","accessSetify","addr","storageKeys","storageKey","accessListify","set","localeCompare","formatAccessList","_serializeEip1559","accessList","RLP","_serializeEip2930","_parseEipSignature","serialize","recid","toNumber","rawTransaction","isZero","raw","_parse","_parseEip2930","_parseEip1559","transactionType","ForkEvent","_Description","apply","_isForkEvent","Provider","getBlock","_yield$resolvePropert","lastBaseFeePerGas","baseFeePerGas","eventName","listener","on","_isProvider","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","_leader","TypeError","byte","reverse","Base58","flat","array","depth","flatDeep","read_compressed_payload","pos","read_payload","u16","symbol_count","total","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","symbols","low","range","start","end","mid","decode_arithmetic","read_ascending","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","read_linear_table","dx","dy","read_zero_terminated_array","ys","_","j_dy","read_replacement_table","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","read","branches","node","size","valid","fe0f","save","check","read_emoji_trie","HYPHEN","UNDERSCORE","explode_cp","toUtf8CodePoints","filter_fe0f","cps","cp","ens_normalize_post_check","_step","_iterator","_createForOfIteratorHelper","label","lastIndexOf","every","err","ens_normalize","emoji_filter","input","output","emoji","consume_emoji_reversed","_toConsumableArray","pop","has","fromCodePoint","normalize","eaten","saved","stack","_a","find","splice","Zeros","checkComponent","comp","ensNameSplit","comps","last","namehash","sha256","Formatter","formats","getDefaultFormats","bind","bigNumber","hex","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","status","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","getContractAddress","hexValue","format","author","_difficulty","_block","gas","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","checkTopic","topic","serializeTopics","unique","getEventTag","isForkEvent","warn","getTime","Date","stall","duration","PollableEvents","Event","tag","once","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","RegExp","matchers","_parseString","toUtf8String","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","resolvedAddress","formatter","_supportsEip2544","CALL_EXCEPTION","selector","parameters","ccipReadEnabled","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","words","bech32","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","t3","tokenOwner","t4","t5","balance","t6","t7","metadataUrl","metadata","imageUrl","image","t8","ipfs","ipns","swarm","skynet","urlSafe","base64Encode","keyBytes","defaultFormatter","nextPollId","BaseProvider","_Provider","_events","_emitted","disableCcipRead","getFormatter","_assertThisInitialized","anyNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","poll","NETWORK_ERROR","event","calldata","urls","sender","errorMessages","href","json","errorPassThrough","statusCode","errorMessage","SERVER_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","makeError","previousBlockNumber","eventBlockNumber","_this5","runner","getTransactionReceipt","minFromBlock","getLogs","polling","_context12","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_callee12","_this6","_poller","_this7","setInterval","_bootstrapPoll","clearInterval","_this8","_this9","now","getBlockNumber","timeout","_waitForTransaction","_context13","_callee13","replaceable","_context16","cancelFuncs","alreadyDone","minedHandler","_this10","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","_callee15","_this11","_context15","_callee14","mined","ti","_receipt","_context14","getTransaction","getBlockWithTransactions","waitForTransaction","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer","TIMEOUT","unref","_callee16","_context17","_callee17","_context18","_callee18","addressOrName","_context19","_getBlockTag","_callee19","_context20","_callee20","_context21","_callee21","position","_context22","_callee22","_this12","expectedHash","returnedHash","wait","confirms","_callee23","_context23","signedTransaction","_context24","hexTx","_callee24","_context25","_this13","_callee25","_context26","_this14","_callee26","attempt","redirects","txSender","_context27","urlsOffset","urlsLength","urlsData","callbackSelector","ccipReadFetch","ccipResult","_call","_callee27","_context28","_getTransactionRequest","resolved","_callee28","_context29","_callee29","_context30","_callee30","blockHashOrBlockTag","includeTransactions","_context32","_this15","_callee31","_blockNumber","blockWithTxs","_this16","_context31","oncePoll","_callee32","_getBlock","_context34","_this17","_callee33","_context33","_callee34","_context36","_this18","_callee35","_context35","_callee36","_context37","_getFilter","_callee37","_context38","_callee38","_context39","_callee39","currentName","_context40","_getResolver","resolver","_callee40","_context41","addrData","_callee41","_context42","getResolver","_callee42","_context43","resolverAddr","_callee43","nameOrAddress","_context44","resolverAddress","getAvatar","_callee44","NOT_IMPLEMENTED","pollable","_startEvent","_addEventListener","_this19","_len","args","_key","stopped","eventTag","_stopEvent","_this20","removeAllListeners","_this21","errorGas","spelunk","requireData","checkError","body","responseText","getLowerCase","_constructorGuard","JsonRpcSigner","_Signer","constructorGuard","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","hexlifyTransaction","ACTION_REJECTED","sendUncheckedTransaction","messageData","_TypedDataEncoder","resolveNames","populated","getPayload","password","_JsonRpcSigner","_BaseProvider","_super3","networkOrReady","_eventLoopCache","_uncachedDetectNetwork","serverError","getSigner","connectUnchecked","prepareRequest","_startPending","_get","_getPrototypeOf","_pendingFilter","self","pendingFilter","filterId","hashes","seq","listenerCount","allowExtra","allowed","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","Utf8ErrorFuncs","ignore","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","str","form","current","checkNormalize","pair","codePoint","getUrl","skipFetchSetup","mode","credentials","redirect","referrer","fetchOptions","opts","fetch","arrayBuffer","statusMessage","statusText","staller","bodyify","trim","processFunc","updated","attemptLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","user","allowInsecureAuthentication","INVALID_ARGUMENT","argument","authorization","reData","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","cancel","runningFetch","location","tryAgain","retryAfter","random","throttleRetry","race","_fetchData","ceiling","interval","retryLimit","onceBlock"],"sourceRoot":""}